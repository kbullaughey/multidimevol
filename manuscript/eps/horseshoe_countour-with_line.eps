%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: horseshoe_countour-with_line.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Kevin Bullaughey
%%CreationDate: 5/23/12
%%BoundingBox: 0 0 529 257
%%HiResBoundingBox: 0 0 528.8520 256.6172
%%CropBox: 0 0 528.8520 256.6172
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2011-06-29T18:12:28+09:00</xmp:MetadataDate>
         <xmp:ModifyDate>2011-06-29T18:12:28+09:00</xmp:ModifyDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2011-06-29T18:12:28+09:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>124</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAfAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7L+U+g+dtGuddPmO1SJN&#xA;anGsI8VwtxwurpnFxbvshRokSJQE5R0GznFJeiYodirsVdirsVdirsVdiqQeYvMV9plxHFbWfrqV&#xA;DyOeVApLAn4Q1OHEFidqHFU8hkMkMchUoXUMUbqKitD8sVX4q7FXYq7FXYqw+PRZ4/zButSv9FOp&#xA;JOITpGtg2zfo+NISksNJpEnj5ycmrCjcufxdMVZhirsVef8A5rfms3kJ9KVdMTUTqYuD8dz9VCfV&#xA;/S/4qn5cvW9qUxVgY/5yjvT08pr/ANJ8n/ZHirj/AM5R3o6+Uh/0nyf9keKuX/nKS5YkL5XhYjqB&#xA;qZP/AGKYqpt/zlTeIaSeUkSpoC2pGh+kWhGKqcn/ADlfdxtRvKSAH7LfpI0J8P8AeTFVJ/8AnLa5&#xA;V+J8ooD2P6SND8v9ExVRP/OX9wCQfJ68h+z+kj/2SYqot/zmTKqk/wCDgadR+kjX/qExVRf/AJzS&#xA;dV5f4NBHtqf/AGaYqpP/AM5slRX/AAXX/t5/9mmKqf8A0O//AN+X/wBzP/s0xVk35Xf85WDz3570&#xA;3yp/hc6adR9f/TPr3r8PQt5J/wC7+rxV5elx+13xV79irz3yd+bI8zeYdd0dNL+qDRblbYXBnEvr&#xA;VuBCzcQiBfhZW2Zuu9AVLqvQsVdirsVdiqHurqSGa1jSL1BcS+m7cgvABGflQ9fs9P8AaKqIxVRv&#xA;L20srZ7q7mSC3jFXlkIVR26nFWM31z541TUdOudA9LTtGiZzejUoyJLlWACenEB6iBd/tlG9qdVU&#xA;1ZPN8XxLLp97/wAVGOa0/wCSnqXf/EMVWDzPFbUXWrWXSWO3ry0ktSem1wlUX29TgfbFU5R0dFdG&#xA;DIwBVgagg7ggjFW8VdirsVdirsVY/H540WTzk/lAJdDV0ga6PK2lWAwpwq6zMoRl5Shag05fD1xV&#xA;5T/zknKJbry6EYx+kt+JHljdV62w+EtwDdOoOKvGliVhUTO/iYlDL+CvT78VbaEAVMsqU/adKL9J&#xA;KD9eKqbW5lWv7q5UeGxHyqWFfpGKodrffgpKkihgm3r40bevv1xVCSW+5VVod+Vu9Nx/k9v4fLFU&#xA;DNAOBoC0XdTXkhH44qgJ4DsGO/8AuuTx9j/n/YqgJ4SSWApIPtr44qgJowPiH2D1HhiqClj4H/JP&#xA;T+mKoSWPiaj7J/DFXpv/ADjEo/5Xp5Zbv/p3/dPuMVfe+KvDvym1a8v/ADp53MlzYT2X6UT6k1qu&#xA;mxzmNb/g3rRWrfW0pIHINwDz5cga15KvccVdirsVdiqWa7fR2KWdzICypcU4jqS8UiL16bt1xVh9&#xA;35gttRnkvBetaXMgWLT9OWQPPM3SsEcbUehIbl0/mIXfFWU2Oj3N1dR6prYV7uM8rOxU8oLXrQjs&#xA;81NmkPTotBWqqdYq7FXEAggioPUYqkreWLe3YyaNPJpMpqTHBRrZif5rZqx79ynFj/Nirf6Q8xWZ&#xA;AvtPW+iHW609qNT+ZraYgqPZJHOKq9j5j0W9n+rQ3QS8pX6nOrQXFPH0ZgklPfjiqZYq7FXYq6gq&#xA;GpuNge9D/tYq8X/5yIid7zy0URHZUvyC5pTe26GjYq8jKcW4zXUaHqQoCt/wzN+rFWmWJfs3i/8A&#xA;PTgfu48MVU5LRpAHaOO5FPhljPF+v7NT/wAb4qhZLfkDGp9UDdreX4ZAOlVJp9Ff+CxVBzW4YFQG&#xA;kVTuhqJY+23c/rPviqBngNQ3IVOyTjofBXA/z/ViqX3Fv9oFdv8AdkXcf5S0/wA/pxVLp4egrUn+&#xA;6k7MPA0xVLp4ftMF9pExVL5Y1od+UZ2B609sVQkkZXY7qehxV6R/zjNEV/PLy0R9n/Tf+6fcYq+8&#xA;WBKkA8SRs3Wh8d8VedeSfy31Tyg15Nd6xbajHeTwcLe10mx0xYz9bDgl7VVeTZujk4q9GxV2KuxV&#xA;2KsY8z3N5azSPCsV9ezIBpGk8SXlkSOVW9Sp4iPnMvJ9go6npiqXeTdD07U5bPzRrKWsvmoIx42r&#xA;/urVSDGY40VmB2+07cjUmjcaYqzjFXYq7FXYq7FXYqo3djZXkXo3lvHcxVB9OZFdajoaMCMVVsVd&#xA;irsVdirx78/44nu/LokVpP3d9xjXl8RJttiB1Hz2xV5nDa3AXjFDHbRncA7kfNEov/DYquaOVXCN&#xA;dQq5pRShqa+3qYqoTae5Jd7VHY9XgfhIfpPp7f7LFUJLb8z6ZPq9xFKDHKKdShotfoH04qgprYk8&#xA;fiZk34n4Z0Ffudf8/ixVL54Nmeq0avN6Ujb/ACZFNSjdq/7WKpdcWprx4sCtSB1dR7dea/5/JVLZ&#xA;7etaAEP2B+F+9UPZv8/fFUl1ANzW3iakzg1lpvGg6lx+A98VQzWYjXgi023QmobxIJ61xVBywdQB&#xA;yHdD1GKvQv8AnGyLj+d3lsg/DW92PUf7j7jFX3ViqF1P/eZP+M9v/wAn0xVFYq7FVk9xBbwvPcSL&#xA;DBGOUksjBVUDqWY0AGKpKdav9UrHoMQ9A7HV7lWFuPeCP4Xn9iOKf5Z6YqjdK0W20/1Jeb3N9PT6&#xA;1fzkNNLx6AkAKqip4ooCjsNziqsdNtya85/+kif/AJrxV36Mtv55/wDpIn/5rxVpNLgjuo7lZZ+U&#xA;YZfTaeVo25d2VmINO2KovFXYq7FXYq7FXYq7FXYqxuPyJpsfmtvMq3l59ceX1ntvVX6ux+rm2VWT&#xA;hyZUVmZatsSabbYqwn867Z11DQzBUvKl8XaR3dV+K33ClvfotMVecG3tVYo6vezLuyGjAV9jxjXb&#xA;6aYqrJHMsZjW1hSNuqByB9IEdMVUmsh1FnCp/mico/0FUU7/ADxVQngXgVkDrGSCI7lBKgA780J4&#xA;/N2xVCXFn+5DMB6X2kZmaWLcVqsw+NOv2m+jFUBcWMgk3DCQ7LUqHI/yX+xIKdA24G+KpZcWNFI4&#xA;gIhrSjBVPiR9uL8VpiqU6lEltBLNOeEajm/IDce6/Zf5rv0GKpRbadMIzczClxckMdwSo/ZjVzse&#xA;I2IbvU4qoT2dAwAFFpyFCAPmv2k+fTFUBPaHaor/AC1O/wDsW6H5HFWef848W/D86fLjGlQbzqKN&#xA;/vBcffir7bxVL9evLOy003V5PHbW0U1uZZ5nWONR9YQVZmIAxVLX8/eXGbhZSvqEh+z9WWsZ+U8h&#xA;jt/+SmKrTrerXm0c+n6VCf25plurj3BijaOJT4H1XHtiq6HT/LZmW41DUF1W6Q8o5byaN1Q9jHCv&#xA;CFCP5lTl74qnH6W0r/ltg/5Gp/XFXfpbSv8Altg/5Gp/XFXfpbSv+W2D/kan9cVd+ltK/wCW2D/k&#xA;an9cVd+ltK/5bYP+Rqf1xV36W0r/AJbYP+Rqf1xV36W0r/ltg/5Gp/XFXfpbSv8Altg/5Gp/XFXf&#xA;pbSv+W2D/kan9cVcNV0tiALyAk7ACRKk/fiqKxV2KuxV2KvKvztMpv8AQI49meO95P8AyqGtqn59&#xA;h9+KvPooixMFvSOOM/vZOpBPxUFf2jWpJ/HFVWa20y2hkuLrh6USl5J7g8gqgVY1fZR402xVJ01B&#xA;78A6PoSy27fYvb0LaQMKVDIvCSdga7H0wD2OKoN7fzHyFdVt7SPcOtrbPKOQ6JG08knKlOixgdsV&#xA;Qc8aws8kutX5DbhEa1jq1ftMYYVB32+HkfHpiqTTPpiI0Rv74xljyX6y/FQDX4VBHIe/JTXemKoW&#xA;e80b1eatd8gKKv168+IV68zJX6OP04qgGn0TlCSJZPRkEqmSaaVVZTUcYpJGQEdjviqpLrdmzyEq&#xA;p5gArWqGlakmlfb7PbFUHLqFtxjBNCvSY77dwKcq19/14qhXuLVmNAODD4kFGqa9eK1pirOPyCKf&#xA;8rh8vAbDleFFbrT6hPir7NxV2KuxV2KuxV2KuxV2KuxV2KsM/Mi7/MqFdHj8kW0MxnuuGqTzcGMU&#xA;JAAbi7IOO5LEVOwoN8VYXBqX/ORt9c231jTLfTmZrmVkjMDQRr9WcWiu/ql5CZyRKlKUVGDbkYqg&#xA;TrP/ADkvc6uJZdHWzs24vbQQ/VHRTNHy9K4Zp1bjGzhGdQSONQDviqY6Zef85CyeWtUjvrSO31Oz&#xA;k0r9FNH9XkkniFwovg7PIUJNuOT1A+IsFPgqprdf85DT6rwubYQ2Vtd6bxuLYWoMtuZo/r9UaRgf&#xA;3Qag7VIBr0Ve0Yq7FWJRecvMH+LZ9Hl8sXcmkJIsUevW5PogvQD1YrhLd6And4PVUdSetFVWDzjq&#xA;UvnaXy42g3kdlGpK6y0c31dqRiTl6npfV+JJ4ACYvy6oBvirEfzmuWF7o7SQvGsUV9RjwPMBrf7I&#xA;VmP30xVg8CSRRR28YD3LAs/XiCTVmPtU7YqlPme006aTSrC8mRxc38a3ZkK7LHDJOqhSfgDyRIvv&#xA;UVriqYXFw3ovAJVlalRLEagqDWjhalKr1anEdfbFUh1G8hIc12oQFG/wAKtB1UgNy9iaHcDZVieq&#xA;TxFmqWO5BO/yPX/P7Ne5xVjN69f2mr367g/2/wCfbFUqleQnctQ/a7bj54qhWackhqle2xH66fqx&#xA;VrlL/lfhiratMPsswr70H4YqupNXqre1K/qXFXpX/OO4I/OHy4CtGreEkALX/QLjtUnFX1v5W87a&#xA;X5kutUtrKG4hk0qd7eYzqgEnCaW39SMo8nwmS2kHxcW2rxoRVVkGKuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV5Z+dA5ap5bQ/ZYXtf9gbdx+KjFWF2qK6BmYotwGmlkBofRSgUA9VqrD8&#xA;ehxVR8w6LeXmj0sECXtkY9QtLUt6MatE/qcZXFGDShXQmoAqfDliqtp6W2v2CT2/KWIkq0EnrLNH&#xA;KlVZJYQ1wyFGBDBuJrtXFUNP5PmuZG9ODkQacbcrLwKnoeBen+yxVJLnyLJyaPiAybFGqtDSn2aH&#xA;+GKpZP8Al84pWNgKj4yK/gnPfFUJJ+XcjoPTiqT8LdKAjrtUMOnTFUO3kAmpCcivXbYbVrRvi3GK&#xA;qB8iABax7H9oVrWtOhr4eGKqI8lstSYqnoFUVJPX/OmKqTeU2BHwGrEBAopX2DdTirM/yT0P6p+a&#xA;Wgz02DXYB8f9CmB2NTtir6M8p+QtH8sahq99YTTyS61Mbi6Wb0QqsZpp/h9KOIt8Vyw5SFm4hV5c&#xA;VACrJMVdirsVdirsVdirsVdiqyb1TDIISBLxPplunKm1fpxVIvLNp5ot3P6Xn9WNkJozrIwYleIq&#xA;qpuPjrQU6Yqns9xBbxNLO6xxLTk7GgFTQfeTiqjY6lYX8Rls50njU8WZDWjDsfA4qicVdirsVdir&#xA;sVShPNvlx9bbQ1vozqqv6X1Wjci/pNMQppxbjGhLUPw9DQkYqwP85zTVvLTHoBfVPzECj8SBirCb&#xA;QqLKQNsfqYQexjDLIPahK4qyO1XldcD9lrsch48IBIv3OoOKqM3lBL69S/0u7k0nVL0PPdXMY9SG&#xA;5ijYCKK6tiypIOEgFdnABXlviqumqeZLS2t217QPr63AVYL3Swbu3RCOQLae5SdWCKTRPV325U2x&#xA;VOtI8x+T9Uu10zTdXU6jsGt7uaSznQ/ZVfqJ+rSV/wAngvua9VWR/wCGrbgWnlSMoK+tBEkTbblm&#xA;kk9Z6+/LFULN5QgueM7NDd1AZfUM4Lim37wTPQEf5J+WKoCfypA8gjliCzqCY4peIhfvWN4FjFfH&#xA;1I2P+TTFUtu/LFpGkkzVTgCLiRwPUjAH7QXipip/vrhRdt96KpXd+XLaMuCgjMQCtQV9NWqAwoVr&#xA;EabnZxQ1alcVSe50KEEqIuLAmIpXYNSvp8gBRWXdWFK1+ME4qifI9lDB5/0F0FCZbgKWFGK/U7jb&#xA;/JKH4WToNiAvTFXu2KvIfy18/eata85+bdO1G/8ArNnpd6sFnD9XiiEaG+aHjVVD19Pb94TXoPiR&#xA;yVXr2KuxV2KuxVTubm3tbeS4uJFigiHKSRzRQB4nFUvt9VggeSDULtFuWllaONwEZYfVZY9vDiB8&#xA;WKojVNXs9NiR7gs0krcLe3iUvNK/8saDc+/YDckDfFUCsPma/HOa4XRoW+zBAqXFyPAvLIHhB8VE&#xA;bf6xxVL9C8iP5fgni0jW74C4ne6lS8EFyjSy05E/uo5N6fsuMVXa3fanaaZMdcsDeWMFLh73Sz8a&#xA;/V2Eys1vK3NaFB9h5PegxVV8iXnly/0VNR0KR2t7oKzxzMDNGQKcJBViG6ncmta1IpirI8VdirsV&#xA;dirsVSg+U/L/APiRPMf1KEaukUkQuRHHz/ehFZ+fHnz4RKleX2dsVeefnZFbW95o0scSJJ6d5PJx&#xA;UAv6Uls+5A3P9cVYhbLyYw1pyM1uW8PXAlDU9j8P+dMVTyzuf93gBd4ronrTb0pxTvwjG/epxVP7&#xA;BxDMjNsY55IJDXbjcsJEIH+sUX78VTezlCQW3I0XTp/SnA3ITg0aMe32JEdj2FcVR1xpWj39xNY6&#xA;xZW99a3REsEd3EkyGQJwkQK4YV4RhvE79hirH9f/ACg8tXdmIdMF5pMfqRyPFpt7cWyr6bq9YYOZ&#xA;tRJRSi8o6AMaFTQhVl1lbGOeN0gaFViKXEshiEk8h4UkdYfgLUU1O3XYUxVdq3H6vGOrmeH0x3qJ&#xA;AWp/sA1fauKoC6CjVIyv2jA/q08A6+ny+9+P04qx6OONo9PR1DK9m6kNvyT90PiB9jiqQXYLWfqM&#xA;S8n1KOVmqah4SZEJrWvJifuxVU8rRoPPWkkD7F5Pw9uenyu33sa4q9kxV4X+T115QvfNfnHUNAVw&#xA;97qUc1wXuLic1+venyHOytoQspj5rS5nIr+z8WKvdMVdirsVdiqE1dOelXiceVYZKLStTxNNsVYr&#xA;5r1DRbfzDbaOLG5vdb1iFjaxRkJbhYvhYyyn7ClftEKxCjYVpVVkWk6L9Vme+vJfrmrTjjNdkcVV&#xA;K1EUKEt6cY8K1PViTviqZ4q7FXYql+o6BpV/MLiaEpeIvGO9gZobhR4CWMq/H/JJp4jFUL9W80WQ&#xA;/wBGuodVhH+6r0fV56f8Z4VZDTsDD82xVdH5kjjKpqlnc6Y525zIJIfCvrwGWJR4cyp9sVTjFXYq&#xA;7FXYq8m/PNvTvvLs3aJb1mr/ACk26sfoUk4qwO0agEXLiy0t+R/Zkj/eW7Gu3Q7+LEDFU+srhCBI&#xA;qFlHKVI+rFXNLiIgVqVb4qeO3bFU3tZI0BSRvVRY/Sn+IkyWp+xKCOpTkQae5/lxVO7S6k5V2muO&#xA;AE0e3G5g34yRmtOQruPoOxVsVTOC7ha14Nyu9PJorpyM0JU1Cso/eVRhsR8amlRUFsVR1reXZQtZ&#xA;3MOoQqeIDtxdT3DSxhwadKFK+JxVENd6qfhWCBK/7sMrvx9+Hppy/wCCGKoFr6JLg8pTf36/D6UQ&#xA;okVexAqsfzc8j2r0xVA3EzlpoRKGvJQBeToaCBONQqnqpAb4Pny+aqUXdx6o5Qfu/VT6vYKPhKx1&#xA;HqTClKClCPkvQtiqS3UkMjcIiBHOUihVacTb255O1P5WLFK9KFcVd5RmaXzvoTL0mnuJ3P8Akmyn&#xA;SGoPTkg+8Yq9okRXRkb7LAqfkdsVYH5T/Kvy75IjuJtKd5Jbya3WaSWGzRyBdK45SW8EEj05ftsc&#xA;VZ7irsVdirsVSjUtckW5bTNKjW81agMikkQ26t0kuHH2fFUHxN22qwVXWGgi0WSX63K+oXJDXt9S&#xA;PnKVFFWjK4SNK/Ai7D3JJKqL+pXP/LfP/wADB/1SxV31K5/5b5/+Bg/6pYqghB5gMkoMpCK5ETGW&#xA;KrJQEMQLU0Pt/t4q1NZa7LC8f1lk5gjmk0asK9wfqvXFU2iVkiRWJZlUAsTUkgdSaD9WKrsVdirs&#xA;VdirsVYoukeYY/zH+vnWL2TQJbCVjpTJF9VS5DxIvGRUDfYDNxYk1qa02xVhH57G4ivtCmldHiVL&#xA;74FQqfTLW4YMSzcqCh2A6YqwK3kUEh3ICqI5WrvxrWKWp/lNd/me2Kpxa3DftEJKGHNgNo5wKB6f&#xA;ySDY7/xoqm9rdhBWvoBHqK7+jIx+JW6Vik8f1bcVU0huAKw8GAjrJ9XQ/vYiNg8B25Jv096f5OKp&#xA;hFeFiZwXJFVa+tAPUHEU4zQkGrCvTi3yXFUQl3HczBXWwvrnjT4/3Mqhd+JjYTN137fLFVeSN+BM&#xA;1pDMig7XFzJKqgb7epG4HTFUN+kkeMRRzqYgKLbacpNP8hpgeK/P4MVQk1yoItlRfg3XT4T0J3DX&#xA;EnvWtO+/28VS66uhIrsZOYb4bi5QH4qH+4gpv7Ej/iW6qpXdyhmkV9qhRcBdxHGACkCU6s1d6b7/&#xA;AOriqM8nu/8AjjRAygStNM9w3XjWyuOEQIPVR1+/9rFXtWKoXU/95k/4z2//ACfTFUVirsVQWpaz&#xA;pmmqn1ycI8lfRgUF5pCOoiiQNI59lU4ql/LzBq+yq+iaeftO3Br6VfBQOaQA+JLP7IcVTTT9NsdO&#xA;thbWcQiiBLEAkszNuzuzEs7N3ZiSe+KonFXYq7FXYq7FXYq7FXYq7FXYq7FXYq81/OHyxr+uXOif&#xA;oW1+tTWoumlT1I4/3bmAEVkZAa029xirBIPy2/MGJQP0G5Efwqv1izo0R/YP7/t2/wBvFUZ/gfzz&#xA;axPNJo0nCBTyLT2hDwgVKuBMfs9jufvNVUyh8m+eEao0mUFB+5kM1oxKnrHIPX+IDsa1/WVUUnlX&#xA;zgqRqdElMYIPo/WLXlCaUrDKJgdt6A0+YG2Kq40LzUboxvpM0zqqlp1mtoJ1RiwFWjmCuKg7fDSm&#xA;Kox9C82vH6b6fJOjULLdCyk+7054h94OKqUug+YYgrtosS/Gqq3pWx+JmCr0uvE4qqT6J5vdCX0+&#xA;7lY/7qjmtII6/wCssxlA/wBkcVQj+WfNpg4foWQRj7NlFNaRxf7NvV5N77UP8uKoQ+WvOU9JItLl&#xA;Z6tGZfUtAsXAlGWKMzUrUHdvxG2KqH+DPOo+JNFkBUkQKZ7RgC3WWQmarN/nXeuKovyr5U802PnD&#xA;R7m+06S2sYJpuUzy27lme0nBZhFI7bs1Kcf4UVeu4qgNcnFvpzTmOWVYpYHaOCN5pCFmQnjHGGdv&#xA;oGKpYfNGpTHjZaJdKO0t8rwRkewiS5l/4JBiq0rqt2R9f1K4gi722n2c0NRX7LzSLLIfnHwOKozT&#xA;rfQtOLtaWkqSyf3tw1vcPNJ/xkldWkf/AGTHFUd+k7b+Sf8A6R5/+aMVd+k7b+Sf/pHn/wCaMVd+&#xA;k7b+Sf8A6R5/+aMVd+k7b+Sf/pHn/wCaMVd+k7b+Sf8A6R5/+aMVd+k7b+Sf/pHn/wCaMVd+k7b+&#xA;Sf8A6R5/+aMVd+k7b+Sf/pHn/wCaMVd+k7b+Sf8A6R5/+aMVcNStyQAk9TtvbzgfeUxVFYq7FXYq&#xA;7FUhv/N2iWfm3TfLs6yHVNRRjbSKgMa1SWUIzVqDIlnKRQU+Dem1VU+xVBa3qFtp2kXl9dRPPbW8&#xA;TPNDEvN2UDcAEgfSSAOpIG+Kt6Nqtrq+k2eqWgcW19ClxCJFKPwkUMtVPscVRmKpPp3mXRL/AMx6&#xA;tolpJ6mp6RFavqFB8KrcmX0k5dyPSao7VxVOMVSHzp5v0Lypo36U1rn9UEqIqxp6jFgDLWlQKIkb&#xA;OTXovjtiqfYq7FUh8pebtE8yQ376SJFTT7uS0uBInCsq0dmXc7Nzrvv4gHFU+xViPnL8yfLHlW5M&#xA;OrpcNLBB9dBih5qI6S82ViVUlI4pHYA14jxIBVZdirsVdirsVdirsVdirsVdirsVYZ+ZGh+f9XXR&#xA;4/KWrJpUcV1z1ZiSrvAQB8DBJK8fi+HapI32xVhcHkT8+Lq5tn1XzNbhla5mlnt5GVI2ltnit1ih&#xA;EI+KCVmYszUcMAV+GuKoE+Qf+chrjVxeXvmG2ZG4vGkN1JElvJJH+9on1d/UjWRzRKjko6jbFUx0&#xA;zyD+dcflrVNOv/Mccl0JNKbRGgnkiEaWdwr3KM4i50eBRGa15sCSNzVVTX8vfzqk1X1b3zElxY29&#xA;3ps1ooupY5TFbzRveKzJCv8AfRpx8Ca7UO6r2jFXYq7FXYqhJtH0qbUrfVJrOGTUrVGjtrxkUyxq&#xA;+zBHIqKio+k+JxVF4qhtS02w1Own0/ULeO6srlDHcW8qhkdD1VlPUYqq21vBbW8dvAgjghUJFGOi&#xA;qooBiqpiqFg0nS7e/uNQgtIYr+6VI7q6SNVlkWMsUV3A5MFLtSvjiqX6h5t0qw8yab5dnWY6lqyS&#xA;SWQSJmjZYQWlLSD4V9MU5V/mXucVR+qaRpWrWptNTtIb21JDGCdFkSo78WBGKovFXYqg9M0bSdLW&#xA;ddNs4bNbmVp7gQIqB5XpyduIFSaYqjMVS7VPLnl/VjXVNOtr40Va3ESSfCjc1X4gduW9MVTHFXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUi1H/Bf+JLD9I/Uf8R/&#xA;D+jPX9P63TjLT0OXx/Z9WvHtWuKp7irsVdirsVdirsVf/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>R 2.13.0</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">R Graphics Output</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>7.509264</stDim:w>
            <stDim:h>3.654656</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.037;PS 2.000;hotconv 1.0.51;makeotf.lib2.0.18671</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.1d18e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>AdobePiStd</stFnt:fontName>
                  <stFnt:fontFamily>Adobe Pi Std</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 1.004;PS 001.005;Core 1.0.38;makeotf.lib1.6.5960</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>AdobePiStd.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811813EE7242CA38E8B</stEvt:instanceID>
                  <stEvt:when>2011-05-25T17:19-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F117407206811813EE7242CA38E8B</stEvt:instanceID>
                  <stEvt:when>2011-05-26T20:17:47-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C38EBCE225206811B1A4B1EF1F421A37</stEvt:instanceID>
                  <stEvt:when>2011-06-29T18:12:28+09:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:cb43c199-7132-c942-9579-90978260a695</stRef:instanceID>
            <stRef:documentID>xmp.did:FA7F117407206811813EE7242CA38E8B</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:F77F117407206811813EE7242CA38E8B</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>xmp.did:F77F117407206811813EE7242CA38E8B</xmpMM:OriginalDocumentID>
         <xmpMM:InstanceID>xmp.iid:C38EBCE225206811B1A4B1EF1F421A37</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:C38EBCE225206811B1A4B1EF1F421A37</xmpMM:DocumentID>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -256.617 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 256.617 li
528.852 256.617 li
528.852 0 li
cp
clp
[1 0 0 1 0 0 ]ct
.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
323.289 210.045 mo
323.289 217.244 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.75021 .679683 .670222 .90164 cmyk
@
363.289 210.045 mo
363.289 217.244 li
@
403.289 210.045 mo
403.289 217.244 li
@
443.289 210.045 mo
443.289 217.244 li
@
483.289 210.045 mo
483.289 217.244 li
@
523.289 210.045 mo
523.289 217.244 li
@
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 48 /zero putdup 49 /one putdup 50 /two putdup 52 /four putdup 54 /six putdup 56 /eight putdef/FontBBox {-951 -481 1446 1122} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings7 dict dup begin/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-/zero <1C60D8A8C9B7EF322BB70D1045F9F84CF5A9E636DA48B0B84345CFB17CDCD64AA529BD23C358113A6F12A7F927F67801E7716DEDB8FBB50D28956279879C3943A67386E5304D963AB3E064E7022317006AA79A8777799C5D39502A7CB330EAEEC28837821C5437B109C741C1D7BCD8EEC785ED017624EE945A52A677F5B0E3B0C4781A3901> |-/one <1C60D8A8C9B7EF322B8DEEDAE6F72EF3709E16C7A593AF17F17D72A3907C7468090579C66DE0263BFE> |-/two <1C60D8A8C9B7EF327699F81B0CD59DC4BD38D48AF11B5B9C1D7787A22BDC09D7BCED9A76C2312055A28AC829584109043EE366AF8632D6D62E9BBD6A4357093750D4015EA59C9F538C44C55AD0DB14FEE0C7267845EB7EFBD514024AA1A03530A8941AD7B5F508335B2FDCA37E6B0627146A6F144DB9DD7DCA6BE86290FB46DD6A2918F4C2C2BDEECA159D78> |-/four <1C60D8A8C9B7EF32298E3DD46F18108137336D1A5C627A90D059BB18158BA2A55FF5DE20CE460964DAF45C08A7D9820A784F4A44F7E1> |-/six <1C60D8A8C9B7EF322BACEC3D6ABEF2D493EDC493AA22ED42125C47DF2396DE843240A24151C3116F0DCEE068EC75B404A70B0E3A92C2307D093030C4F08B5CC0A75F4F4D7C70C5CD3B07E718D5DA84710CE02FF093BE8B5ED477F329DF9AC8554D46651B2A99890C549B5152AB0899BB31DC610CEE59FE1F4C3BE037BFF7F7AE7EDC6D596E9E9398287209A7C703150F7EA84F1C65DCD68CCC47A3B7F9EF77F610D53784F89B61AB4160F9D214F618A6C0032B66C3DB575FE49E073B7AB1C1C6CA> |-/eight <1C60D8A8C9B7EF322BB1E6B7658B273FB04B6EA2FDD83BE014315CEA310C9045661E4654F5FAA18E921C35D5D5266AB0AB839D962ABE974A291E63893114CACA79253F9F2FA5DBD832A15E9A146C3FAF70E186074467C5FF9BFF3446DA2979E197C33ECF2E6672D0ABB4DD84DADA6F0875D027C1012708E022D3B91B078729D3EB37FF9AB4379F6AE8761C6A64E65D5782F4A15C32B5788322C1277C7EEACA49FCEF1A946497EBAE7710FA41A32E95C02F9037E734AB7501DA6FA4D1255B1B5E2A30AD357C72139096879BB9225AA54D6163D99B65B907C933335C31755E7599F49EDF67E30B707AA1BB3DFB155476D77FA4345C2EDAF4F74461> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/LSXWEM+Helvetica /Helvetica findfont ct_VMDictPut/LSXWEM+Helvetica*1 [48{/.notdef}rp /zero /one /two /.notdef /four /.notdef /six /.notdef /eight 199{/.notdef}rp]LSXWEM+Helvetica nfLSXWEM+Helvetica*1 [10 0 0 -10 0 0 ]msf320.509 233.085 mo(0)sh360.509 233.085 mo(2)sh400.509 233.085 mo(4)sh440.509 233.085 mo(6)sh480.509 233.085 mo(8)sh517.729 233.085 mo(10)[5.56152 0 ]xsh323.289 190.045 mo
316.089 190.045 li
@
323.289 150.045 mo
316.089 150.045 li
@
323.289 110.044 mo
316.089 110.044 li
@
323.289 70.0444 mo
316.089 70.0444 li
@
323.289 30.0444 mo
316.089 30.0444 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginLSXWEM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/minus <1C60D8A8C9B7F374C6243061E982D378A14DF0A305> |-/e <1C60D8A8C9B7EF322BB83B593C4F5531F1493EEBEAC6F4C92C25FF10F1FB8EC7E530E4B1F1C9E51F31B44D59539AB4135F310FAB43C5A16AA1F4EA07D67BBB916AB355913EB7D45F3AC7C9CF1FD32728FCA1A2D5BBD257CEF831AE751904AD7F4FBE21E10F3A844E74CF6B850E894017941E45AE6BCDA168BF4979345C67DB13F0C5FE9888EB731B0A06A8D5D1475F60C11332FBE633540E50C86671A26FD83CD870BB68F7A9> |-/f <1C60D8A8C9B854D0E1194BB75B674577C40C65C9DA80CF489EB158487251DB3D0D4CE62FE4588AAD1DAC98153B63C50CB7167E75DAE3557295D61A22E58ED82D181423A4BEB279AE837EE035530BF30960CB0B47037A994CC5880A6489EE> |-/i <1C60D8A8C9B88C084EE8A68C7FA2A58C433876A9B19799899FEF7A13> |-/n <1C60D8A8C9B7EF3217E3BC2FA8BE5FFDDE7BA6B2BB97B82CAF2D20211744A627BCE3171C7124085EFB87C01551538DC74ADD76A4A469E736F37382A8E68FCF64FCF52E65C49BB3C47B4136748A05BC6A02EABE080CF030B375C809CD67343FEE2448D6> |-/s <1C60D8A8C9B7A73DE557A2AA450BB57EE39D611FDE79056DA153DEDE8E0D2C9D756143DA5E614060C362E0813E35369DA2F002330267D2CFA81D3D9AA172C91A8B8E19BB92CE3CFBA62200E9E8175CCCB3A5FA559ECF71DD7F2B47B117C69AC3637EDAE62020C9DAFDDB718C27C76EF62794CF8B187D103B05AC07655F04A6D9D5181CB287F032D98B2512B2A9B281D13745308AC05B350DA95BA0BE14F12630B5B2A718215DC0DE5A544FA267BEF8FD5CF5292808F195D31A5EEC3ADC63> |-/t <1C60D8A8C9B854D0DE8EB299D76AFE3A3E7733E2D967660702D2EB06537F4BAA1F2129056DC9771C91484E3F22B637802F61054AB3D0E9902E08C4E6B9ADDC0E2F51D38CAD652B2A777D9304919B1B524DD7CC56553E03BE971752FD0161CF> |-/x <1C60D8A8C9B7A73DB974843DC052273B2236A049EB6E5FE1C55CD985D3062CB5B3D8A046808C9F7D76A5170CE8699B434328F999D97554357E6BC34F0469> |-/y <1C60D8A8C9B7A73DB9AA12572CE44B37D0759EC5FA4258DA87660F3841304B61A1A911D1876BE6D5484230C2A9DECADC4A3BB259186F9713382F53071656420086C18502612AEB2A0E39781AC31868BC5BE3AB2872591151CD2F994021F04AB4E3C05AD2A97CE0F737B6F0C53FBA3CB18D70D123> |-systemdict /gcheck known {setglobal} if end {end} ifendLSXWEM+Helvetica /Encoding getdup 32 /minus putdup 101 /e putdup 102 /f putdup 105 /i putdup 110 /n putdup 115 /s putdup 116 /t putdup 120 /x putdup 121 /y putpop%ADOEndSubsetFont
/LSXWEM+Helvetica*1 [32{/.notdef}rp /minus 15{/.notdef}rp /zero /one /two /.notdef /four /.notdef /six /.notdef /eight 44{/.notdef}rp /e /f 2{/.notdef}rp /i 4{/.notdef}rp /n 4{/.notdef}rp /s /t 3{/.notdef}rp /x /y 134{/.notdef}rp]LSXWEM+Helvetica nfLSXWEM+Helvetica*1 [0 -10 -10 0 0 0 ]msf308.888 195.744 mo( 4)[-5.83984 0 ]ysh308.889 155.744 mo( 2)[-5.83984 0 ]ysh308.889 112.824 mo(0)sh308.889 72.8242 mo(2)sh308.889 32.8242 mo(4)shLSXWEM+Helvetica*1 [13 0 0 -13 0 0 ]msf420.039 250.364 mo(x)shLSXWEM+Helvetica*1 [0 -13 -13 0 0 0 ]msf291.609 113.295 mo(y)shLSXWEM+Helvetica*1 [0 -11.9596 -11.9596 0 0 0 ]msf25.2383 58.5566 mo(fitness)[-3.32275 -2.65723 -3.32275 -6.65137 -6.65137 -5.97998 0 ]yshgsave
20.8872 107.671 mo
255.369 107.671 li
255.369 8.31445 li
20.8872 8.31445 li
20.8872 107.671 li
cp
clp
1.5 lw
29.5723 98.6558 mo
31.7617 98.2227 li
33.96 97.7627 li
36.1499 97.2759 li
38.3481 96.7788 li
40.5381 96.2632 li
42.7275 95.7207 li
44.9263 95.1592 li
47.1157 94.5796 li
49.3052 93.9824 li
51.5039 93.356 li
53.6934 92.7129 li
55.8926 92.041 li
58.0815 91.3506 li
60.271 90.6328 li
62.4702 89.8882 li
64.6597 89.1245 li
66.8584 88.3242 li
69.0479 87.5059 li
71.2373 86.6494 li
73.436 85.7661 li
75.6255 84.8462 li
77.8154 83.8896 li
80.0137 82.896 li
82.2036 81.8564 li
84.4019 80.7803 li
86.5918 79.6582 li
88.7813 78.4902 li
90.98 77.2666 li
93.1694 75.9961 li
95.3677 74.6631 li
97.5576 73.2729 li
99.7471 71.8203 li
101.946 70.311 li
104.135 68.729 li
106.325 67.0913 li
108.524 65.3896 li
110.713 63.623 li
112.912 61.8013 li
115.102 59.9243 li
117.291 58.002 li
119.49 56.0244 li
121.679 54.0186 li
123.878 51.9854 li
126.067 49.9336 li
128.257 47.8735 li
130.456 45.8125 li
132.646 43.7705 li
134.835 41.7646 li
137.033 39.8052 li
139.223 37.9004 li
141.422 36.0791 li
143.611 34.3408 li
145.801 32.7026 li
147.999 31.1758 li
150.188 29.7773 li
152.379 28.5264 li
154.577 27.4038 li
156.767 26.4473 li
158.965 25.6372 li
161.155 24.9937 li
163.345 24.5059 li
165.543 24.1841 li
167.733 24.0088 li
169.931 23.9912 li
172.122 24.1196 li
174.311 24.3774 li
176.509 24.7637 li
178.699 25.2603 li
180.888 25.8672 li
183.087 26.5571 li
185.277 27.3306 li
187.475 28.1582 li
189.665 29.0508 li
191.854 29.98 li
194.053 30.9365 li
196.243 31.9116 li
198.441 32.896 li
200.63 33.8809 li
202.82 34.8647 li
205.019 35.8398 li
207.208 36.7876 li
209.398 37.7256 li
211.597 38.6367 li
213.787 39.52 li
215.985 40.3848 li
218.175 41.2222 li
220.364 42.0313 li
222.563 42.8223 li
224.753 43.5952 li
226.951 44.3496 li
229.141 45.0952 li
231.33 45.8218 li
233.529 46.5391 li
235.719 47.2559 li
237.908 47.9648 li
240.106 48.6738 li
242.296 49.3818 li
244.495 50.0898 li
246.685 50.8086 li
.653773 .579889 .56878 .366613 cmyk
@
grestore
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginLSXWEM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B854D00D> |-/a <1C60D8A8C9B7EF322B0D17E770BC81022852C5639214CBF49D6EF8BAFB0188062A6BB41F6EB58ADD15E3D1B86AD22624C804FD4A4EBA73D78F7E503599DB65A7EB53D74C4A9A536152BF7A6B13AB96FF2727313FED0263E50A950746CED5AD5E7764E6E353716A8BE8970281B41D9429E56957BD1FCC84205F76AF78E807D18CA1CFFE724AECDDD2D385233E91066015AC7E0906FE359E28D96D9E0BD326B9E6C7D3E486FD1864E3B47A611B1D6D0D080020321300485E65AE9E4C12443E21865F474D46CD791839F25C8FD0A80215E3D2C3A5928427942DF3859AEF6E9035C909FC75082E8FF246F375DDB90EAC248C9121707FE869E161502F320A27113504> |-/b <1C60D8A8C9B7EF3218D573119DA1C11A6AE733DE74B449EE28E952049DF20D24986476D6D2EEF32C9EA9D0ACD1DB597DCDAFEA016C8786CCA065DDF1EE5907C8756872FC8DF20AB863D540CF67DD1EF324B2790688B9E765FC9F6CEBC3C128AB52D1A4FF3B9BAF04627D17E8573C64B9FC053FD7156FF73E6BCD82B1A402A01ECDBBEC20265AC1F5281625> |-/l <1C60D8A8C9B88C084B857C39B4185359B4FDA8> |-/o <1C60D8A8C9B7EF322BB7315D499F0FAA57DF741D86CA9D8DB7E5AD83A05FD148F53EC24E4E6BF5C292C0FC171599978D99E35AB7CAFB8CB65593939725D520CE4A30CDA834D29EB92A082721C79AE18875772ECDD437AD2148D76D23F045CDA1E61619294E456095F14AB8D580008870DAABB6481A0C5B1656CACCDE79F2741F9BB15B> |-/r <1C60D8A8C9B81F2C037408F8BF0E381AE4C9649BA754678B3C9CB9B6F5985C2C3DD85532C988309B457CF86E09A953B63981C0C686B55A9B6F57C7F684C3CFA5497AE68C179CE338521D1494441800> |-/v <1C60D8A8C9B7A73DDF32B99894CC6FA66F5D07EC695DA6C164CB40F9A791729569775D3BE9C3> |-systemdict /gcheck known {setglobal} if end {end} ifendLSXWEM+Helvetica /Encoding getdup 33 /space putdup 97 /a putdup 98 /b putdup 108 /l putdup 111 /o putdup 114 /r putdup 118 /v putpop%ADOEndSubsetFont
/LSXWEM+Helvetica*1 [32{/.notdef}rp /minus /space 14{/.notdef}rp /zero /one /two /.notdef /four /.notdef /six /.notdef /eight 40{/.notdef}rp /a /b 2{/.notdef}rp /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s /t /.notdef /v /.notdef /x /y 134{/.notdef}rp]LSXWEM+Helvetica nfLSXWEM+Helvetica*1 [11.9596 0 0 -11.9596 0 0 ]msf174.187 111.268 mo(e)sh180.479 111.268 mo(v)sh186.172 111.268 mo(ol)[6.65137 0 ]xsh195.48 111.268 mo(v)sh201.174 111.268 mo(a)sh207.825 111.268 mo(b)sh214.237 111.268 mo(le!t)sh230.191 111.268 mo(r)sh234.054 111.268 mo(ait)sh29.5723 98.6558 mo
29.5723 23.9912 li
@
29.5723 98.6558 mo
246.685 98.6558 li
@
.653773 .579889 .56878 .366613 cmyk
%ADOBeginSubsetFont: AdobePiStd Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /AdobePiStd def/FontInfo 7 dict dup begin/Notice (Adobe Confidential. Copyright 2002 , 2003Adobe Systems Incorporated. All Rights Reserved. Adobe Pi is a trademark of Adobe Systems Incorporated.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 127 /uni25CF putdef/FontBBox {0 -196 1276 826} defendsystemdict begindup /Private11 dict dup begin/|- {def} def/| {put} def/BlueValues [-25 -0 725 750 500 525] def/StdHW [50] def/StdVW [50] def/StemSnapH [50] def/StemSnapV [50] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/uni25CF <1C60D8A8C9B6CAC20393B820A953E6ED15C444D2FC84BF4B10D0B30839933397D3264466EBB484089E8F13950BA5D9693EB673B9697E5F3B360819> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/LSXWEN+AdobePiStd /AdobePiStd findfont ct_VMDictPut/LSXWEN+AdobePiStd*1 [127{/.notdef}rp /uni25CF 128{/.notdef}rp]LSXWEN+AdobePiStd nfLSXWEN+AdobePiStd*1 [6.88136 0 0 -6.88136 0 0 ]msf122.378 53.2266 mo(\177)shLSXWEN+AdobePiStd*1 [6.88136 0 0 -6.88136 0 0 ]msf122.378 53.2266 mo(\177) false chp@
LSXWEN+AdobePiStd*1 [6.88136 0 0 -6.88136 0 0 ]msf113.694 61.166 mo(\177)shLSXWEN+AdobePiStd*1 [6.88136 0 0 -6.88136 0 0 ]msf113.694 61.166 mo(\177) false chp@
LSXWEN+AdobePiStd*1 [6.88136 0 0 -6.88136 0 0 ]msf157.116 27.7529 mo(\177)shLSXWEN+AdobePiStd*1 [6.88136 0 0 -6.88136 0 0 ]msf157.116 27.7529 mo(\177) false chp@
.519524 .434333 .434333 .0791333 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginLSXWEM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B81F2C3A3BDBA2E9DFEE10E6670AEBC7475A54CE0B91C398F722701ECC7FFACD7325FD69C372628B8FE38CA7FCBE37C8CC6151D955D330AD238F5A7ADFF3EC6F792676AC012B90C4C6A5CC37C0C314284064> |-/parenright <1C60D8A8C9B81F2C240532A9306D88FBE802946D4D7C96BED003DF2FCDB8DDB235CA368A4FADF1D0309B087452F4DD7B6CF26A6C550E92B406C8BCDB5365991B0FCCD46328F398E95D059281A86422A9CC2837C1B0EF> |-systemdict /gcheck known {setglobal} if end {end} ifendLSXWEM+Helvetica /Encoding getdup 40 /parenleft putdup 41 /parenright putpop%ADOEndSubsetFont
/LSXWEM+Helvetica*1 [32{/.notdef}rp /minus /space 6{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one /two /.notdef /four /.notdef /six /.notdef /eight 40{/.notdef}rp /a /b 2{/.notdef}rp /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s /t /.notdef /v /.notdef /x /y 134{/.notdef}rp]LSXWEM+Helvetica nfLSXWEM+Helvetica*1 [9 0 0 -9 0 0 ]msf120.603 40.77 mo(\(1\))shLSXWEM+Helvetica*1 [9 0 0 -9 0 0 ]msf111.918 48.7095 mo(\(2\))sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginLSXWEM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7EF322B8D6E3793F9C339FF2D01F55F75395A69A42725328E1B8E66EAFF6BAC335B6E345906CE7152DDCE6F991DD2E99A50D14EF5FE716864AD89B92005EB56184F6465E294CACBF73EC4E77A27D9ACFF3348FE551D23745FD8C1F5363E223D2FE146B2E36748D97805004E8C37168D3D6622BBF76ADD739801325A4BB7457A49C531154E36C58F381AB30F164CAE6510100AF5FE6405CBE42D3AEC01131A86CADB27645F055DEC901ADBC964660F336098380F7A314362D92502B680C534E053458ABD592A4A4D87F9589307764B161F9884> |-systemdict /gcheck known {setglobal} if end {end} ifendLSXWEM+Helvetica /Encoding getdup 51 /three putpop%ADOEndSubsetFont
/LSXWEM+Helvetica*1 [32{/.notdef}rp /minus /space 6{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one /two /three /four /.notdef /six /.notdef /eight 40{/.notdef}rp /a /b 2{/.notdef}rp /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s /t /.notdef /v /.notdef /x /y 134{/.notdef}rp]LSXWEM+Helvetica nfLSXWEM+Helvetica*1 [9 0 0 -9 0 0 ]msf155.341 15.2964 mo(\(3\))sh125.102 64.2944 mo
116.417 64.2944 li
.75021 .679683 .670222 .90164 cmyk
@
119.287 62.6387 mo
116.417 64.2944 li
119.287 65.9502 li
@
116.417 69.814 mo
159.839 69.814 li
@
156.969 71.4697 mo
159.839 69.814 li
156.969 68.1582 li
@
105.377 50.8354 mo
105.377 58.7744 li
@
103.721 55.9043 mo
105.377 58.7744 li
107.033 55.9043 li
@
110.897 58.7744 mo
110.897 25.3613 li
@
112.553 28.2319 mo
110.897 25.3613 li
109.241 28.2319 li
@
.697627 .675227 .638575 .739559 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Protected by U.S. Patents D454,582. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 65 /A putdef/FontBBox {-157 -250 1126 952} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604582 def/StdHW [67] def/StdVW [88] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/A <1C60D8A8C9B7D7E88499B0B4629F6223175CD4E8063229FBCC9F00B932F15865B21E5E7BB034E6AEB00B8493B7416EA5F21E0E31EA4A4AA7B249DD04C2020B54E2FE3571164F33157FAF89CB55ED12EC09CD04764D59017211B80D8BF81FE221E84A40> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/LSXWEO+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut/LSXWEO+MyriadPro-Regular*1 [65{/.notdef}rp /A 190{/.notdef}rp]LSXWEO+MyriadPro-Regular nfLSXWEO+MyriadPro-Regular*1 [15.4955 0 0 -15.4955 0 0 ]msf0 12.9697 mo(A)sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginLSXWEO+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/B <1C60D8A8C9B79D2DDA73CBA562CCA616611FA2F6D9A4F73A34564160886E9CF893B5F30C6CA3CC5C829E6C86CCD8B6039E0C7F2FD0FFEC5790BDC97E18D50224F8DBF29BE62BF93B9B46A0E426252323AF779BE129778FBC2237B0172C862C48766856E64A95D30B6FDF49C5041364379F758936E5F343D201DDC5AF9E1CC2D12A5BB71D809FD0C76D483DCA8BBD4974D0EC93996621F2710B5158F156401628A148FF8FBE9DF1DF727E152C865F07> |-systemdict /gcheck known {setglobal} if end {end} ifendLSXWEO+MyriadPro-Regular /Encoding getdup 66 /B putpop%ADOEndSubsetFont
/LSXWEO+MyriadPro-Regular*1 [65{/.notdef}rp /A /B 189{/.notdef}rp]LSXWEO+MyriadPro-Regular nfLSXWEO+MyriadPro-Regular*1 [15.4955 0 0 -15.4955 0 0 ]msf.54248 138.235 mo(B)sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginLSXWEO+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/C <1C60D8A8C9B7F7BFE242671C9E817400744FCB1930C8B6D982C0603B0F56B2079EC8B4534AB9C74A497574D9EF71E8F51BC97EB8824D6E23EF8EFAA3DEBE8D568C2956BA1E496299B0678E1779132A604465EA4ECC38726918FAF069884E38826C83426FA3C94ADFC9002199C86D8D> |-systemdict /gcheck known {setglobal} if end {end} ifendLSXWEO+MyriadPro-Regular /Encoding getdup 67 /C putpop%ADOEndSubsetFont
/LSXWEO+MyriadPro-Regular*1 [65{/.notdef}rp /A /B /C 188{/.notdef}rp]LSXWEO+MyriadPro-Regular nfLSXWEO+MyriadPro-Regular*1 [15.4955 0 0 -15.4955 0 0 ]msf269.249 12.9707 mo(C)sh323.289 210.045 mo
323.289 10.0444 li
523.289 10.0444 li
523.289 210.045 li
323.289 210.045 li
cp
.54995 .465064 .4607 .115328 cmyk
f
323.289 210.045 mo
323.289 10.0444 li
523.289 10.0444 li
523.289 210.045 li
323.289 210.045 li
cp
.75021 .679683 .670222 .90164 cmyk
@
323.289 199.024 mo
323.749 199.944 li
324.779 201.965 li
325.309 202.975 li
325.849 203.984 li
326.959 206.005 li
327.329 206.664 li
328.109 208.024 li
329.309 210.045 li
523.289 210.045 li
523.289 10.0444 li
323.289 10.0444 li
323.289 199.024 li
cp
.516472 .431495 .431495 .0754711 cmyk
f
323.289 199.024 mo
323.749 199.944 li
324.779 201.965 li
325.309 202.975 li
325.849 203.984 li
326.959 206.005 li
327.329 206.664 li
328.109 208.024 li
329.309 210.045 li
523.289 210.045 li
523.289 10.0444 li
323.289 10.0444 li
323.289 199.024 li
cp
.75021 .679683 .670222 .90164 cmyk
@
323.289 182.164 mo
323.929 183.784 li
324.759 185.805 li
325.309 187.074 li
325.629 187.824 li
326.539 189.845 li
327.329 191.545 li
327.479 191.864 li
328.459 193.885 li
329.349 195.635 li
329.489 195.904 li
330.549 197.925 li
331.369 199.435 li
331.649 199.944 li
332.799 201.965 li
333.389 202.965 li
333.999 203.984 li
335.249 206.005 li
335.409 206.265 li
336.539 208.024 li
337.429 209.375 li
337.889 210.045 li
523.289 210.045 li
523.289 10.0444 li
323.289 10.0444 li
323.289 182.164 li
cp
.486366 .403357 .405402 .0441291 cmyk
f
323.289 182.164 mo
323.929 183.784 li
324.759 185.805 li
325.309 187.074 li
325.629 187.824 li
326.539 189.845 li
327.329 191.545 li
327.479 191.864 li
328.459 193.885 li
329.349 195.635 li
329.489 195.904 li
330.549 197.925 li
331.369 199.435 li
331.649 199.944 li
332.799 201.965 li
333.389 202.965 li
333.999 203.984 li
335.249 206.005 li
335.409 206.265 li
336.539 208.024 li
337.429 209.375 li
337.889 210.045 li
523.289 210.045 li
523.289 10.0444 li
323.289 10.0444 li
323.289 182.164 li
cp
.75021 .679683 .670222 .90164 cmyk
@
323.289 161.704 mo
323.789 163.585 li
324.349 165.604 li
324.949 167.625 li
325.309 168.765 li
325.579 169.645 li
326.239 171.664 li
326.939 173.685 li
327.329 174.774 li
327.669 175.704 li
328.429 177.725 li
329.229 179.744 li
329.349 180.034 li
330.059 181.765 li
330.939 183.784 li
331.369 184.744 li
331.849 185.805 li
332.809 187.824 li
333.389 189.015 li
333.799 189.845 li
334.839 191.864 li
335.409 192.935 li
335.929 193.885 li
337.059 195.904 li
337.429 196.555 li
338.229 197.925 li
339.449 199.925 li
339.459 199.944 li
340.749 201.965 li
341.469 203.074 li
342.079 203.984 li
343.479 206.005 li
343.489 206.024 li
344.929 208.024 li
345.509 208.805 li
346.449 210.045 li
523.289 210.045 li
523.289 10.0444 li
323.289 10.0444 li
323.289 161.704 li
cp
.451759 .371954 .377142 .0206302 cmyk
f
323.289 161.704 mo
323.789 163.585 li
324.349 165.604 li
324.949 167.625 li
325.309 168.765 li
325.579 169.645 li
326.239 171.664 li
326.939 173.685 li
327.329 174.774 li
327.669 175.704 li
328.429 177.725 li
329.229 179.744 li
329.349 180.034 li
330.059 181.765 li
330.939 183.784 li
331.369 184.744 li
331.849 185.805 li
332.809 187.824 li
333.389 189.015 li
333.799 189.845 li
334.839 191.864 li
335.409 192.935 li
335.929 193.885 li
337.059 195.904 li
337.429 196.555 li
338.229 197.925 li
339.449 199.925 li
339.459 199.944 li
340.749 201.965 li
341.469 203.074 li
342.079 203.984 li
343.479 206.005 li
343.489 206.024 li
344.929 208.024 li
345.509 208.805 li
346.449 210.045 li
523.289 210.045 li
523.289 10.0444 li
323.289 10.0444 li
323.289 161.704 li
cp
.75021 .679683 .670222 .90164 cmyk
@
355.139 210.045 mo
353.589 208.234 li
353.419 208.024 li
351.779 206.005 li
351.569 205.744 li
350.209 203.984 li
349.549 203.104 li
348.719 201.965 li
347.529 200.305 li
347.279 199.944 li
345.909 197.925 li
345.509 197.314 li
344.609 195.904 li
343.489 194.114 li
343.349 193.885 li
342.159 191.864 li
341.469 190.664 li
341.009 189.845 li
339.919 187.824 li
339.449 186.935 li
338.869 185.805 li
337.869 183.784 li
337.429 182.854 li
336.919 181.765 li
336.009 179.744 li
335.409 178.364 li
335.139 177.725 li
334.309 175.704 li
333.529 173.685 li
333.389 173.314 li
332.779 171.664 li
332.069 169.645 li
331.399 167.625 li
331.369 167.524 li
330.759 165.604 li
330.169 163.585 li
329.599 161.564 li
329.349 160.604 li
329.069 159.534 li
328.579 157.515 li
328.109 155.494 li
327.679 153.475 li
327.329 151.685 li
327.289 151.454 li
326.919 149.435 li
326.589 147.414 li
326.289 145.395 li
326.019 143.375 li
325.789 141.354 li
325.599 139.335 li
325.449 137.314 li
325.339 135.295 li
325.309 134.345 li
325.279 133.274 li
325.279 131.254 li
325.309 130.324 li
325.349 129.234 li
325.489 127.215 li
325.719 125.194 li
326.039 123.174 li
326.469 121.154 li
326.989 119.135 li
327.329 118.004 li
327.619 117.115 li
328.329 115.095 li
329.099 113.074 li
329.349 112.435 li
329.929 111.055 li
330.769 109.035 li
331.369 107.574 li
331.619 107.015 li
332.469 104.994 li
333.319 102.975 li
333.389 102.805 li
334.239 100.955 li
335.239 98.9346 li
335.409 98.625 li
336.429 96.9141 li
337.429 95.4443 li
337.839 94.8945 li
339.449 93.0146 li
339.579 92.875 li
341.469 91.1152 li
341.769 90.8545 li
343.489 89.5742 li
344.589 88.8345 li
345.509 88.2744 li
347.529 87.1943 li
348.349 86.8145 li
349.549 86.2944 li
351.569 85.5347 li
353.589 84.8945 li
353.949 84.7944 li
355.609 84.3745 li
357.629 83.9546 li
359.649 83.6245 li
361.669 83.3745 li
363.689 83.2046 li
365.709 83.1147 li
367.729 83.0845 li
369.749 83.1245 li
371.769 83.2344 li
373.799 83.4043 li
375.819 83.6445 li
377.839 83.9443 li
379.859 84.3047 li
381.879 84.7246 li
382.129 84.7944 li
383.899 85.3047 li
385.919 86.0044 li
387.939 86.8047 li
387.949 86.8145 li
389.959 88.3047 li
390.549 88.8345 li
390.869 90.8545 li
389.959 92.1943 li
389.539 92.875 li
387.939 94.1943 li
387.199 94.8945 li
385.919 95.7744 li
384.469 96.9141 li
383.899 97.3145 li
381.879 98.9141 li
381.849 98.9346 li
379.859 100.725 li
379.629 100.955 li
378.069 102.975 li
377.839 103.595 li
377.309 104.994 li
377.499 107.015 li
377.839 107.524 li
378.699 109.035 li
379.859 110.015 li
381.009 111.055 li
381.879 111.545 li
383.899 112.705 li
384.529 113.074 li
385.919 113.654 li
387.939 114.484 li
389.469 115.095 li
389.959 115.254 li
391.979 115.885 li
394 116.494 li
396.019 117.064 li
396.208 117.115 li
398.039 117.555 li
400.059 118.015 li
402.08 118.444 li
404.099 118.834 li
405.699 119.135 li
406.119 119.205 li
408.139 119.545 li
410.159 119.865 li
412.179 120.145 li
414.199 120.414 li
416.219 120.664 li
418.239 120.895 li
420.259 121.104 li
420.749 121.154 li
422.279 121.314 li
424.299 121.504 li
426.319 121.674 li
428.339 121.845 li
430.359 121.994 li
432.379 122.135 li
434.399 122.274 li
436.419 122.395 li
438.439 122.515 li
440.458 122.635 li
442.479 122.744 li
444.499 122.854 li
446.519 122.955 li
448.539 123.055 li
450.559 123.154 li
451.039 123.174 li
452.579 123.254 li
454.599 123.365 li
456.619 123.475 li
458.639 123.584 li
460.659 123.705 li
462.679 123.814 li
464.699 123.935 li
466.719 124.055 li
468.739 124.185 li
470.759 124.314 li
472.779 124.444 li
474.809 124.595 li
476.829 124.744 li
478.849 124.895 li
480.869 125.064 li
482.429 125.194 li
482.889 125.244 li
484.909 125.455 li
486.929 125.674 li
488.949 125.904 li
490.969 126.145 li
492.989 126.404 li
495.009 126.674 li
497.029 126.965 li
498.729 127.215 li
499.049 127.274 li
501.069 127.654 li
503.089 128.045 li
505.109 128.465 li
507.129 128.904 li
508.609 129.234 li
509.149 129.385 li
511.169 129.975 li
513.189 130.595 li
515.208 131.234 li
515.269 131.254 li
517.229 132.064 li
519.249 132.925 li
520.039 133.274 li
521.269 133.954 li
523.289 135.114 li
523.289 210.045 li
355.139 210.045 li
cp
.418494 .340734 .345922 .00805676 cmyk
f
355.139 210.045 mo
353.589 208.234 li
353.419 208.024 li
351.779 206.005 li
351.569 205.744 li
350.209 203.984 li
349.549 203.104 li
348.719 201.965 li
347.529 200.305 li
347.279 199.944 li
345.909 197.925 li
345.509 197.314 li
344.609 195.904 li
343.489 194.114 li
343.349 193.885 li
342.159 191.864 li
341.469 190.664 li
341.009 189.845 li
339.919 187.824 li
339.449 186.935 li
338.869 185.805 li
337.869 183.784 li
337.429 182.854 li
336.919 181.765 li
336.009 179.744 li
335.409 178.364 li
335.139 177.725 li
334.309 175.704 li
333.529 173.685 li
333.389 173.314 li
332.779 171.664 li
332.069 169.645 li
331.399 167.625 li
331.369 167.524 li
330.759 165.604 li
330.169 163.585 li
329.599 161.564 li
329.349 160.604 li
329.069 159.534 li
328.579 157.515 li
328.109 155.494 li
327.679 153.475 li
327.329 151.685 li
327.289 151.454 li
326.919 149.435 li
326.589 147.414 li
326.289 145.395 li
326.019 143.375 li
325.789 141.354 li
325.599 139.335 li
325.449 137.314 li
325.339 135.295 li
325.309 134.345 li
325.279 133.274 li
325.279 131.254 li
325.309 130.324 li
325.349 129.234 li
325.489 127.215 li
325.719 125.194 li
326.039 123.174 li
326.469 121.154 li
326.989 119.135 li
327.329 118.004 li
327.619 117.115 li
328.329 115.095 li
329.099 113.074 li
329.349 112.435 li
329.929 111.055 li
330.769 109.035 li
331.369 107.574 li
331.619 107.015 li
332.469 104.994 li
333.319 102.975 li
333.389 102.805 li
334.239 100.955 li
335.239 98.9346 li
335.409 98.625 li
336.429 96.9141 li
337.429 95.4443 li
337.839 94.8945 li
339.449 93.0146 li
339.579 92.875 li
341.469 91.1152 li
341.769 90.8545 li
343.489 89.5742 li
344.589 88.8345 li
345.509 88.2744 li
347.529 87.1943 li
348.349 86.8145 li
349.549 86.2944 li
351.569 85.5347 li
353.589 84.8945 li
353.949 84.7944 li
355.609 84.3745 li
357.629 83.9546 li
359.649 83.6245 li
361.669 83.3745 li
363.689 83.2046 li
365.709 83.1147 li
367.729 83.0845 li
369.749 83.1245 li
371.769 83.2344 li
373.799 83.4043 li
375.819 83.6445 li
377.839 83.9443 li
379.859 84.3047 li
381.879 84.7246 li
382.129 84.7944 li
383.899 85.3047 li
385.919 86.0044 li
387.939 86.8047 li
387.949 86.8145 li
389.959 88.3047 li
390.549 88.8345 li
390.869 90.8545 li
389.959 92.1943 li
389.539 92.875 li
387.939 94.1943 li
387.199 94.8945 li
385.919 95.7744 li
384.469 96.9141 li
383.899 97.3145 li
381.879 98.9141 li
381.849 98.9346 li
379.859 100.725 li
379.629 100.955 li
378.069 102.975 li
377.839 103.595 li
377.309 104.994 li
377.499 107.015 li
377.839 107.524 li
378.699 109.035 li
379.859 110.015 li
381.009 111.055 li
381.879 111.545 li
383.899 112.705 li
384.529 113.074 li
385.919 113.654 li
387.939 114.484 li
389.469 115.095 li
389.959 115.254 li
391.979 115.885 li
394 116.494 li
396.019 117.064 li
396.208 117.115 li
398.039 117.555 li
400.059 118.015 li
402.08 118.444 li
404.099 118.834 li
405.699 119.135 li
406.119 119.205 li
408.139 119.545 li
410.159 119.865 li
412.179 120.145 li
414.199 120.414 li
416.219 120.664 li
418.239 120.895 li
420.259 121.104 li
420.749 121.154 li
422.279 121.314 li
424.299 121.504 li
426.319 121.674 li
428.339 121.845 li
430.359 121.994 li
432.379 122.135 li
434.399 122.274 li
436.419 122.395 li
438.439 122.515 li
440.458 122.635 li
442.479 122.744 li
444.499 122.854 li
446.519 122.955 li
448.539 123.055 li
450.559 123.154 li
451.039 123.174 li
452.579 123.254 li
454.599 123.365 li
456.619 123.475 li
458.639 123.584 li
460.659 123.705 li
462.679 123.814 li
464.699 123.935 li
466.719 124.055 li
468.739 124.185 li
470.759 124.314 li
472.779 124.444 li
474.809 124.595 li
476.829 124.744 li
478.849 124.895 li
480.869 125.064 li
482.429 125.194 li
482.889 125.244 li
484.909 125.455 li
486.929 125.674 li
488.949 125.904 li
490.969 126.145 li
492.989 126.404 li
495.009 126.674 li
497.029 126.965 li
498.729 127.215 li
499.049 127.274 li
501.069 127.654 li
503.089 128.045 li
505.109 128.465 li
507.129 128.904 li
508.609 129.234 li
509.149 129.385 li
511.169 129.975 li
513.189 130.595 li
515.208 131.234 li
515.269 131.254 li
517.229 132.064 li
519.249 132.925 li
520.039 133.274 li
521.269 133.954 li
523.289 135.114 li
523.289 210.045 li
355.139 210.045 li
cp
.75021 .679683 .670222 .90164 cmyk
@
364.139 210.045 mo
363.689 209.595 li
362.169 208.024 li
361.669 207.494 li
360.299 206.005 li
359.649 205.274 li
358.529 203.984 li
357.629 202.935 li
356.839 201.965 li
355.609 200.435 li
355.229 199.944 li
353.689 197.925 li
353.589 197.784 li
352.229 195.904 li
351.569 194.954 li
350.839 193.885 li
349.549 191.925 li
349.509 191.864 li
348.249 189.845 li
347.529 188.654 li
347.039 187.824 li
345.889 185.805 li
345.509 185.104 li
344.799 183.784 li
343.749 181.765 li
343.489 181.234 li
342.759 179.744 li
341.819 177.725 li
341.469 176.944 li
340.929 175.704 li
340.079 173.685 li
339.449 172.114 li
339.269 171.664 li
338.509 169.645 li
337.799 167.625 li
337.429 166.524 li
337.119 165.604 li
336.489 163.585 li
335.899 161.564 li
335.409 159.774 li
335.349 159.534 li
334.839 157.515 li
334.359 155.494 li
333.929 153.475 li
333.539 151.454 li
333.389 150.625 li
333.179 149.435 li
332.869 147.414 li
332.599 145.395 li
332.369 143.375 li
332.189 141.354 li
332.049 139.335 li
331.969 137.314 li
331.949 135.295 li
331.999 133.274 li
332.129 131.254 li
332.369 129.234 li
332.719 127.215 li
333.199 125.194 li
333.389 124.584 li
333.849 123.174 li
334.679 121.154 li
335.409 119.674 li
335.699 119.135 li
336.949 117.115 li
337.429 116.414 li
338.439 115.095 li
339.449 113.845 li
340.169 113.074 li
341.469 111.674 li
342.149 111.055 li
343.489 109.754 li
344.389 109.035 li
345.509 108.015 li
346.859 107.015 li
347.529 106.424 li
349.519 104.994 li
349.549 104.965 li
351.569 103.524 li
352.569 102.975 li
353.589 102.244 li
355.609 101.145 li
356.159 100.955 li
357.629 100.314 li
359.649 99.9551 li
361.669 100.924 li
361.689 100.955 li
362.739 102.975 li
363.689 104.064 li
364.169 104.994 li
365.709 106.424 li
366.179 107.015 li
367.729 108.064 li
368.919 109.035 li
369.749 109.455 li
371.769 110.604 li
372.489 111.055 li
373.799 111.615 li
375.819 112.524 li
376.969 113.074 li
377.839 113.375 li
379.859 114.115 li
381.879 114.845 li
382.559 115.095 li
383.899 115.494 li
385.919 116.084 li
387.939 116.664 li
389.579 117.115 li
389.959 117.205 li
391.979 117.694 li
394 118.154 li
396.019 118.595 li
398.039 119.004 li
398.708 119.135 li
400.059 119.385 li
402.08 119.744 li
404.099 120.074 li
406.119 120.395 li
408.139 120.685 li
410.159 120.955 li
411.769 121.154 li
412.179 121.205 li
414.199 121.455 li
416.219 121.685 li
418.239 121.895 li
420.259 122.084 li
422.279 122.274 li
424.299 122.444 li
426.319 122.604 li
428.339 122.754 li
430.359 122.895 li
432.379 123.024 li
434.399 123.145 li
434.889 123.174 li
436.419 123.274 li
438.439 123.404 li
440.458 123.524 li
442.479 123.645 li
444.499 123.754 li
446.519 123.865 li
448.539 123.975 li
450.559 124.095 li
452.579 124.205 li
454.599 124.314 li
456.619 124.424 li
458.639 124.545 li
460.659 124.664 li
462.679 124.785 li
464.699 124.914 li
466.719 125.045 li
468.739 125.174 li
468.989 125.194 li
470.759 125.345 li
472.779 125.515 li
474.809 125.694 li
476.829 125.885 li
478.849 126.074 li
480.869 126.285 li
482.889 126.504 li
484.909 126.734 li
486.929 126.975 li
488.839 127.215 li
488.949 127.234 li
490.969 127.555 li
492.989 127.885 li
495.009 128.244 li
497.029 128.615 li
499.049 129.004 li
500.219 129.234 li
501.069 129.455 li
503.089 129.975 li
505.109 130.524 li
507.129 131.104 li
507.649 131.254 li
509.149 131.814 li
511.169 132.595 li
512.859 133.274 li
513.189 133.444 li
515.208 134.494 li
516.689 135.295 li
517.229 135.664 li
519.249 137.064 li
519.599 137.314 li
521.269 138.784 li
521.889 139.335 li
523.289 140.875 li
523.289 210.045 li
364.139 210.045 li
cp
.379828 .307622 .312261 .00192264 cmyk
f
364.139 210.045 mo
363.689 209.595 li
362.169 208.024 li
361.669 207.494 li
360.299 206.005 li
359.649 205.274 li
358.529 203.984 li
357.629 202.935 li
356.839 201.965 li
355.609 200.435 li
355.229 199.944 li
353.689 197.925 li
353.589 197.784 li
352.229 195.904 li
351.569 194.954 li
350.839 193.885 li
349.549 191.925 li
349.509 191.864 li
348.249 189.845 li
347.529 188.654 li
347.039 187.824 li
345.889 185.805 li
345.509 185.104 li
344.799 183.784 li
343.749 181.765 li
343.489 181.234 li
342.759 179.744 li
341.819 177.725 li
341.469 176.944 li
340.929 175.704 li
340.079 173.685 li
339.449 172.114 li
339.269 171.664 li
338.509 169.645 li
337.799 167.625 li
337.429 166.524 li
337.119 165.604 li
336.489 163.585 li
335.899 161.564 li
335.409 159.774 li
335.349 159.534 li
334.839 157.515 li
334.359 155.494 li
333.929 153.475 li
333.539 151.454 li
333.389 150.625 li
333.179 149.435 li
332.869 147.414 li
332.599 145.395 li
332.369 143.375 li
332.189 141.354 li
332.049 139.335 li
331.969 137.314 li
331.949 135.295 li
331.999 133.274 li
332.129 131.254 li
332.369 129.234 li
332.719 127.215 li
333.199 125.194 li
333.389 124.584 li
333.849 123.174 li
334.679 121.154 li
335.409 119.674 li
335.699 119.135 li
336.949 117.115 li
337.429 116.414 li
338.439 115.095 li
339.449 113.845 li
340.169 113.074 li
341.469 111.674 li
342.149 111.055 li
343.489 109.754 li
344.389 109.035 li
345.509 108.015 li
346.859 107.015 li
347.529 106.424 li
349.519 104.994 li
349.549 104.965 li
351.569 103.524 li
352.569 102.975 li
353.589 102.244 li
355.609 101.145 li
356.159 100.955 li
357.629 100.314 li
359.649 99.9551 li
361.669 100.924 li
361.689 100.955 li
362.739 102.975 li
363.689 104.064 li
364.169 104.994 li
365.709 106.424 li
366.179 107.015 li
367.729 108.064 li
368.919 109.035 li
369.749 109.455 li
371.769 110.604 li
372.489 111.055 li
373.799 111.615 li
375.819 112.524 li
376.969 113.074 li
377.839 113.375 li
379.859 114.115 li
381.879 114.845 li
382.559 115.095 li
383.899 115.494 li
385.919 116.084 li
387.939 116.664 li
389.579 117.115 li
389.959 117.205 li
391.979 117.694 li
394 118.154 li
396.019 118.595 li
398.039 119.004 li
398.708 119.135 li
400.059 119.385 li
402.08 119.744 li
404.099 120.074 li
406.119 120.395 li
408.139 120.685 li
410.159 120.955 li
411.769 121.154 li
412.179 121.205 li
414.199 121.455 li
416.219 121.685 li
418.239 121.895 li
420.259 122.084 li
422.279 122.274 li
424.299 122.444 li
426.319 122.604 li
428.339 122.754 li
430.359 122.895 li
432.379 123.024 li
434.399 123.145 li
434.889 123.174 li
436.419 123.274 li
438.439 123.404 li
440.458 123.524 li
442.479 123.645 li
444.499 123.754 li
446.519 123.865 li
448.539 123.975 li
450.559 124.095 li
452.579 124.205 li
454.599 124.314 li
456.619 124.424 li
458.639 124.545 li
460.659 124.664 li
462.679 124.785 li
464.699 124.914 li
466.719 125.045 li
468.739 125.174 li
468.989 125.194 li
470.759 125.345 li
472.779 125.515 li
474.809 125.694 li
476.829 125.885 li
478.849 126.074 li
480.869 126.285 li
482.889 126.504 li
484.909 126.734 li
486.929 126.975 li
488.839 127.215 li
488.949 127.234 li
490.969 127.555 li
492.989 127.885 li
495.009 128.244 li
497.029 128.615 li
499.049 129.004 li
500.219 129.234 li
501.069 129.455 li
503.089 129.975 li
505.109 130.524 li
507.129 131.104 li
507.649 131.254 li
509.149 131.814 li
511.169 132.595 li
512.859 133.274 li
513.189 133.444 li
515.208 134.494 li
516.689 135.295 li
517.229 135.664 li
519.249 137.064 li
519.599 137.314 li
521.269 138.784 li
521.889 139.335 li
523.289 140.875 li
523.289 210.045 li
364.139 210.045 li
cp
.75021 .679683 .670222 .90164 cmyk
@
373.719 210.045 mo
371.769 208.354 li
371.409 208.024 li
369.749 206.494 li
369.239 206.005 li
367.729 204.524 li
367.199 203.984 li
365.709 202.444 li
365.259 201.965 li
363.689 200.244 li
363.429 199.944 li
361.699 197.925 li
361.669 197.895 li
360.059 195.904 li
359.649 195.395 li
358.499 193.885 li
357.629 192.715 li
357.019 191.864 li
355.609 189.854 li
355.609 189.845 li
354.269 187.824 li
353.589 186.755 li
352.999 185.805 li
351.799 183.784 li
351.569 183.385 li
350.659 181.765 li
349.569 179.744 li
349.549 179.704 li
348.539 177.725 li
347.569 175.704 li
347.529 175.614 li
346.649 173.685 li
345.789 171.664 li
345.509 170.994 li
344.969 169.645 li
344.199 167.625 li
343.489 165.614 li
343.489 165.604 li
342.819 163.585 li
342.189 161.564 li
341.619 159.534 li
341.469 158.975 li
341.089 157.515 li
340.609 155.494 li
340.169 153.475 li
339.789 151.454 li
339.449 149.475 li
339.449 149.435 li
339.159 147.414 li
338.909 145.395 li
338.729 143.375 li
338.599 141.354 li
338.529 139.335 li
338.529 137.314 li
338.619 135.295 li
338.809 133.274 li
339.109 131.254 li
339.449 129.715 li
339.559 129.234 li
340.199 127.215 li
341.059 125.194 li
341.469 124.444 li
342.219 123.174 li
343.489 121.455 li
343.739 121.154 li
345.509 119.365 li
345.769 119.135 li
347.529 117.785 li
348.599 117.115 li
349.549 116.564 li
351.569 115.625 li
353.089 115.095 li
353.589 114.924 li
355.609 114.404 li
357.629 114.074 li
359.649 113.914 li
361.669 113.895 li
363.689 113.994 li
365.709 114.185 li
367.729 114.475 li
369.749 114.824 li
371.049 115.095 li
371.769 115.215 li
373.799 115.615 li
375.819 116.035 li
377.839 116.475 li
379.859 116.924 li
380.649 117.115 li
381.879 117.365 li
383.899 117.785 li
385.919 118.205 li
387.939 118.615 li
389.959 119.015 li
390.579 119.135 li
391.979 119.395 li
394 119.754 li
396.019 120.104 li
398.039 120.435 li
400.059 120.744 li
402.08 121.035 li
402.919 121.154 li
404.099 121.324 li
406.119 121.595 li
408.139 121.854 li
410.159 122.095 li
412.179 122.314 li
414.199 122.524 li
416.219 122.715 li
418.239 122.904 li
420.259 123.074 li
421.549 123.174 li
422.279 123.234 li
424.299 123.404 li
426.319 123.564 li
428.339 123.715 li
430.359 123.854 li
432.379 123.984 li
434.399 124.115 li
436.419 124.234 li
438.439 124.354 li
440.458 124.475 li
442.479 124.584 li
444.499 124.694 li
446.519 124.805 li
448.539 124.914 li
450.559 125.035 li
452.579 125.145 li
453.499 125.194 li
454.599 125.265 li
456.619 125.404 li
458.639 125.545 li
460.659 125.694 li
462.679 125.845 li
464.699 125.994 li
466.719 126.164 li
468.739 126.324 li
470.759 126.504 li
472.779 126.694 li
474.809 126.885 li
476.829 127.084 li
478.029 127.215 li
478.849 127.324 li
480.869 127.595 li
482.889 127.875 li
484.909 128.174 li
486.929 128.484 li
488.949 128.814 li
490.969 129.154 li
491.409 129.234 li
492.989 129.584 li
495.009 130.055 li
497.029 130.545 li
499.049 131.055 li
499.799 131.254 li
501.069 131.674 li
503.089 132.375 li
505.109 133.114 li
505.549 133.274 li
507.129 134.024 li
509.149 135.015 li
509.708 135.295 li
511.169 136.234 li
512.819 137.314 li
513.189 137.614 li
515.208 139.314 li
515.239 139.335 li
517.169 141.354 li
517.229 141.444 li
518.729 143.375 li
519.249 144.185 li
520.019 145.395 li
521.079 147.414 li
521.269 147.845 li
521.958 149.435 li
522.669 151.454 li
523.229 153.475 li
523.289 153.784 li
523.289 210.045 li
373.719 210.045 li
cp
.333227 .267308 .272038 3.0518e-05 cmyk
f
373.719 210.045 mo
371.769 208.354 li
371.409 208.024 li
369.749 206.494 li
369.239 206.005 li
367.729 204.524 li
367.199 203.984 li
365.709 202.444 li
365.259 201.965 li
363.689 200.244 li
363.429 199.944 li
361.699 197.925 li
361.669 197.895 li
360.059 195.904 li
359.649 195.395 li
358.499 193.885 li
357.629 192.715 li
357.019 191.864 li
355.609 189.854 li
355.609 189.845 li
354.269 187.824 li
353.589 186.755 li
352.999 185.805 li
351.799 183.784 li
351.569 183.385 li
350.659 181.765 li
349.569 179.744 li
349.549 179.704 li
348.539 177.725 li
347.569 175.704 li
347.529 175.614 li
346.649 173.685 li
345.789 171.664 li
345.509 170.994 li
344.969 169.645 li
344.199 167.625 li
343.489 165.614 li
343.489 165.604 li
342.819 163.585 li
342.189 161.564 li
341.619 159.534 li
341.469 158.975 li
341.089 157.515 li
340.609 155.494 li
340.169 153.475 li
339.789 151.454 li
339.449 149.475 li
339.449 149.435 li
339.159 147.414 li
338.909 145.395 li
338.729 143.375 li
338.599 141.354 li
338.529 139.335 li
338.529 137.314 li
338.619 135.295 li
338.809 133.274 li
339.109 131.254 li
339.449 129.715 li
339.559 129.234 li
340.199 127.215 li
341.059 125.194 li
341.469 124.444 li
342.219 123.174 li
343.489 121.455 li
343.739 121.154 li
345.509 119.365 li
345.769 119.135 li
347.529 117.785 li
348.599 117.115 li
349.549 116.564 li
351.569 115.625 li
353.089 115.095 li
353.589 114.924 li
355.609 114.404 li
357.629 114.074 li
359.649 113.914 li
361.669 113.895 li
363.689 113.994 li
365.709 114.185 li
367.729 114.475 li
369.749 114.824 li
371.049 115.095 li
371.769 115.215 li
373.799 115.615 li
375.819 116.035 li
377.839 116.475 li
379.859 116.924 li
380.649 117.115 li
381.879 117.365 li
383.899 117.785 li
385.919 118.205 li
387.939 118.615 li
389.959 119.015 li
390.579 119.135 li
391.979 119.395 li
394 119.754 li
396.019 120.104 li
398.039 120.435 li
400.059 120.744 li
402.08 121.035 li
402.919 121.154 li
404.099 121.324 li
406.119 121.595 li
408.139 121.854 li
410.159 122.095 li
412.179 122.314 li
414.199 122.524 li
416.219 122.715 li
418.239 122.904 li
420.259 123.074 li
421.549 123.174 li
422.279 123.234 li
424.299 123.404 li
426.319 123.564 li
428.339 123.715 li
430.359 123.854 li
432.379 123.984 li
434.399 124.115 li
436.419 124.234 li
438.439 124.354 li
440.458 124.475 li
442.479 124.584 li
444.499 124.694 li
446.519 124.805 li
448.539 124.914 li
450.559 125.035 li
452.579 125.145 li
453.499 125.194 li
454.599 125.265 li
456.619 125.404 li
458.639 125.545 li
460.659 125.694 li
462.679 125.845 li
464.699 125.994 li
466.719 126.164 li
468.739 126.324 li
470.759 126.504 li
472.779 126.694 li
474.809 126.885 li
476.829 127.084 li
478.029 127.215 li
478.849 127.324 li
480.869 127.595 li
482.889 127.875 li
484.909 128.174 li
486.929 128.484 li
488.949 128.814 li
490.969 129.154 li
491.409 129.234 li
492.989 129.584 li
495.009 130.055 li
497.029 130.545 li
499.049 131.055 li
499.799 131.254 li
501.069 131.674 li
503.089 132.375 li
505.109 133.114 li
505.549 133.274 li
507.129 134.024 li
509.149 135.015 li
509.708 135.295 li
511.169 136.234 li
512.819 137.314 li
513.189 137.614 li
515.208 139.314 li
515.239 139.335 li
517.169 141.354 li
517.229 141.444 li
518.729 143.375 li
519.249 144.185 li
520.019 145.395 li
521.079 147.414 li
521.269 147.845 li
521.958 149.435 li
522.669 151.454 li
523.229 153.475 li
523.289 153.784 li
523.289 210.045 li
373.719 210.045 li
cp
.75021 .679683 .670222 .90164 cmyk
@
497.208 210.045 mo
499.049 208.454 li
499.519 208.024 li
501.069 206.595 li
501.689 206.005 li
503.089 204.625 li
503.719 203.984 li
505.109 202.534 li
505.629 201.965 li
507.129 200.295 li
507.429 199.944 li
509.119 197.925 li
509.149 197.895 li
510.708 195.904 li
511.169 195.295 li
512.199 193.885 li
513.189 192.475 li
513.599 191.864 li
514.909 189.845 li
515.208 189.364 li
516.139 187.824 li
517.229 185.885 li
517.269 185.805 li
518.329 183.784 li
519.249 181.854 li
519.289 181.765 li
520.179 179.744 li
520.979 177.725 li
521.269 176.904 li
521.689 175.704 li
522.319 173.685 li
522.859 171.664 li
523.289 169.755 li
523.289 210.045 li
497.208 210.045 li
cp
.333227 .267308 .272038 3.0518e-05 cmyk
f
497.208 210.045 mo
499.049 208.454 li
499.519 208.024 li
501.069 206.595 li
501.689 206.005 li
503.089 204.625 li
503.719 203.984 li
505.109 202.534 li
505.629 201.965 li
507.129 200.295 li
507.429 199.944 li
509.119 197.925 li
509.149 197.895 li
510.708 195.904 li
511.169 195.295 li
512.199 193.885 li
513.189 192.475 li
513.599 191.864 li
514.909 189.845 li
515.208 189.364 li
516.139 187.824 li
517.229 185.885 li
517.269 185.805 li
518.329 183.784 li
519.249 181.854 li
519.289 181.765 li
520.179 179.744 li
520.979 177.725 li
521.269 176.904 li
521.689 175.704 li
522.319 173.685 li
522.859 171.664 li
523.289 169.755 li
523.289 210.045 li
497.208 210.045 li
cp
.75021 .679683 .670222 .90164 cmyk
@
507.049 210.045 mo
507.129 209.965 li
509.019 208.024 li
509.149 207.895 li
510.889 206.005 li
511.169 205.694 li
512.649 203.984 li
513.189 203.345 li
514.319 201.965 li
515.208 200.835 li
515.899 199.944 li
517.229 198.145 li
517.389 197.925 li
518.789 195.904 li
519.249 195.215 li
520.109 193.885 li
521.269 192.015 li
521.359 191.864 li
522.529 189.845 li
523.289 188.435 li
523.289 210.045 li
507.049 210.045 li
cp
.379828 .307622 .312261 .00192264 cmyk
f
507.049 210.045 mo
507.129 209.965 li
509.019 208.024 li
509.149 207.895 li
510.889 206.005 li
511.169 205.694 li
512.649 203.984 li
513.189 203.345 li
514.319 201.965 li
515.208 200.835 li
515.899 199.944 li
517.229 198.145 li
517.389 197.925 li
518.789 195.904 li
519.249 195.215 li
520.109 193.885 li
521.269 192.015 li
521.359 191.864 li
522.529 189.845 li
523.289 188.435 li
523.289 210.045 li
507.049 210.045 li
cp
.75021 .679683 .670222 .90164 cmyk
@
516.339 210.045 mo
517.229 209.015 li
518.059 208.024 li
519.249 206.564 li
519.699 206.005 li
521.249 203.984 li
521.269 203.954 li
522.719 201.965 li
523.289 201.154 li
523.289 210.045 li
516.339 210.045 li
cp
.418494 .340734 .345922 .00805676 cmyk
f
516.339 210.045 mo
517.229 209.015 li
518.059 208.024 li
519.249 206.564 li
519.699 206.005 li
521.249 203.984 li
521.269 203.954 li
522.719 201.965 li
523.289 201.154 li
523.289 210.045 li
516.339 210.045 li
cp
.75021 .679683 .670222 .90164 cmyk
@
323.289 97.5547 mo
323.519 96.9141 li
324.349 94.8945 li
325.309 92.9346 li
325.339 92.875 li
326.549 90.8545 li
327.329 89.7344 li
327.999 88.8345 li
329.349 87.2246 li
329.719 86.8145 li
331.369 85.1743 li
331.779 84.7944 li
333.389 83.4443 li
334.279 82.7744 li
335.409 81.9746 li
337.339 80.7544 li
337.429 80.6943 li
339.449 79.6045 li
341.279 78.7344 li
341.469 78.6445 li
343.489 77.8247 li
345.509 77.1147 li
346.859 76.7144 li
347.529 76.5146 li
349.549 76.0146 li
351.569 75.6045 li
353.589 75.2744 li
355.609 75.0244 li
357.629 74.8447 li
359.649 74.7344 li
361.569 74.6943 li
361.669 74.6846 li
361.939 74.6943 li
363.689 74.7046 li
365.709 74.7847 li
367.729 74.9146 li
369.749 75.0947 li
371.769 75.3145 li
373.799 75.5947 li
375.819 75.9146 li
377.839 76.2744 li
379.859 76.6743 li
380.029 76.7144 li
381.879 77.1147 li
383.899 77.5845 li
385.919 78.0947 li
387.939 78.6445 li
388.249 78.7344 li
389.959 79.2344 li
391.979 79.8647 li
394 80.5244 li
394.66 80.7544 li
396.019 81.2544 li
398.039 82.0547 li
399.75 82.7744 li
400.059 82.9243 li
402.08 84.0044 li
403.458 84.7944 li
404.099 85.3647 li
405.579 86.8145 li
405.909 88.8345 li
404.458 90.8545 li
404.099 91.084 li
402.08 92.4941 li
401.589 92.875 li
400.059 93.6445 li
398.039 94.8242 li
397.929 94.8945 li
396.019 95.834 li
394.119 96.9141 li
394 96.9746 li
391.979 98.084 li
390.619 98.9346 li
389.959 99.3652 li
387.939 100.805 li
387.749 100.955 li
385.919 102.694 li
385.639 102.975 li
384.419 104.994 li
384.189 107.015 li
384.989 109.035 li
385.919 109.965 li
386.959 111.055 li
387.939 111.654 li
389.959 112.895 li
390.239 113.074 li
391.979 113.824 li
394 114.664 li
395.069 115.095 li
396.019 115.395 li
398.039 116.015 li
400.059 116.595 li
402.029 117.115 li
402.08 117.125 li
404.099 117.584 li
406.119 118.004 li
408.139 118.395 li
410.159 118.754 li
412.179 119.095 li
412.449 119.135 li
414.199 119.395 li
416.219 119.674 li
418.239 119.935 li
420.259 120.164 li
422.279 120.385 li
424.299 120.584 li
426.319 120.774 li
428.339 120.944 li
430.359 121.104 li
431.099 121.154 li
432.379 121.254 li
434.399 121.395 li
436.419 121.535 li
438.439 121.654 li
440.458 121.774 li
442.479 121.895 li
444.499 121.994 li
446.519 122.104 li
448.539 122.205 li
450.559 122.305 li
452.579 122.395 li
454.599 122.494 li
456.619 122.584 li
458.639 122.685 li
460.659 122.774 li
462.679 122.875 li
464.699 122.975 li
466.719 123.074 li
468.629 123.174 li
468.739 123.185 li
470.759 123.305 li
472.779 123.424 li
474.809 123.555 li
476.829 123.694 li
478.849 123.834 li
480.869 123.984 li
482.889 124.135 li
484.909 124.305 li
486.929 124.475 li
488.949 124.654 li
490.969 124.854 li
492.989 125.055 li
494.349 125.194 li
495.009 125.274 li
497.029 125.535 li
499.049 125.805 li
501.069 126.095 li
503.089 126.404 li
505.109 126.725 li
507.129 127.055 li
508.039 127.215 li
509.149 127.444 li
511.169 127.895 li
513.189 128.354 li
515.208 128.845 li
516.739 129.234 li
517.229 129.385 li
519.249 130.045 li
521.269 130.725 li
522.779 131.254 li
523.289 131.484 li
523.289 10.0444 li
323.289 10.0444 li
323.289 97.5547 li
cp
.451759 .371954 .377142 .0206302 cmyk
f
323.289 97.5547 mo
323.519 96.9141 li
324.349 94.8945 li
325.309 92.9346 li
325.339 92.875 li
326.549 90.8545 li
327.329 89.7344 li
327.999 88.8345 li
329.349 87.2246 li
329.719 86.8145 li
331.369 85.1743 li
331.779 84.7944 li
333.389 83.4443 li
334.279 82.7744 li
335.409 81.9746 li
337.339 80.7544 li
337.429 80.6943 li
339.449 79.6045 li
341.279 78.7344 li
341.469 78.6445 li
343.489 77.8247 li
345.509 77.1147 li
346.859 76.7144 li
347.529 76.5146 li
349.549 76.0146 li
351.569 75.6045 li
353.589 75.2744 li
355.609 75.0244 li
357.629 74.8447 li
359.649 74.7344 li
361.569 74.6943 li
361.669 74.6846 li
361.939 74.6943 li
363.689 74.7046 li
365.709 74.7847 li
367.729 74.9146 li
369.749 75.0947 li
371.769 75.3145 li
373.799 75.5947 li
375.819 75.9146 li
377.839 76.2744 li
379.859 76.6743 li
380.029 76.7144 li
381.879 77.1147 li
383.899 77.5845 li
385.919 78.0947 li
387.939 78.6445 li
388.249 78.7344 li
389.959 79.2344 li
391.979 79.8647 li
394 80.5244 li
394.66 80.7544 li
396.019 81.2544 li
398.039 82.0547 li
399.75 82.7744 li
400.059 82.9243 li
402.08 84.0044 li
403.458 84.7944 li
404.099 85.3647 li
405.579 86.8145 li
405.909 88.8345 li
404.458 90.8545 li
404.099 91.084 li
402.08 92.4941 li
401.589 92.875 li
400.059 93.6445 li
398.039 94.8242 li
397.929 94.8945 li
396.019 95.834 li
394.119 96.9141 li
394 96.9746 li
391.979 98.084 li
390.619 98.9346 li
389.959 99.3652 li
387.939 100.805 li
387.749 100.955 li
385.919 102.694 li
385.639 102.975 li
384.419 104.994 li
384.189 107.015 li
384.989 109.035 li
385.919 109.965 li
386.959 111.055 li
387.939 111.654 li
389.959 112.895 li
390.239 113.074 li
391.979 113.824 li
394 114.664 li
395.069 115.095 li
396.019 115.395 li
398.039 116.015 li
400.059 116.595 li
402.029 117.115 li
402.08 117.125 li
404.099 117.584 li
406.119 118.004 li
408.139 118.395 li
410.159 118.754 li
412.179 119.095 li
412.449 119.135 li
414.199 119.395 li
416.219 119.674 li
418.239 119.935 li
420.259 120.164 li
422.279 120.385 li
424.299 120.584 li
426.319 120.774 li
428.339 120.944 li
430.359 121.104 li
431.099 121.154 li
432.379 121.254 li
434.399 121.395 li
436.419 121.535 li
438.439 121.654 li
440.458 121.774 li
442.479 121.895 li
444.499 121.994 li
446.519 122.104 li
448.539 122.205 li
450.559 122.305 li
452.579 122.395 li
454.599 122.494 li
456.619 122.584 li
458.639 122.685 li
460.659 122.774 li
462.679 122.875 li
464.699 122.975 li
466.719 123.074 li
468.629 123.174 li
468.739 123.185 li
470.759 123.305 li
472.779 123.424 li
474.809 123.555 li
476.829 123.694 li
478.849 123.834 li
480.869 123.984 li
482.889 124.135 li
484.909 124.305 li
486.929 124.475 li
488.949 124.654 li
490.969 124.854 li
492.989 125.055 li
494.349 125.194 li
495.009 125.274 li
497.029 125.535 li
499.049 125.805 li
501.069 126.095 li
503.089 126.404 li
505.109 126.725 li
507.129 127.055 li
508.039 127.215 li
509.149 127.444 li
511.169 127.895 li
513.189 128.354 li
515.208 128.845 li
516.739 129.234 li
517.229 129.385 li
519.249 130.045 li
521.269 130.725 li
522.779 131.254 li
523.289 131.484 li
523.289 10.0444 li
323.289 10.0444 li
323.289 97.5547 li
cp
.75021 .679683 .670222 .90164 cmyk
@
323.289 78.0947 mo
324.839 76.7144 li
325.309 76.3247 li
327.329 74.7646 li
327.439 74.6943 li
329.349 73.4043 li
330.559 72.6743 li
331.369 72.2046 li
333.389 71.1348 li
334.419 70.6543 li
335.409 70.1943 li
337.429 69.3745 li
339.449 68.6543 li
339.519 68.6348 li
341.469 68.0347 li
343.489 67.5044 li
345.509 67.0547 li
347.529 66.6943 li
348.089 66.6147 li
349.549 66.4043 li
351.569 66.1943 li
353.589 66.0444 li
355.609 65.9746 li
357.629 65.9644 li
359.649 66.0146 li
361.669 66.1245 li
363.689 66.2847 li
365.709 66.5146 li
366.449 66.6147 li
367.729 66.7847 li
369.749 67.1045 li
371.769 67.4644 li
373.799 67.8848 li
375.819 68.3345 li
377.009 68.6348 li
377.839 68.8247 li
379.859 69.3545 li
381.879 69.9146 li
383.899 70.5146 li
384.339 70.6543 li
385.919 71.1348 li
387.939 71.7744 li
389.959 72.4546 li
390.569 72.6743 li
391.979 73.1445 li
394 73.8647 li
396.019 74.6045 li
396.25 74.6943 li
398.039 75.3545 li
400.059 76.1348 li
401.509 76.7144 li
402.08 76.9346 li
404.099 77.7646 li
406.119 78.6147 li
406.389 78.7344 li
408.139 79.5244 li
410.159 80.4644 li
410.769 80.7544 li
412.179 81.5146 li
414.199 82.6348 li
414.439 82.7744 li
416.219 84.1147 li
417.089 84.7944 li
418.239 86.6245 li
418.349 86.8145 li
418.239 87.2646 li
417.859 88.8345 li
416.219 90.1943 li
415.489 90.8545 li
414.199 91.4648 li
412.179 92.5039 li
411.519 92.875 li
410.159 93.3945 li
408.139 94.2344 li
406.719 94.8945 li
406.119 95.1152 li
404.099 95.9141 li
402.08 96.8242 li
401.899 96.9141 li
400.059 97.7148 li
398.039 98.7051 li
397.609 98.9346 li
396.019 99.7949 li
394.128 100.955 li
394 101.045 li
391.979 102.625 li
391.559 102.975 li
390.009 104.994 li
389.959 105.194 li
389.489 107.015 li
389.959 108.545 li
390.099 109.035 li
391.919 111.055 li
391.979 111.095 li
394 112.375 li
395.139 113.074 li
396.019 113.455 li
398.039 114.295 li
400.059 115.074 li
400.099 115.095 li
402.08 115.685 li
404.099 116.244 li
406.119 116.774 li
407.549 117.115 li
408.139 117.244 li
410.159 117.645 li
412.179 118.015 li
414.199 118.354 li
416.219 118.674 li
418.239 118.965 li
419.549 119.135 li
420.259 119.225 li
422.279 119.465 li
424.299 119.685 li
426.319 119.885 li
428.339 120.074 li
430.359 120.244 li
432.379 120.404 li
434.399 120.555 li
436.419 120.685 li
438.439 120.814 li
440.458 120.935 li
442.479 121.045 li
444.499 121.145 li
444.629 121.154 li
446.519 121.254 li
448.539 121.354 li
450.559 121.455 li
452.579 121.545 li
454.599 121.635 li
456.619 121.725 li
458.639 121.814 li
460.659 121.904 li
462.679 121.994 li
464.699 122.084 li
466.719 122.185 li
468.739 122.274 li
470.759 122.375 li
472.779 122.475 li
474.809 122.584 li
476.829 122.694 li
478.849 122.805 li
480.869 122.924 li
482.889 123.055 li
484.739 123.174 li
484.909 123.185 li
486.929 123.345 li
488.949 123.504 li
490.969 123.674 li
492.989 123.854 li
495.009 124.045 li
497.029 124.244 li
499.049 124.465 li
501.069 124.685 li
503.089 124.924 li
505.109 125.174 li
505.279 125.194 li
507.129 125.475 li
509.149 125.795 li
511.169 126.135 li
513.189 126.484 li
515.208 126.865 li
516.999 127.215 li
517.229 127.274 li
519.249 127.765 li
521.269 128.274 li
523.289 128.824 li
523.289 10.0444 li
323.289 10.0444 li
323.289 78.0947 li
cp
.486366 .403357 .405402 .0441291 cmyk
f
323.289 78.0947 mo
324.839 76.7144 li
325.309 76.3247 li
327.329 74.7646 li
327.439 74.6943 li
329.349 73.4043 li
330.559 72.6743 li
331.369 72.2046 li
333.389 71.1348 li
334.419 70.6543 li
335.409 70.1943 li
337.429 69.3745 li
339.449 68.6543 li
339.519 68.6348 li
341.469 68.0347 li
343.489 67.5044 li
345.509 67.0547 li
347.529 66.6943 li
348.089 66.6147 li
349.549 66.4043 li
351.569 66.1943 li
353.589 66.0444 li
355.609 65.9746 li
357.629 65.9644 li
359.649 66.0146 li
361.669 66.1245 li
363.689 66.2847 li
365.709 66.5146 li
366.449 66.6147 li
367.729 66.7847 li
369.749 67.1045 li
371.769 67.4644 li
373.799 67.8848 li
375.819 68.3345 li
377.009 68.6348 li
377.839 68.8247 li
379.859 69.3545 li
381.879 69.9146 li
383.899 70.5146 li
384.339 70.6543 li
385.919 71.1348 li
387.939 71.7744 li
389.959 72.4546 li
390.569 72.6743 li
391.979 73.1445 li
394 73.8647 li
396.019 74.6045 li
396.25 74.6943 li
398.039 75.3545 li
400.059 76.1348 li
401.509 76.7144 li
402.08 76.9346 li
404.099 77.7646 li
406.119 78.6147 li
406.389 78.7344 li
408.139 79.5244 li
410.159 80.4644 li
410.769 80.7544 li
412.179 81.5146 li
414.199 82.6348 li
414.439 82.7744 li
416.219 84.1147 li
417.089 84.7944 li
418.239 86.6245 li
418.349 86.8145 li
418.239 87.2646 li
417.859 88.8345 li
416.219 90.1943 li
415.489 90.8545 li
414.199 91.4648 li
412.179 92.5039 li
411.519 92.875 li
410.159 93.3945 li
408.139 94.2344 li
406.719 94.8945 li
406.119 95.1152 li
404.099 95.9141 li
402.08 96.8242 li
401.899 96.9141 li
400.059 97.7148 li
398.039 98.7051 li
397.609 98.9346 li
396.019 99.7949 li
394.128 100.955 li
394 101.045 li
391.979 102.625 li
391.559 102.975 li
390.009 104.994 li
389.959 105.194 li
389.489 107.015 li
389.959 108.545 li
390.099 109.035 li
391.919 111.055 li
391.979 111.095 li
394 112.375 li
395.139 113.074 li
396.019 113.455 li
398.039 114.295 li
400.059 115.074 li
400.099 115.095 li
402.08 115.685 li
404.099 116.244 li
406.119 116.774 li
407.549 117.115 li
408.139 117.244 li
410.159 117.645 li
412.179 118.015 li
414.199 118.354 li
416.219 118.674 li
418.239 118.965 li
419.549 119.135 li
420.259 119.225 li
422.279 119.465 li
424.299 119.685 li
426.319 119.885 li
428.339 120.074 li
430.359 120.244 li
432.379 120.404 li
434.399 120.555 li
436.419 120.685 li
438.439 120.814 li
440.458 120.935 li
442.479 121.045 li
444.499 121.145 li
444.629 121.154 li
446.519 121.254 li
448.539 121.354 li
450.559 121.455 li
452.579 121.545 li
454.599 121.635 li
456.619 121.725 li
458.639 121.814 li
460.659 121.904 li
462.679 121.994 li
464.699 122.084 li
466.719 122.185 li
468.739 122.274 li
470.759 122.375 li
472.779 122.475 li
474.809 122.584 li
476.829 122.694 li
478.849 122.805 li
480.869 122.924 li
482.889 123.055 li
484.739 123.174 li
484.909 123.185 li
486.929 123.345 li
488.949 123.504 li
490.969 123.674 li
492.989 123.854 li
495.009 124.045 li
497.029 124.244 li
499.049 124.465 li
501.069 124.685 li
503.089 124.924 li
505.109 125.174 li
505.279 125.194 li
507.129 125.475 li
509.149 125.795 li
511.169 126.135 li
513.189 126.484 li
515.208 126.865 li
516.999 127.215 li
517.229 127.274 li
519.249 127.765 li
521.269 128.274 li
523.289 128.824 li
523.289 10.0444 li
323.289 10.0444 li
323.289 78.0947 li
cp
.75021 .679683 .670222 .90164 cmyk
@
323.289 65.0547 mo
324.059 64.5947 li
325.309 63.8745 li
327.329 62.8047 li
327.809 62.5747 li
329.349 61.8545 li
331.369 60.9946 li
332.529 60.5547 li
333.389 60.2344 li
335.409 59.5645 li
337.429 58.9746 li
339.179 58.5244 li
339.449 58.4644 li
341.469 58.0347 li
343.489 57.6743 li
345.509 57.3848 li
347.529 57.1646 li
349.549 57.0146 li
351.569 56.9346 li
353.589 56.9043 li
355.609 56.9443 li
357.629 57.0444 li
359.649 57.2046 li
361.669 57.4146 li
363.689 57.6846 li
365.709 58.0044 li
367.729 58.3848 li
368.419 58.5244 li
369.749 58.8145 li
371.769 59.2847 li
373.799 59.8047 li
375.819 60.3745 li
376.399 60.5547 li
377.839 60.9746 li
379.859 61.6245 li
381.879 62.3145 li
382.589 62.5747 li
383.899 63.0347 li
385.919 63.7744 li
387.939 64.5645 li
387.999 64.5947 li
389.959 65.3647 li
391.979 66.1943 li
392.958 66.6147 li
394 67.0347 li
396.019 67.9043 li
397.679 68.6348 li
398.039 68.7847 li
400.059 69.6646 li
402.08 70.5747 li
402.249 70.6543 li
404.099 71.4746 li
406.119 72.3945 li
406.708 72.6743 li
408.139 73.3145 li
410.159 74.2446 li
411.099 74.6943 li
412.179 75.1943 li
414.199 76.1445 li
415.389 76.7144 li
416.219 77.1147 li
418.239 78.1045 li
419.489 78.7344 li
420.259 79.1445 li
422.279 80.2246 li
423.249 80.7544 li
424.299 81.4146 li
426.319 82.7046 li
426.429 82.7744 li
428.339 84.4746 li
428.689 84.7944 li
429.629 86.8145 li
428.789 88.8345 li
428.339 89.1245 li
426.319 90.5146 li
425.839 90.8545 li
424.299 91.4551 li
422.279 92.2949 li
420.958 92.875 li
420.259 93.084 li
418.239 93.7344 li
416.219 94.4346 li
414.989 94.8945 li
414.199 95.1348 li
412.179 95.7744 li
410.159 96.4941 li
409.059 96.9141 li
408.139 97.2344 li
406.119 97.9844 li
404.099 98.834 li
403.889 98.9346 li
402.08 99.7539 li
400.059 100.795 li
399.759 100.955 li
398.039 102.055 li
396.739 102.975 li
396.019 103.715 li
394.849 104.994 li
394.119 107.015 li
394.569 109.035 li
396.019 110.685 li
396.339 111.055 li
398.039 112.115 li
399.628 113.074 li
400.059 113.254 li
402.08 114.064 li
404.099 114.824 li
404.869 115.095 li
406.119 115.444 li
408.139 115.975 li
410.159 116.465 li
412.179 116.924 li
413.109 117.115 li
414.199 117.314 li
416.219 117.664 li
418.239 117.975 li
420.259 118.265 li
422.279 118.535 li
424.299 118.774 li
426.319 119.004 li
427.639 119.135 li
428.339 119.205 li
430.359 119.385 li
432.379 119.555 li
434.399 119.715 li
436.419 119.854 li
438.439 119.994 li
440.458 120.115 li
442.479 120.225 li
444.499 120.334 li
446.519 120.435 li
448.539 120.535 li
450.559 120.625 li
452.579 120.715 li
454.599 120.795 li
456.619 120.875 li
458.639 120.965 li
460.659 121.045 li
462.679 121.125 li
463.589 121.154 li
464.699 121.205 li
466.719 121.285 li
468.739 121.375 li
470.759 121.465 li
472.779 121.555 li
474.809 121.645 li
476.829 121.744 li
478.849 121.845 li
480.869 121.944 li
482.889 122.055 li
484.909 122.174 li
486.929 122.295 li
488.949 122.424 li
490.969 122.564 li
492.989 122.705 li
495.009 122.854 li
497.029 123.015 li
498.889 123.174 li
499.049 123.194 li
501.069 123.385 li
503.089 123.595 li
505.109 123.814 li
507.129 124.055 li
509.149 124.305 li
511.169 124.564 li
513.189 124.845 li
515.208 125.135 li
515.599 125.194 li
517.229 125.484 li
519.249 125.854 li
521.269 126.254 li
523.289 126.664 li
523.289 10.0444 li
323.289 10.0444 li
323.289 65.0547 li
cp
.516472 .431495 .431495 .0754711 cmyk
f
323.289 65.0547 mo
324.059 64.5947 li
325.309 63.8745 li
327.329 62.8047 li
327.809 62.5747 li
329.349 61.8545 li
331.369 60.9946 li
332.529 60.5547 li
333.389 60.2344 li
335.409 59.5645 li
337.429 58.9746 li
339.179 58.5244 li
339.449 58.4644 li
341.469 58.0347 li
343.489 57.6743 li
345.509 57.3848 li
347.529 57.1646 li
349.549 57.0146 li
351.569 56.9346 li
353.589 56.9043 li
355.609 56.9443 li
357.629 57.0444 li
359.649 57.2046 li
361.669 57.4146 li
363.689 57.6846 li
365.709 58.0044 li
367.729 58.3848 li
368.419 58.5244 li
369.749 58.8145 li
371.769 59.2847 li
373.799 59.8047 li
375.819 60.3745 li
376.399 60.5547 li
377.839 60.9746 li
379.859 61.6245 li
381.879 62.3145 li
382.589 62.5747 li
383.899 63.0347 li
385.919 63.7744 li
387.939 64.5645 li
387.999 64.5947 li
389.959 65.3647 li
391.979 66.1943 li
392.958 66.6147 li
394 67.0347 li
396.019 67.9043 li
397.679 68.6348 li
398.039 68.7847 li
400.059 69.6646 li
402.08 70.5747 li
402.249 70.6543 li
404.099 71.4746 li
406.119 72.3945 li
406.708 72.6743 li
408.139 73.3145 li
410.159 74.2446 li
411.099 74.6943 li
412.179 75.1943 li
414.199 76.1445 li
415.389 76.7144 li
416.219 77.1147 li
418.239 78.1045 li
419.489 78.7344 li
420.259 79.1445 li
422.279 80.2246 li
423.249 80.7544 li
424.299 81.4146 li
426.319 82.7046 li
426.429 82.7744 li
428.339 84.4746 li
428.689 84.7944 li
429.629 86.8145 li
428.789 88.8345 li
428.339 89.1245 li
426.319 90.5146 li
425.839 90.8545 li
424.299 91.4551 li
422.279 92.2949 li
420.958 92.875 li
420.259 93.084 li
418.239 93.7344 li
416.219 94.4346 li
414.989 94.8945 li
414.199 95.1348 li
412.179 95.7744 li
410.159 96.4941 li
409.059 96.9141 li
408.139 97.2344 li
406.119 97.9844 li
404.099 98.834 li
403.889 98.9346 li
402.08 99.7539 li
400.059 100.795 li
399.759 100.955 li
398.039 102.055 li
396.739 102.975 li
396.019 103.715 li
394.849 104.994 li
394.119 107.015 li
394.569 109.035 li
396.019 110.685 li
396.339 111.055 li
398.039 112.115 li
399.628 113.074 li
400.059 113.254 li
402.08 114.064 li
404.099 114.824 li
404.869 115.095 li
406.119 115.444 li
408.139 115.975 li
410.159 116.465 li
412.179 116.924 li
413.109 117.115 li
414.199 117.314 li
416.219 117.664 li
418.239 117.975 li
420.259 118.265 li
422.279 118.535 li
424.299 118.774 li
426.319 119.004 li
427.639 119.135 li
428.339 119.205 li
430.359 119.385 li
432.379 119.555 li
434.399 119.715 li
436.419 119.854 li
438.439 119.994 li
440.458 120.115 li
442.479 120.225 li
444.499 120.334 li
446.519 120.435 li
448.539 120.535 li
450.559 120.625 li
452.579 120.715 li
454.599 120.795 li
456.619 120.875 li
458.639 120.965 li
460.659 121.045 li
462.679 121.125 li
463.589 121.154 li
464.699 121.205 li
466.719 121.285 li
468.739 121.375 li
470.759 121.465 li
472.779 121.555 li
474.809 121.645 li
476.829 121.744 li
478.849 121.845 li
480.869 121.944 li
482.889 122.055 li
484.909 122.174 li
486.929 122.295 li
488.949 122.424 li
490.969 122.564 li
492.989 122.705 li
495.009 122.854 li
497.029 123.015 li
498.889 123.174 li
499.049 123.194 li
501.069 123.385 li
503.089 123.595 li
505.109 123.814 li
507.129 124.055 li
509.149 124.305 li
511.169 124.564 li
513.189 124.845 li
515.208 125.135 li
515.599 125.194 li
517.229 125.484 li
519.249 125.854 li
521.269 126.254 li
523.289 126.664 li
523.289 10.0444 li
323.289 10.0444 li
323.289 65.0547 li
cp
.75021 .679683 .670222 .90164 cmyk
@
323.289 53.8848 mo
325.309 52.9844 li
326.569 52.4644 li
327.329 52.1646 li
329.349 51.4346 li
331.369 50.7646 li
332.449 50.4443 li
333.389 50.1743 li
335.409 49.6646 li
337.429 49.2144 li
339.449 48.8247 li
341.469 48.5146 li
342.109 48.4243 li
343.489 48.2544 li
345.509 48.0645 li
347.529 47.9346 li
349.549 47.8647 li
351.569 47.8545 li
353.589 47.9043 li
355.609 48.0044 li
357.629 48.1646 li
359.649 48.3848 li
359.979 48.4243 li
361.669 48.6543 li
363.689 48.9844 li
365.709 49.3647 li
367.729 49.8047 li
369.749 50.2944 li
370.339 50.4443 li
371.769 50.8345 li
373.799 51.4146 li
375.819 52.0547 li
377.029 52.4644 li
377.839 52.7344 li
379.859 53.4644 li
381.879 54.2446 li
382.489 54.4844 li
383.899 55.0547 li
385.919 55.9043 li
387.289 56.5044 li
387.939 56.7847 li
389.959 57.7046 li
391.699 58.5244 li
391.979 58.6543 li
394 59.6245 li
395.849 60.5547 li
396.019 60.6245 li
398.039 61.6445 li
399.839 62.5747 li
400.059 62.6743 li
402.08 63.7144 li
403.739 64.5947 li
404.099 64.7744 li
406.119 65.8247 li
407.589 66.6147 li
408.139 66.8945 li
410.159 67.9443 li
411.439 68.6348 li
412.179 69.0146 li
414.199 70.0645 li
415.299 70.6543 li
416.219 71.1245 li
418.239 72.1646 li
419.199 72.6743 li
420.259 73.2144 li
422.279 74.2544 li
423.109 74.6943 li
424.299 75.3047 li
426.319 76.3545 li
426.989 76.7144 li
428.339 77.4346 li
430.359 78.5146 li
430.749 78.7344 li
432.379 79.6743 li
434.239 80.7544 li
434.399 80.8545 li
436.419 82.2246 li
437.219 82.7744 li
438.439 83.9243 li
439.369 84.7944 li
440.249 86.8145 li
439.339 88.8345 li
438.439 89.4043 li
436.419 90.6846 li
436.159 90.8545 li
434.399 91.4746 li
432.379 92.1943 li
430.569 92.875 li
430.359 92.9238 li
428.339 93.4551 li
426.319 94.0146 li
424.299 94.6152 li
423.399 94.8945 li
422.279 95.1641 li
420.259 95.6943 li
418.239 96.2646 li
416.219 96.8945 li
416.159 96.9141 li
414.199 97.4844 li
412.179 98.125 li
410.159 98.8447 li
409.939 98.9346 li
408.139 99.6152 li
406.119 100.465 li
405.069 100.955 li
404.099 101.465 li
402.08 102.645 li
401.548 102.975 li
400.059 104.295 li
399.33 104.994 li
398.378 107.015 li
398.718 109.035 li
400.059 110.564 li
400.479 111.055 li
402.08 112.015 li
403.919 113.074 li
404.099 113.145 li
406.119 113.914 li
408.139 114.615 li
409.589 115.095 li
410.159 115.244 li
412.179 115.734 li
414.199 116.185 li
416.219 116.604 li
418.239 116.984 li
418.999 117.115 li
420.259 117.305 li
422.279 117.595 li
424.299 117.865 li
426.319 118.104 li
428.339 118.314 li
430.359 118.524 li
432.379 118.705 li
434.399 118.875 li
436.419 119.024 li
437.979 119.135 li
438.439 119.164 li
440.458 119.295 li
442.479 119.414 li
444.499 119.524 li
446.519 119.625 li
448.539 119.725 li
450.559 119.814 li
452.579 119.895 li
454.599 119.975 li
456.619 120.055 li
458.639 120.135 li
460.659 120.205 li
462.679 120.274 li
464.699 120.354 li
466.719 120.424 li
468.739 120.494 li
470.759 120.574 li
472.779 120.645 li
474.809 120.725 li
476.829 120.805 li
478.849 120.885 li
480.869 120.975 li
482.889 121.064 li
484.799 121.154 li
484.909 121.164 li
486.929 121.265 li
488.949 121.375 li
490.969 121.494 li
492.989 121.615 li
495.009 121.744 li
497.029 121.885 li
499.049 122.035 li
501.069 122.185 li
503.089 122.354 li
505.109 122.524 li
507.129 122.715 li
509.149 122.914 li
511.169 123.115 li
511.699 123.174 li
513.189 123.354 li
515.208 123.615 li
517.229 123.885 li
519.249 124.174 li
521.269 124.484 li
523.289 124.805 li
523.289 10.0444 li
323.289 10.0444 li
323.289 53.8848 li
cp
.54995 .465064 .4607 .115328 cmyk
f
323.289 53.8848 mo
325.309 52.9844 li
326.569 52.4644 li
327.329 52.1646 li
329.349 51.4346 li
331.369 50.7646 li
332.449 50.4443 li
333.389 50.1743 li
335.409 49.6646 li
337.429 49.2144 li
339.449 48.8247 li
341.469 48.5146 li
342.109 48.4243 li
343.489 48.2544 li
345.509 48.0645 li
347.529 47.9346 li
349.549 47.8647 li
351.569 47.8545 li
353.589 47.9043 li
355.609 48.0044 li
357.629 48.1646 li
359.649 48.3848 li
359.979 48.4243 li
361.669 48.6543 li
363.689 48.9844 li
365.709 49.3647 li
367.729 49.8047 li
369.749 50.2944 li
370.339 50.4443 li
371.769 50.8345 li
373.799 51.4146 li
375.819 52.0547 li
377.029 52.4644 li
377.839 52.7344 li
379.859 53.4644 li
381.879 54.2446 li
382.489 54.4844 li
383.899 55.0547 li
385.919 55.9043 li
387.289 56.5044 li
387.939 56.7847 li
389.959 57.7046 li
391.699 58.5244 li
391.979 58.6543 li
394 59.6245 li
395.849 60.5547 li
396.019 60.6245 li
398.039 61.6445 li
399.839 62.5747 li
400.059 62.6743 li
402.08 63.7144 li
403.739 64.5947 li
404.099 64.7744 li
406.119 65.8247 li
407.589 66.6147 li
408.139 66.8945 li
410.159 67.9443 li
411.439 68.6348 li
412.179 69.0146 li
414.199 70.0645 li
415.299 70.6543 li
416.219 71.1245 li
418.239 72.1646 li
419.199 72.6743 li
420.259 73.2144 li
422.279 74.2544 li
423.109 74.6943 li
424.299 75.3047 li
426.319 76.3545 li
426.989 76.7144 li
428.339 77.4346 li
430.359 78.5146 li
430.749 78.7344 li
432.379 79.6743 li
434.239 80.7544 li
434.399 80.8545 li
436.419 82.2246 li
437.219 82.7744 li
438.439 83.9243 li
439.369 84.7944 li
440.249 86.8145 li
439.339 88.8345 li
438.439 89.4043 li
436.419 90.6846 li
436.159 90.8545 li
434.399 91.4746 li
432.379 92.1943 li
430.569 92.875 li
430.359 92.9238 li
428.339 93.4551 li
426.319 94.0146 li
424.299 94.6152 li
423.399 94.8945 li
422.279 95.1641 li
420.259 95.6943 li
418.239 96.2646 li
416.219 96.8945 li
416.159 96.9141 li
414.199 97.4844 li
412.179 98.125 li
410.159 98.8447 li
409.939 98.9346 li
408.139 99.6152 li
406.119 100.465 li
405.069 100.955 li
404.099 101.465 li
402.08 102.645 li
401.548 102.975 li
400.059 104.295 li
399.33 104.994 li
398.378 107.015 li
398.718 109.035 li
400.059 110.564 li
400.479 111.055 li
402.08 112.015 li
403.919 113.074 li
404.099 113.145 li
406.119 113.914 li
408.139 114.615 li
409.589 115.095 li
410.159 115.244 li
412.179 115.734 li
414.199 116.185 li
416.219 116.604 li
418.239 116.984 li
418.999 117.115 li
420.259 117.305 li
422.279 117.595 li
424.299 117.865 li
426.319 118.104 li
428.339 118.314 li
430.359 118.524 li
432.379 118.705 li
434.399 118.875 li
436.419 119.024 li
437.979 119.135 li
438.439 119.164 li
440.458 119.295 li
442.479 119.414 li
444.499 119.524 li
446.519 119.625 li
448.539 119.725 li
450.559 119.814 li
452.579 119.895 li
454.599 119.975 li
456.619 120.055 li
458.639 120.135 li
460.659 120.205 li
462.679 120.274 li
464.699 120.354 li
466.719 120.424 li
468.739 120.494 li
470.759 120.574 li
472.779 120.645 li
474.809 120.725 li
476.829 120.805 li
478.849 120.885 li
480.869 120.975 li
482.889 121.064 li
484.799 121.154 li
484.909 121.164 li
486.929 121.265 li
488.949 121.375 li
490.969 121.494 li
492.989 121.615 li
495.009 121.744 li
497.029 121.885 li
499.049 122.035 li
501.069 122.185 li
503.089 122.354 li
505.109 122.524 li
507.129 122.715 li
509.149 122.914 li
511.169 123.115 li
511.699 123.174 li
513.189 123.354 li
515.208 123.615 li
517.229 123.885 li
519.249 124.174 li
521.269 124.484 li
523.289 124.805 li
523.289 10.0444 li
323.289 10.0444 li
323.289 53.8848 li
cp
.75021 .679683 .670222 .90164 cmyk
@
323.289 43.7446 mo
325.309 43.0146 li
327.239 42.3647 li
327.329 42.3345 li
329.349 41.7344 li
331.369 41.1943 li
333.389 40.7046 li
335.109 40.3447 li
335.409 40.2847 li
337.429 39.9243 li
339.449 39.6245 li
341.469 39.3745 li
343.489 39.1846 li
345.509 39.0547 li
347.529 38.9746 li
349.549 38.9443 li
351.569 38.9746 li
353.589 39.0645 li
355.609 39.2046 li
357.629 39.3945 li
359.649 39.6445 li
361.669 39.9443 li
363.689 40.2944 li
363.959 40.3447 li
365.709 40.7046 li
367.729 41.1646 li
369.749 41.6743 li
371.769 42.2344 li
372.209 42.3647 li
373.799 42.8545 li
375.819 43.5146 li
377.839 44.2344 li
378.239 44.3848 li
379.859 44.9946 li
381.879 45.8145 li
383.269 46.4043 li
383.899 46.6743 li
385.919 47.5845 li
387.709 48.4243 li
387.939 48.5347 li
389.959 49.5244 li
391.769 50.4443 li
391.979 50.5547 li
394 51.6147 li
395.548 52.4644 li
396.019 52.7144 li
398.039 53.8447 li
399.16 54.4844 li
400.059 54.9946 li
402.08 56.1743 li
402.639 56.5044 li
404.099 57.3647 li
406.049 58.5244 li
406.119 58.5747 li
408.139 59.7744 li
409.399 60.5547 li
410.159 60.9946 li
412.179 62.2144 li
412.749 62.5747 li
414.199 63.4243 li
416.119 64.5947 li
416.219 64.6445 li
418.239 65.8345 li
419.529 66.6147 li
420.259 67.0347 li
422.279 68.2046 li
422.999 68.6348 li
424.299 69.3647 li
426.319 70.5244 li
426.539 70.6543 li
428.339 71.6543 li
430.159 72.6743 li
430.359 72.7847 li
432.379 73.8945 li
433.829 74.6943 li
434.399 75.0044 li
436.419 76.1147 li
437.509 76.7144 li
438.439 77.2344 li
440.458 78.3647 li
441.109 78.7344 li
442.479 79.5547 li
444.479 80.7544 li
444.499 80.7646 li
446.519 82.1646 li
447.399 82.7744 li
448.539 83.8447 li
449.559 84.7944 li
450.539 86.8145 li
449.789 88.8345 li
448.539 89.6543 li
446.679 90.8545 li
446.519 90.9043 li
444.499 91.5947 li
442.479 92.2744 li
440.729 92.875 li
440.458 92.9346 li
438.439 93.4043 li
436.419 93.8848 li
434.399 94.3848 li
432.419 94.8945 li
432.379 94.9043 li
430.359 95.3145 li
428.339 95.7539 li
426.319 96.2344 li
424.299 96.7344 li
423.629 96.9141 li
422.279 97.2246 li
420.259 97.7344 li
418.239 98.2852 li
416.219 98.8848 li
416.079 98.9346 li
414.199 99.5244 li
412.179 100.225 li
410.299 100.955 li
410.159 101.015 li
408.139 101.955 li
406.199 102.975 li
406.119 103.035 li
404.099 104.584 li
403.609 104.994 li
402.439 107.015 li
402.689 109.035 li
404.099 110.615 li
404.499 111.055 li
406.119 111.984 li
408.139 113.064 li
408.159 113.074 li
410.159 113.774 li
412.179 114.424 li
414.199 115.024 li
414.458 115.095 li
416.219 115.484 li
418.239 115.895 li
420.259 116.265 li
422.279 116.615 li
424.299 116.924 li
425.659 117.115 li
426.319 117.194 li
428.339 117.435 li
430.359 117.645 li
432.379 117.845 li
434.399 118.015 li
436.419 118.174 li
438.439 118.324 li
440.458 118.465 li
442.479 118.584 li
444.499 118.705 li
446.519 118.805 li
448.539 118.904 li
450.559 118.994 li
452.579 119.074 li
453.999 119.135 li
454.599 119.154 li
456.619 119.234 li
458.639 119.305 li
460.659 119.375 li
462.679 119.435 li
464.699 119.504 li
466.719 119.564 li
468.739 119.635 li
470.759 119.694 li
472.779 119.754 li
474.809 119.824 li
476.829 119.895 li
478.849 119.965 li
480.869 120.035 li
482.889 120.115 li
484.909 120.194 li
486.929 120.274 li
488.949 120.365 li
490.969 120.455 li
492.989 120.555 li
495.009 120.654 li
497.029 120.765 li
499.049 120.885 li
501.069 121.015 li
503.089 121.145 li
503.239 121.154 li
505.109 121.295 li
507.129 121.455 li
509.149 121.615 li
511.169 121.795 li
513.189 121.984 li
515.208 122.185 li
517.229 122.395 li
519.249 122.625 li
521.269 122.865 li
523.289 123.125 li
523.289 10.0444 li
323.289 10.0444 li
323.289 43.7446 li
cp
.577111 .492164 .487007 .162814 cmyk
f
323.289 43.7446 mo
325.309 43.0146 li
327.239 42.3647 li
327.329 42.3345 li
329.349 41.7344 li
331.369 41.1943 li
333.389 40.7046 li
335.109 40.3447 li
335.409 40.2847 li
337.429 39.9243 li
339.449 39.6245 li
341.469 39.3745 li
343.489 39.1846 li
345.509 39.0547 li
347.529 38.9746 li
349.549 38.9443 li
351.569 38.9746 li
353.589 39.0645 li
355.609 39.2046 li
357.629 39.3945 li
359.649 39.6445 li
361.669 39.9443 li
363.689 40.2944 li
363.959 40.3447 li
365.709 40.7046 li
367.729 41.1646 li
369.749 41.6743 li
371.769 42.2344 li
372.209 42.3647 li
373.799 42.8545 li
375.819 43.5146 li
377.839 44.2344 li
378.239 44.3848 li
379.859 44.9946 li
381.879 45.8145 li
383.269 46.4043 li
383.899 46.6743 li
385.919 47.5845 li
387.709 48.4243 li
387.939 48.5347 li
389.959 49.5244 li
391.769 50.4443 li
391.979 50.5547 li
394 51.6147 li
395.548 52.4644 li
396.019 52.7144 li
398.039 53.8447 li
399.16 54.4844 li
400.059 54.9946 li
402.08 56.1743 li
402.639 56.5044 li
404.099 57.3647 li
406.049 58.5244 li
406.119 58.5747 li
408.139 59.7744 li
409.399 60.5547 li
410.159 60.9946 li
412.179 62.2144 li
412.749 62.5747 li
414.199 63.4243 li
416.119 64.5947 li
416.219 64.6445 li
418.239 65.8345 li
419.529 66.6147 li
420.259 67.0347 li
422.279 68.2046 li
422.999 68.6348 li
424.299 69.3647 li
426.319 70.5244 li
426.539 70.6543 li
428.339 71.6543 li
430.159 72.6743 li
430.359 72.7847 li
432.379 73.8945 li
433.829 74.6943 li
434.399 75.0044 li
436.419 76.1147 li
437.509 76.7144 li
438.439 77.2344 li
440.458 78.3647 li
441.109 78.7344 li
442.479 79.5547 li
444.479 80.7544 li
444.499 80.7646 li
446.519 82.1646 li
447.399 82.7744 li
448.539 83.8447 li
449.559 84.7944 li
450.539 86.8145 li
449.789 88.8345 li
448.539 89.6543 li
446.679 90.8545 li
446.519 90.9043 li
444.499 91.5947 li
442.479 92.2744 li
440.729 92.875 li
440.458 92.9346 li
438.439 93.4043 li
436.419 93.8848 li
434.399 94.3848 li
432.419 94.8945 li
432.379 94.9043 li
430.359 95.3145 li
428.339 95.7539 li
426.319 96.2344 li
424.299 96.7344 li
423.629 96.9141 li
422.279 97.2246 li
420.259 97.7344 li
418.239 98.2852 li
416.219 98.8848 li
416.079 98.9346 li
414.199 99.5244 li
412.179 100.225 li
410.299 100.955 li
410.159 101.015 li
408.139 101.955 li
406.199 102.975 li
406.119 103.035 li
404.099 104.584 li
403.609 104.994 li
402.439 107.015 li
402.689 109.035 li
404.099 110.615 li
404.499 111.055 li
406.119 111.984 li
408.139 113.064 li
408.159 113.074 li
410.159 113.774 li
412.179 114.424 li
414.199 115.024 li
414.458 115.095 li
416.219 115.484 li
418.239 115.895 li
420.259 116.265 li
422.279 116.615 li
424.299 116.924 li
425.659 117.115 li
426.319 117.194 li
428.339 117.435 li
430.359 117.645 li
432.379 117.845 li
434.399 118.015 li
436.419 118.174 li
438.439 118.324 li
440.458 118.465 li
442.479 118.584 li
444.499 118.705 li
446.519 118.805 li
448.539 118.904 li
450.559 118.994 li
452.579 119.074 li
453.999 119.135 li
454.599 119.154 li
456.619 119.234 li
458.639 119.305 li
460.659 119.375 li
462.679 119.435 li
464.699 119.504 li
466.719 119.564 li
468.739 119.635 li
470.759 119.694 li
472.779 119.754 li
474.809 119.824 li
476.829 119.895 li
478.849 119.965 li
480.869 120.035 li
482.889 120.115 li
484.909 120.194 li
486.929 120.274 li
488.949 120.365 li
490.969 120.455 li
492.989 120.555 li
495.009 120.654 li
497.029 120.765 li
499.049 120.885 li
501.069 121.015 li
503.089 121.145 li
503.239 121.154 li
505.109 121.295 li
507.129 121.455 li
509.149 121.615 li
511.169 121.795 li
513.189 121.984 li
515.208 122.185 li
517.229 122.395 li
519.249 122.625 li
521.269 122.865 li
523.289 123.125 li
523.289 10.0444 li
323.289 10.0444 li
323.289 43.7446 li
cp
.75021 .679683 .670222 .90164 cmyk
@
323.289 34.2344 mo
325.309 33.6045 li
327.329 33.0244 li
329.349 32.5044 li
330.399 32.2646 li
331.369 32.0444 li
333.389 31.6348 li
335.409 31.2744 li
337.429 30.9746 li
339.449 30.7246 li
341.469 30.5244 li
343.489 30.3745 li
345.509 30.2744 li
346.529 30.2446 li
347.529 30.2246 li
349.549 30.2246 li
350.389 30.2446 li
351.569 30.2744 li
353.589 30.3848 li
355.609 30.5347 li
357.629 30.7344 li
359.649 30.9946 li
361.669 31.2944 li
363.689 31.6543 li
365.709 32.0645 li
366.619 32.2646 li
367.729 32.5244 li
369.749 33.0347 li
371.769 33.5947 li
373.799 34.2046 li
374.039 34.2847 li
375.819 34.8745 li
377.839 35.5845 li
379.729 36.3047 li
379.859 36.3545 li
381.879 37.1743 li
383.899 38.0444 li
384.519 38.3247 li
385.919 38.9644 li
387.939 39.9243 li
388.769 40.3447 li
389.959 40.9443 li
391.979 42.0044 li
392.628 42.3647 li
394 43.1147 li
396.019 44.2646 li
396.218 44.3848 li
398.039 45.4546 li
399.599 46.4043 li
400.059 46.6846 li
402.08 47.9443 li
402.829 48.4243 li
404.099 49.2344 li
405.949 50.4443 li
406.119 50.5547 li
408.139 51.8945 li
408.989 52.4644 li
410.159 53.2446 li
411.989 54.4844 li
412.179 54.6147 li
414.199 55.9844 li
414.958 56.5044 li
416.219 57.3545 li
417.929 58.5244 li
418.239 58.7344 li
420.259 60.0947 li
420.919 60.5547 li
422.279 61.4443 li
423.958 62.5747 li
424.299 62.7944 li
426.319 64.1045 li
427.049 64.5947 li
428.339 65.4043 li
430.229 66.6147 li
430.359 66.6943 li
432.379 67.9346 li
433.489 68.6348 li
434.399 69.1743 li
436.419 70.3848 li
436.859 70.6543 li
438.439 71.5645 li
440.329 72.6743 li
440.458 72.7446 li
442.479 73.8945 li
443.879 74.6943 li
444.499 75.0444 li
446.519 76.1846 li
447.458 76.7144 li
448.539 77.3247 li
450.559 78.4844 li
450.989 78.7344 li
452.579 79.6943 li
454.339 80.7544 li
454.599 80.9346 li
456.619 82.3247 li
457.279 82.7744 li
458.639 84.0044 li
459.529 84.7944 li
460.659 86.7544 li
460.699 86.8145 li
460.659 86.9644 li
460.239 88.8345 li
458.639 90.0244 li
457.479 90.8545 li
456.619 91.1543 li
454.599 91.8652 li
452.579 92.5449 li
451.619 92.875 li
450.559 93.1045 li
448.539 93.5547 li
446.519 93.9941 li
444.499 94.4443 li
442.479 94.8945 li
440.458 95.2441 li
438.439 95.6152 li
436.419 95.9941 li
434.399 96.3945 li
432.379 96.8047 li
431.899 96.9141 li
430.359 97.2051 li
428.339 97.6045 li
426.319 98.0449 li
424.299 98.5146 li
422.629 98.9346 li
422.279 99.0146 li
420.259 99.5449 li
418.239 100.125 li
416.219 100.765 li
415.679 100.955 li
414.199 101.515 li
412.179 102.365 li
410.859 102.975 li
410.159 103.404 li
408.139 104.774 li
407.829 104.994 li
406.429 107.015 li
406.599 109.035 li
408.139 110.685 li
408.489 111.055 li
410.159 111.935 li
412.179 112.935 li
412.489 113.074 li
414.199 113.615 li
416.219 114.205 li
418.239 114.744 li
419.679 115.095 li
420.259 115.205 li
422.279 115.574 li
424.299 115.904 li
426.319 116.215 li
428.339 116.484 li
430.359 116.734 li
432.379 116.965 li
433.879 117.115 li
434.399 117.164 li
436.419 117.334 li
438.439 117.484 li
440.458 117.625 li
442.479 117.754 li
444.499 117.875 li
446.519 117.975 li
448.539 118.074 li
450.559 118.164 li
452.579 118.244 li
454.599 118.324 li
456.619 118.395 li
458.639 118.465 li
460.659 118.524 li
462.679 118.584 li
464.699 118.645 li
466.719 118.705 li
468.739 118.754 li
470.759 118.814 li
472.779 118.865 li
474.809 118.924 li
476.829 118.975 li
478.849 119.035 li
480.869 119.095 li
482.149 119.135 li
482.889 119.154 li
484.909 119.225 li
486.929 119.285 li
488.949 119.354 li
490.969 119.435 li
492.989 119.515 li
495.009 119.595 li
497.029 119.685 li
499.049 119.774 li
501.069 119.885 li
503.089 119.984 li
505.109 120.104 li
507.129 120.225 li
509.149 120.354 li
511.169 120.494 li
513.189 120.645 li
515.208 120.805 li
517.229 120.975 li
519.199 121.154 li
519.249 121.164 li
521.269 121.365 li
523.289 121.574 li
523.289 10.0444 li
323.289 10.0444 li
323.289 34.2344 li
cp
.603296 .518395 .513207 .212314 cmyk
f
323.289 34.2344 mo
325.309 33.6045 li
327.329 33.0244 li
329.349 32.5044 li
330.399 32.2646 li
331.369 32.0444 li
333.389 31.6348 li
335.409 31.2744 li
337.429 30.9746 li
339.449 30.7246 li
341.469 30.5244 li
343.489 30.3745 li
345.509 30.2744 li
346.529 30.2446 li
347.529 30.2246 li
349.549 30.2246 li
350.389 30.2446 li
351.569 30.2744 li
353.589 30.3848 li
355.609 30.5347 li
357.629 30.7344 li
359.649 30.9946 li
361.669 31.2944 li
363.689 31.6543 li
365.709 32.0645 li
366.619 32.2646 li
367.729 32.5244 li
369.749 33.0347 li
371.769 33.5947 li
373.799 34.2046 li
374.039 34.2847 li
375.819 34.8745 li
377.839 35.5845 li
379.729 36.3047 li
379.859 36.3545 li
381.879 37.1743 li
383.899 38.0444 li
384.519 38.3247 li
385.919 38.9644 li
387.939 39.9243 li
388.769 40.3447 li
389.959 40.9443 li
391.979 42.0044 li
392.628 42.3647 li
394 43.1147 li
396.019 44.2646 li
396.218 44.3848 li
398.039 45.4546 li
399.599 46.4043 li
400.059 46.6846 li
402.08 47.9443 li
402.829 48.4243 li
404.099 49.2344 li
405.949 50.4443 li
406.119 50.5547 li
408.139 51.8945 li
408.989 52.4644 li
410.159 53.2446 li
411.989 54.4844 li
412.179 54.6147 li
414.199 55.9844 li
414.958 56.5044 li
416.219 57.3545 li
417.929 58.5244 li
418.239 58.7344 li
420.259 60.0947 li
420.919 60.5547 li
422.279 61.4443 li
423.958 62.5747 li
424.299 62.7944 li
426.319 64.1045 li
427.049 64.5947 li
428.339 65.4043 li
430.229 66.6147 li
430.359 66.6943 li
432.379 67.9346 li
433.489 68.6348 li
434.399 69.1743 li
436.419 70.3848 li
436.859 70.6543 li
438.439 71.5645 li
440.329 72.6743 li
440.458 72.7446 li
442.479 73.8945 li
443.879 74.6943 li
444.499 75.0444 li
446.519 76.1846 li
447.458 76.7144 li
448.539 77.3247 li
450.559 78.4844 li
450.989 78.7344 li
452.579 79.6943 li
454.339 80.7544 li
454.599 80.9346 li
456.619 82.3247 li
457.279 82.7744 li
458.639 84.0044 li
459.529 84.7944 li
460.659 86.7544 li
460.699 86.8145 li
460.659 86.9644 li
460.239 88.8345 li
458.639 90.0244 li
457.479 90.8545 li
456.619 91.1543 li
454.599 91.8652 li
452.579 92.5449 li
451.619 92.875 li
450.559 93.1045 li
448.539 93.5547 li
446.519 93.9941 li
444.499 94.4443 li
442.479 94.8945 li
440.458 95.2441 li
438.439 95.6152 li
436.419 95.9941 li
434.399 96.3945 li
432.379 96.8047 li
431.899 96.9141 li
430.359 97.2051 li
428.339 97.6045 li
426.319 98.0449 li
424.299 98.5146 li
422.629 98.9346 li
422.279 99.0146 li
420.259 99.5449 li
418.239 100.125 li
416.219 100.765 li
415.679 100.955 li
414.199 101.515 li
412.179 102.365 li
410.859 102.975 li
410.159 103.404 li
408.139 104.774 li
407.829 104.994 li
406.429 107.015 li
406.599 109.035 li
408.139 110.685 li
408.489 111.055 li
410.159 111.935 li
412.179 112.935 li
412.489 113.074 li
414.199 113.615 li
416.219 114.205 li
418.239 114.744 li
419.679 115.095 li
420.259 115.205 li
422.279 115.574 li
424.299 115.904 li
426.319 116.215 li
428.339 116.484 li
430.359 116.734 li
432.379 116.965 li
433.879 117.115 li
434.399 117.164 li
436.419 117.334 li
438.439 117.484 li
440.458 117.625 li
442.479 117.754 li
444.499 117.875 li
446.519 117.975 li
448.539 118.074 li
450.559 118.164 li
452.579 118.244 li
454.599 118.324 li
456.619 118.395 li
458.639 118.465 li
460.659 118.524 li
462.679 118.584 li
464.699 118.645 li
466.719 118.705 li
468.739 118.754 li
470.759 118.814 li
472.779 118.865 li
474.809 118.924 li
476.829 118.975 li
478.849 119.035 li
480.869 119.095 li
482.149 119.135 li
482.889 119.154 li
484.909 119.225 li
486.929 119.285 li
488.949 119.354 li
490.969 119.435 li
492.989 119.515 li
495.009 119.595 li
497.029 119.685 li
499.049 119.774 li
501.069 119.885 li
503.089 119.984 li
505.109 120.104 li
507.129 120.225 li
509.149 120.354 li
511.169 120.494 li
513.189 120.645 li
515.208 120.805 li
517.229 120.975 li
519.199 121.154 li
519.249 121.164 li
521.269 121.365 li
523.289 121.574 li
523.289 10.0444 li
323.289 10.0444 li
323.289 34.2344 li
cp
.75021 .679683 .670222 .90164 cmyk
@
323.289 25.0947 mo
325.309 24.5347 li
326.719 24.1846 li
327.329 24.0347 li
329.349 23.5845 li
331.369 23.1743 li
333.389 22.8145 li
335.409 22.5044 li
337.429 22.2446 li
338.119 22.1646 li
339.449 22.0244 li
341.469 21.8545 li
343.489 21.7344 li
345.509 21.6543 li
347.529 21.6245 li
349.549 21.6348 li
351.569 21.7046 li
353.589 21.8145 li
355.609 21.9644 li
357.569 22.1646 li
357.629 22.1743 li
359.649 22.4243 li
361.669 22.7246 li
363.689 23.0645 li
365.709 23.4644 li
367.729 23.9043 li
368.869 24.1846 li
369.749 24.4043 li
371.769 24.9443 li
373.799 25.5347 li
375.819 26.1846 li
375.889 26.2046 li
377.839 26.8745 li
379.859 27.6147 li
381.399 28.2246 li
381.879 28.4146 li
383.899 29.2646 li
385.919 30.1543 li
386.099 30.2446 li
387.939 31.1045 li
389.959 32.1147 li
390.259 32.2646 li
391.979 33.1646 li
394 34.2646 li
394.029 34.2847 li
396.019 35.4146 li
397.509 36.3047 li
398.039 36.6245 li
400.059 37.8647 li
400.769 38.3247 li
402.08 39.1646 li
403.869 40.3447 li
404.099 40.4946 li
406.119 41.8745 li
406.829 42.3647 li
408.139 43.2744 li
409.689 44.3848 li
410.159 44.7246 li
412.179 46.1943 li
412.469 46.4043 li
414.199 47.6846 li
415.189 48.4243 li
416.219 49.1943 li
417.879 50.4443 li
418.239 50.7144 li
420.259 52.2446 li
420.559 52.4644 li
422.279 53.7646 li
423.229 54.4844 li
424.299 55.2847 li
425.929 56.5044 li
426.319 56.7944 li
428.339 58.2847 li
428.659 58.5244 li
430.359 59.7544 li
431.449 60.5547 li
432.379 61.2046 li
434.309 62.5747 li
434.399 62.6348 li
436.419 64.0146 li
437.249 64.5947 li
438.439 65.3745 li
440.299 66.6147 li
440.458 66.7144 li
442.479 68.0044 li
443.449 68.6348 li
444.499 69.2744 li
446.519 70.5244 li
446.729 70.6543 li
448.539 71.7246 li
450.129 72.6743 li
450.559 72.9243 li
452.579 74.0947 li
453.619 74.6943 li
454.599 75.2446 li
456.619 76.3945 li
457.169 76.7144 li
458.639 77.5547 li
460.659 78.7144 li
460.689 78.7344 li
462.679 79.9243 li
464.059 80.7544 li
464.699 81.1846 li
466.719 82.5347 li
467.079 82.7744 li
468.739 84.1743 li
469.479 84.7944 li
470.759 86.6348 li
470.889 86.8145 li
470.819 88.8345 li
470.759 88.8848 li
468.739 90.7148 li
468.579 90.8545 li
466.719 91.584 li
464.699 92.3447 li
463.239 92.875 li
462.679 93.0039 li
460.659 93.4551 li
458.639 93.8945 li
456.619 94.3242 li
454.599 94.7539 li
453.929 94.8945 li
452.579 95.1045 li
450.559 95.4238 li
448.539 95.7441 li
446.519 96.0742 li
444.499 96.4043 li
442.479 96.7539 li
441.559 96.9141 li
440.458 97.0742 li
438.439 97.3945 li
436.419 97.7246 li
434.399 98.0742 li
432.379 98.4551 li
430.359 98.8545 li
429.979 98.9346 li
428.339 99.2646 li
426.319 99.7051 li
424.299 100.185 li
422.279 100.715 li
421.439 100.955 li
420.259 101.314 li
418.239 101.994 li
416.219 102.754 li
415.679 102.975 li
414.199 103.765 li
412.179 104.965 li
412.129 104.994 li
410.449 107.015 li
410.549 109.035 li
412.179 110.674 li
412.569 111.055 li
414.199 111.834 li
416.219 112.734 li
417.049 113.074 li
418.239 113.414 li
420.259 113.935 li
422.279 114.414 li
424.299 114.845 li
425.569 115.095 li
426.319 115.215 li
428.339 115.504 li
430.359 115.765 li
432.379 116.004 li
434.399 116.225 li
436.419 116.414 li
438.439 116.595 li
440.458 116.754 li
442.479 116.904 li
444.499 117.035 li
445.909 117.115 li
446.519 117.145 li
448.539 117.244 li
450.559 117.334 li
452.579 117.414 li
454.599 117.484 li
456.619 117.555 li
458.639 117.615 li
460.659 117.674 li
462.679 117.725 li
464.699 117.785 li
466.719 117.824 li
468.739 117.875 li
470.759 117.924 li
472.779 117.965 li
474.809 118.004 li
476.829 118.055 li
478.849 118.095 li
480.869 118.145 li
482.889 118.185 li
484.909 118.234 li
486.929 118.285 li
488.949 118.345 li
490.969 118.395 li
492.989 118.455 li
495.009 118.524 li
497.029 118.595 li
499.049 118.664 li
501.069 118.744 li
503.089 118.824 li
505.109 118.914 li
507.129 119.015 li
509.149 119.115 li
509.449 119.135 li
511.169 119.234 li
513.189 119.345 li
515.208 119.475 li
517.229 119.615 li
519.249 119.754 li
521.269 119.914 li
523.289 120.084 li
523.289 10.0444 li
323.289 10.0444 li
323.289 25.0947 li
cp
.624384 .544518 .534173 .269383 cmyk
f
323.289 25.0947 mo
325.309 24.5347 li
326.719 24.1846 li
327.329 24.0347 li
329.349 23.5845 li
331.369 23.1743 li
333.389 22.8145 li
335.409 22.5044 li
337.429 22.2446 li
338.119 22.1646 li
339.449 22.0244 li
341.469 21.8545 li
343.489 21.7344 li
345.509 21.6543 li
347.529 21.6245 li
349.549 21.6348 li
351.569 21.7046 li
353.589 21.8145 li
355.609 21.9644 li
357.569 22.1646 li
357.629 22.1743 li
359.649 22.4243 li
361.669 22.7246 li
363.689 23.0645 li
365.709 23.4644 li
367.729 23.9043 li
368.869 24.1846 li
369.749 24.4043 li
371.769 24.9443 li
373.799 25.5347 li
375.819 26.1846 li
375.889 26.2046 li
377.839 26.8745 li
379.859 27.6147 li
381.399 28.2246 li
381.879 28.4146 li
383.899 29.2646 li
385.919 30.1543 li
386.099 30.2446 li
387.939 31.1045 li
389.959 32.1147 li
390.259 32.2646 li
391.979 33.1646 li
394 34.2646 li
394.029 34.2847 li
396.019 35.4146 li
397.509 36.3047 li
398.039 36.6245 li
400.059 37.8647 li
400.769 38.3247 li
402.08 39.1646 li
403.869 40.3447 li
404.099 40.4946 li
406.119 41.8745 li
406.829 42.3647 li
408.139 43.2744 li
409.689 44.3848 li
410.159 44.7246 li
412.179 46.1943 li
412.469 46.4043 li
414.199 47.6846 li
415.189 48.4243 li
416.219 49.1943 li
417.879 50.4443 li
418.239 50.7144 li
420.259 52.2446 li
420.559 52.4644 li
422.279 53.7646 li
423.229 54.4844 li
424.299 55.2847 li
425.929 56.5044 li
426.319 56.7944 li
428.339 58.2847 li
428.659 58.5244 li
430.359 59.7544 li
431.449 60.5547 li
432.379 61.2046 li
434.309 62.5747 li
434.399 62.6348 li
436.419 64.0146 li
437.249 64.5947 li
438.439 65.3745 li
440.299 66.6147 li
440.458 66.7144 li
442.479 68.0044 li
443.449 68.6348 li
444.499 69.2744 li
446.519 70.5244 li
446.729 70.6543 li
448.539 71.7246 li
450.129 72.6743 li
450.559 72.9243 li
452.579 74.0947 li
453.619 74.6943 li
454.599 75.2446 li
456.619 76.3945 li
457.169 76.7144 li
458.639 77.5547 li
460.659 78.7144 li
460.689 78.7344 li
462.679 79.9243 li
464.059 80.7544 li
464.699 81.1846 li
466.719 82.5347 li
467.079 82.7744 li
468.739 84.1743 li
469.479 84.7944 li
470.759 86.6348 li
470.889 86.8145 li
470.819 88.8345 li
470.759 88.8848 li
468.739 90.7148 li
468.579 90.8545 li
466.719 91.584 li
464.699 92.3447 li
463.239 92.875 li
462.679 93.0039 li
460.659 93.4551 li
458.639 93.8945 li
456.619 94.3242 li
454.599 94.7539 li
453.929 94.8945 li
452.579 95.1045 li
450.559 95.4238 li
448.539 95.7441 li
446.519 96.0742 li
444.499 96.4043 li
442.479 96.7539 li
441.559 96.9141 li
440.458 97.0742 li
438.439 97.3945 li
436.419 97.7246 li
434.399 98.0742 li
432.379 98.4551 li
430.359 98.8545 li
429.979 98.9346 li
428.339 99.2646 li
426.319 99.7051 li
424.299 100.185 li
422.279 100.715 li
421.439 100.955 li
420.259 101.314 li
418.239 101.994 li
416.219 102.754 li
415.679 102.975 li
414.199 103.765 li
412.179 104.965 li
412.129 104.994 li
410.449 107.015 li
410.549 109.035 li
412.179 110.674 li
412.569 111.055 li
414.199 111.834 li
416.219 112.734 li
417.049 113.074 li
418.239 113.414 li
420.259 113.935 li
422.279 114.414 li
424.299 114.845 li
425.569 115.095 li
426.319 115.215 li
428.339 115.504 li
430.359 115.765 li
432.379 116.004 li
434.399 116.225 li
436.419 116.414 li
438.439 116.595 li
440.458 116.754 li
442.479 116.904 li
444.499 117.035 li
445.909 117.115 li
446.519 117.145 li
448.539 117.244 li
450.559 117.334 li
452.579 117.414 li
454.599 117.484 li
456.619 117.555 li
458.639 117.615 li
460.659 117.674 li
462.679 117.725 li
464.699 117.785 li
466.719 117.824 li
468.739 117.875 li
470.759 117.924 li
472.779 117.965 li
474.809 118.004 li
476.829 118.055 li
478.849 118.095 li
480.869 118.145 li
482.889 118.185 li
484.909 118.234 li
486.929 118.285 li
488.949 118.345 li
490.969 118.395 li
492.989 118.455 li
495.009 118.524 li
497.029 118.595 li
499.049 118.664 li
501.069 118.744 li
503.089 118.824 li
505.109 118.914 li
507.129 119.015 li
509.149 119.115 li
509.449 119.135 li
511.169 119.234 li
513.189 119.345 li
515.208 119.475 li
517.229 119.615 li
519.249 119.754 li
521.269 119.914 li
523.289 120.084 li
523.289 10.0444 li
323.289 10.0444 li
323.289 25.0947 li
cp
.75021 .679683 .670222 .90164 cmyk
@
323.289 16.1646 mo
323.529 16.1045 li
325.309 15.6646 li
327.329 15.2144 li
329.349 14.8145 li
331.369 14.4443 li
333.389 14.1245 li
333.709 14.0845 li
335.409 13.8545 li
337.429 13.6147 li
339.449 13.4243 li
341.469 13.2744 li
343.489 13.1743 li
345.509 13.1147 li
347.529 13.0947 li
349.549 13.1147 li
351.569 13.1846 li
353.589 13.2944 li
355.609 13.4443 li
357.629 13.6445 li
359.649 13.8848 li
361.049 14.0845 li
361.669 14.1743 li
363.689 14.5044 li
365.709 14.8848 li
367.729 15.3047 li
369.749 15.7744 li
371.069 16.1045 li
371.769 16.2847 li
373.799 16.8447 li
375.819 17.4546 li
377.839 18.1147 li
377.859 18.1245 li
379.859 18.8247 li
381.879 19.5845 li
383.289 20.1445 li
383.899 20.3945 li
385.919 21.2446 li
387.939 22.1543 li
387.949 22.1646 li
389.959 23.1147 li
391.979 24.1348 li
392.08 24.1846 li
394 25.1943 li
395.819 26.2046 li
396.019 26.3145 li
398.039 27.4844 li
399.269 28.2246 li
400.059 28.7046 li
402.08 29.9746 li
402.489 30.2446 li
404.099 31.3047 li
405.519 32.2646 li
406.119 32.6743 li
408.139 34.0947 li
408.399 34.2847 li
410.159 35.5645 li
411.159 36.3047 li
412.179 37.0645 li
413.819 38.3247 li
414.199 38.6147 li
416.219 40.1943 li
416.409 40.3447 li
418.239 41.8047 li
418.929 42.3647 li
420.259 43.4443 li
421.409 44.3848 li
422.279 45.0947 li
423.859 46.4043 li
424.299 46.7646 li
426.309 48.4243 li
426.319 48.4346 li
428.339 50.1045 li
428.749 50.4443 li
430.359 51.7646 li
431.208 52.4644 li
432.379 53.4146 li
433.699 54.4844 li
434.399 55.0444 li
436.229 56.5044 li
436.419 56.6543 li
438.439 58.2344 li
438.819 58.5244 li
440.458 59.7646 li
441.489 60.5547 li
442.479 61.2744 li
444.249 62.5747 li
444.499 62.7544 li
446.519 64.1743 li
447.109 64.5947 li
448.539 65.5645 li
450.079 66.6147 li
450.559 66.9243 li
452.579 68.2344 li
453.189 68.6348 li
454.599 69.5044 li
456.429 70.6543 li
456.619 70.7646 li
458.639 71.9746 li
459.809 72.6743 li
460.659 73.1646 li
462.679 74.3345 li
463.299 74.6943 li
464.699 75.4844 li
466.719 76.6348 li
466.859 76.7144 li
468.739 77.7744 li
470.429 78.7344 li
470.759 78.9346 li
472.779 80.1147 li
473.869 80.7544 li
474.809 81.3647 li
476.829 82.6543 li
476.999 82.7744 li
478.849 84.2144 li
479.589 84.7944 li
480.869 86.3145 li
481.289 86.8145 li
481.659 88.8345 li
480.869 89.8652 li
480.059 90.8545 li
478.849 91.4346 li
476.829 92.3447 li
475.569 92.875 li
474.809 93.0645 li
472.779 93.5645 li
470.759 94.0449 li
468.739 94.4941 li
466.879 94.8945 li
466.719 94.9141 li
464.699 95.2344 li
462.679 95.5449 li
460.659 95.8447 li
458.639 96.1445 li
456.619 96.4346 li
454.599 96.7246 li
453.359 96.9141 li
452.579 97.0039 li
450.559 97.2646 li
448.539 97.5244 li
446.519 97.7949 li
444.499 98.0742 li
442.479 98.3652 li
440.458 98.6641 li
438.769 98.9346 li
438.439 98.9844 li
436.419 99.3047 li
434.399 99.6445 li
432.379 100.015 li
430.359 100.414 li
428.339 100.854 li
427.889 100.955 li
426.319 101.345 li
424.299 101.895 li
422.279 102.504 li
420.849 102.975 li
420.259 103.225 li
418.239 104.164 li
416.629 104.994 li
416.219 105.375 li
414.619 107.015 li
414.649 109.035 li
416.219 110.484 li
416.869 111.055 li
418.239 111.645 li
420.259 112.435 li
422.019 113.074 li
422.279 113.135 li
424.299 113.595 li
426.319 114.015 li
428.339 114.395 li
430.359 114.734 li
432.379 115.045 li
432.759 115.095 li
434.399 115.274 li
436.419 115.484 li
438.439 115.664 li
440.458 115.834 li
442.479 115.984 li
444.499 116.115 li
446.519 116.234 li
448.539 116.345 li
450.559 116.435 li
452.579 116.524 li
454.599 116.604 li
456.619 116.674 li
458.639 116.734 li
460.659 116.795 li
462.679 116.845 li
464.699 116.895 li
466.719 116.935 li
468.739 116.984 li
470.759 117.015 li
472.779 117.055 li
474.809 117.095 li
476.309 117.115 li
476.829 117.125 li
478.849 117.154 li
480.869 117.185 li
482.889 117.215 li
484.909 117.254 li
486.929 117.285 li
488.949 117.324 li
490.969 117.354 li
492.989 117.395 li
495.009 117.444 li
497.029 117.484 li
499.049 117.535 li
501.069 117.595 li
503.089 117.654 li
505.109 117.715 li
507.129 117.785 li
509.149 117.865 li
511.169 117.944 li
513.189 118.035 li
515.208 118.125 li
517.229 118.234 li
519.249 118.345 li
521.269 118.465 li
523.289 118.595 li
523.289 10.0444 li
323.289 10.0444 li
323.289 16.1646 li
cp
.644739 .565484 .560723 .330632 cmyk
f
323.289 16.1646 mo
323.529 16.1045 li
325.309 15.6646 li
327.329 15.2144 li
329.349 14.8145 li
331.369 14.4443 li
333.389 14.1245 li
333.709 14.0845 li
335.409 13.8545 li
337.429 13.6147 li
339.449 13.4243 li
341.469 13.2744 li
343.489 13.1743 li
345.509 13.1147 li
347.529 13.0947 li
349.549 13.1147 li
351.569 13.1846 li
353.589 13.2944 li
355.609 13.4443 li
357.629 13.6445 li
359.649 13.8848 li
361.049 14.0845 li
361.669 14.1743 li
363.689 14.5044 li
365.709 14.8848 li
367.729 15.3047 li
369.749 15.7744 li
371.069 16.1045 li
371.769 16.2847 li
373.799 16.8447 li
375.819 17.4546 li
377.839 18.1147 li
377.859 18.1245 li
379.859 18.8247 li
381.879 19.5845 li
383.289 20.1445 li
383.899 20.3945 li
385.919 21.2446 li
387.939 22.1543 li
387.949 22.1646 li
389.959 23.1147 li
391.979 24.1348 li
392.08 24.1846 li
394 25.1943 li
395.819 26.2046 li
396.019 26.3145 li
398.039 27.4844 li
399.269 28.2246 li
400.059 28.7046 li
402.08 29.9746 li
402.489 30.2446 li
404.099 31.3047 li
405.519 32.2646 li
406.119 32.6743 li
408.139 34.0947 li
408.399 34.2847 li
410.159 35.5645 li
411.159 36.3047 li
412.179 37.0645 li
413.819 38.3247 li
414.199 38.6147 li
416.219 40.1943 li
416.409 40.3447 li
418.239 41.8047 li
418.929 42.3647 li
420.259 43.4443 li
421.409 44.3848 li
422.279 45.0947 li
423.859 46.4043 li
424.299 46.7646 li
426.309 48.4243 li
426.319 48.4346 li
428.339 50.1045 li
428.749 50.4443 li
430.359 51.7646 li
431.208 52.4644 li
432.379 53.4146 li
433.699 54.4844 li
434.399 55.0444 li
436.229 56.5044 li
436.419 56.6543 li
438.439 58.2344 li
438.819 58.5244 li
440.458 59.7646 li
441.489 60.5547 li
442.479 61.2744 li
444.249 62.5747 li
444.499 62.7544 li
446.519 64.1743 li
447.109 64.5947 li
448.539 65.5645 li
450.079 66.6147 li
450.559 66.9243 li
452.579 68.2344 li
453.189 68.6348 li
454.599 69.5044 li
456.429 70.6543 li
456.619 70.7646 li
458.639 71.9746 li
459.809 72.6743 li
460.659 73.1646 li
462.679 74.3345 li
463.299 74.6943 li
464.699 75.4844 li
466.719 76.6348 li
466.859 76.7144 li
468.739 77.7744 li
470.429 78.7344 li
470.759 78.9346 li
472.779 80.1147 li
473.869 80.7544 li
474.809 81.3647 li
476.829 82.6543 li
476.999 82.7744 li
478.849 84.2144 li
479.589 84.7944 li
480.869 86.3145 li
481.289 86.8145 li
481.659 88.8345 li
480.869 89.8652 li
480.059 90.8545 li
478.849 91.4346 li
476.829 92.3447 li
475.569 92.875 li
474.809 93.0645 li
472.779 93.5645 li
470.759 94.0449 li
468.739 94.4941 li
466.879 94.8945 li
466.719 94.9141 li
464.699 95.2344 li
462.679 95.5449 li
460.659 95.8447 li
458.639 96.1445 li
456.619 96.4346 li
454.599 96.7246 li
453.359 96.9141 li
452.579 97.0039 li
450.559 97.2646 li
448.539 97.5244 li
446.519 97.7949 li
444.499 98.0742 li
442.479 98.3652 li
440.458 98.6641 li
438.769 98.9346 li
438.439 98.9844 li
436.419 99.3047 li
434.399 99.6445 li
432.379 100.015 li
430.359 100.414 li
428.339 100.854 li
427.889 100.955 li
426.319 101.345 li
424.299 101.895 li
422.279 102.504 li
420.849 102.975 li
420.259 103.225 li
418.239 104.164 li
416.629 104.994 li
416.219 105.375 li
414.619 107.015 li
414.649 109.035 li
416.219 110.484 li
416.869 111.055 li
418.239 111.645 li
420.259 112.435 li
422.019 113.074 li
422.279 113.135 li
424.299 113.595 li
426.319 114.015 li
428.339 114.395 li
430.359 114.734 li
432.379 115.045 li
432.759 115.095 li
434.399 115.274 li
436.419 115.484 li
438.439 115.664 li
440.458 115.834 li
442.479 115.984 li
444.499 116.115 li
446.519 116.234 li
448.539 116.345 li
450.559 116.435 li
452.579 116.524 li
454.599 116.604 li
456.619 116.674 li
458.639 116.734 li
460.659 116.795 li
462.679 116.845 li
464.699 116.895 li
466.719 116.935 li
468.739 116.984 li
470.759 117.015 li
472.779 117.055 li
474.809 117.095 li
476.309 117.115 li
476.829 117.125 li
478.849 117.154 li
480.869 117.185 li
482.889 117.215 li
484.909 117.254 li
486.929 117.285 li
488.949 117.324 li
490.969 117.354 li
492.989 117.395 li
495.009 117.444 li
497.029 117.484 li
499.049 117.535 li
501.069 117.595 li
503.089 117.654 li
505.109 117.715 li
507.129 117.785 li
509.149 117.865 li
511.169 117.944 li
513.189 118.035 li
515.208 118.125 li
517.229 118.234 li
519.249 118.345 li
521.269 118.465 li
523.289 118.595 li
523.289 10.0444 li
323.289 10.0444 li
323.289 16.1646 li
cp
.75021 .679683 .670222 .90164 cmyk
@
380.079 10.0444 mo
381.879 10.6743 li
383.899 11.4346 li
385.469 12.0645 li
385.919 12.2446 li
387.939 13.1045 li
389.959 14.0044 li
390.119 14.0845 li
391.979 14.9644 li
394 15.9746 li
394.25 16.1045 li
396.019 17.0347 li
398 18.1245 li
398.039 18.1445 li
400.059 19.3047 li
401.449 20.1445 li
402.08 20.5244 li
404.099 21.7944 li
404.659 22.1646 li
406.119 23.1245 li
407.679 24.1846 li
408.139 24.5044 li
410.159 25.9346 li
410.529 26.2046 li
412.179 27.4146 li
413.249 28.2246 li
414.199 28.9443 li
415.859 30.2446 li
416.219 30.5347 li
418.239 32.1543 li
418.369 32.2646 li
420.259 33.8247 li
420.799 34.2847 li
422.279 35.5347 li
423.179 36.3047 li
424.299 37.2744 li
425.499 38.3247 li
426.319 39.0444 li
427.789 40.3447 li
428.339 40.8345 li
430.049 42.3647 li
430.359 42.6445 li
432.309 44.3848 li
432.379 44.4546 li
434.399 46.2646 li
434.559 46.4043 li
436.419 48.0645 li
436.819 48.4243 li
438.439 49.8545 li
439.109 50.4443 li
440.458 51.6245 li
441.429 52.4644 li
442.479 53.3545 li
443.809 54.4844 li
444.499 55.0645 li
446.239 56.5044 li
446.519 56.7344 li
448.539 58.3545 li
448.749 58.5244 li
450.559 59.9346 li
451.359 60.5547 li
452.579 61.4644 li
454.059 62.5747 li
454.599 62.9546 li
456.619 64.4043 li
456.889 64.5947 li
458.639 65.7847 li
459.849 66.6147 li
460.659 67.1445 li
462.679 68.4546 li
462.949 68.6348 li
464.699 69.7144 li
466.199 70.6543 li
466.719 70.9644 li
468.739 72.1646 li
469.599 72.6743 li
470.759 73.3345 li
472.779 74.4946 li
473.129 74.6943 li
474.809 75.6245 li
476.759 76.7144 li
476.829 76.7544 li
478.849 77.8745 li
480.399 78.7344 li
480.869 78.9946 li
482.889 80.1445 li
483.949 80.7544 li
484.909 81.3447 li
486.929 82.5747 li
487.249 82.7744 li
488.949 83.9946 li
490.059 84.7944 li
490.969 85.7046 li
492.089 86.8145 li
492.939 88.8345 li
492.059 90.8545 li
490.969 91.5352 li
488.949 92.6943 li
488.619 92.875 li
486.929 93.3848 li
484.909 93.9648 li
482.889 94.4941 li
481.269 94.8945 li
480.869 94.9648 li
478.849 95.3047 li
476.829 95.6348 li
474.809 95.9551 li
472.779 96.2539 li
470.759 96.5352 li
468.739 96.8145 li
468.059 96.9141 li
466.719 97.0645 li
464.699 97.2949 li
462.679 97.5146 li
460.659 97.7344 li
458.639 97.9648 li
456.619 98.1846 li
454.599 98.4141 li
452.579 98.6445 li
450.559 98.8848 li
450.159 98.9346 li
448.539 99.125 li
446.519 99.3652 li
444.499 99.625 li
442.479 99.8945 li
440.458 100.185 li
438.439 100.484 li
436.419 100.814 li
435.639 100.955 li
434.399 101.185 li
432.379 101.595 li
430.359 102.045 li
428.339 102.524 li
426.659 102.975 li
426.319 103.084 li
424.299 103.824 li
422.279 104.645 li
421.489 104.994 li
420.259 105.975 li
419.069 107.015 li
419.019 109.035 li
420.259 110.064 li
421.549 111.055 li
422.279 111.324 li
424.299 112.024 li
426.319 112.664 li
427.769 113.074 li
428.339 113.185 li
430.359 113.545 li
432.379 113.865 li
434.399 114.154 li
436.419 114.424 li
438.439 114.654 li
440.458 114.865 li
442.479 115.055 li
442.999 115.095 li
444.499 115.194 li
446.519 115.314 li
448.539 115.424 li
450.559 115.524 li
452.579 115.604 li
454.599 115.685 li
456.619 115.744 li
458.639 115.805 li
460.659 115.854 li
462.679 115.904 li
464.699 115.944 li
466.719 115.975 li
468.739 116.004 li
470.759 116.035 li
472.779 116.064 li
474.809 116.084 li
476.829 116.104 li
478.849 116.125 li
480.869 116.145 li
482.889 116.164 li
484.909 116.185 li
486.929 116.205 li
488.949 116.225 li
490.969 116.244 li
492.989 116.265 li
495.009 116.295 li
497.029 116.324 li
499.049 116.354 li
501.069 116.385 li
503.089 116.424 li
505.109 116.465 li
507.129 116.515 li
509.149 116.564 li
511.169 116.615 li
513.189 116.685 li
515.208 116.754 li
517.229 116.824 li
519.249 116.904 li
521.269 116.994 li
523.289 117.095 li
523.289 10.0444 li
380.079 10.0444 li
cp
.660853 .590265 .576135 .395514 cmyk
f
380.079 10.0444 mo
381.879 10.6743 li
383.899 11.4346 li
385.469 12.0645 li
385.919 12.2446 li
387.939 13.1045 li
389.959 14.0044 li
390.119 14.0845 li
391.979 14.9644 li
394 15.9746 li
394.25 16.1045 li
396.019 17.0347 li
398 18.1245 li
398.039 18.1445 li
400.059 19.3047 li
401.449 20.1445 li
402.08 20.5244 li
404.099 21.7944 li
404.659 22.1646 li
406.119 23.1245 li
407.679 24.1846 li
408.139 24.5044 li
410.159 25.9346 li
410.529 26.2046 li
412.179 27.4146 li
413.249 28.2246 li
414.199 28.9443 li
415.859 30.2446 li
416.219 30.5347 li
418.239 32.1543 li
418.369 32.2646 li
420.259 33.8247 li
420.799 34.2847 li
422.279 35.5347 li
423.179 36.3047 li
424.299 37.2744 li
425.499 38.3247 li
426.319 39.0444 li
427.789 40.3447 li
428.339 40.8345 li
430.049 42.3647 li
430.359 42.6445 li
432.309 44.3848 li
432.379 44.4546 li
434.399 46.2646 li
434.559 46.4043 li
436.419 48.0645 li
436.819 48.4243 li
438.439 49.8545 li
439.109 50.4443 li
440.458 51.6245 li
441.429 52.4644 li
442.479 53.3545 li
443.809 54.4844 li
444.499 55.0645 li
446.239 56.5044 li
446.519 56.7344 li
448.539 58.3545 li
448.749 58.5244 li
450.559 59.9346 li
451.359 60.5547 li
452.579 61.4644 li
454.059 62.5747 li
454.599 62.9546 li
456.619 64.4043 li
456.889 64.5947 li
458.639 65.7847 li
459.849 66.6147 li
460.659 67.1445 li
462.679 68.4546 li
462.949 68.6348 li
464.699 69.7144 li
466.199 70.6543 li
466.719 70.9644 li
468.739 72.1646 li
469.599 72.6743 li
470.759 73.3345 li
472.779 74.4946 li
473.129 74.6943 li
474.809 75.6245 li
476.759 76.7144 li
476.829 76.7544 li
478.849 77.8745 li
480.399 78.7344 li
480.869 78.9946 li
482.889 80.1445 li
483.949 80.7544 li
484.909 81.3447 li
486.929 82.5747 li
487.249 82.7744 li
488.949 83.9946 li
490.059 84.7944 li
490.969 85.7046 li
492.089 86.8145 li
492.939 88.8345 li
492.059 90.8545 li
490.969 91.5352 li
488.949 92.6943 li
488.619 92.875 li
486.929 93.3848 li
484.909 93.9648 li
482.889 94.4941 li
481.269 94.8945 li
480.869 94.9648 li
478.849 95.3047 li
476.829 95.6348 li
474.809 95.9551 li
472.779 96.2539 li
470.759 96.5352 li
468.739 96.8145 li
468.059 96.9141 li
466.719 97.0645 li
464.699 97.2949 li
462.679 97.5146 li
460.659 97.7344 li
458.639 97.9648 li
456.619 98.1846 li
454.599 98.4141 li
452.579 98.6445 li
450.559 98.8848 li
450.159 98.9346 li
448.539 99.125 li
446.519 99.3652 li
444.499 99.625 li
442.479 99.8945 li
440.458 100.185 li
438.439 100.484 li
436.419 100.814 li
435.639 100.955 li
434.399 101.185 li
432.379 101.595 li
430.359 102.045 li
428.339 102.524 li
426.659 102.975 li
426.319 103.084 li
424.299 103.824 li
422.279 104.645 li
421.489 104.994 li
420.259 105.975 li
419.069 107.015 li
419.019 109.035 li
420.259 110.064 li
421.549 111.055 li
422.279 111.324 li
424.299 112.024 li
426.319 112.664 li
427.769 113.074 li
428.339 113.185 li
430.359 113.545 li
432.379 113.865 li
434.399 114.154 li
436.419 114.424 li
438.439 114.654 li
440.458 114.865 li
442.479 115.055 li
442.999 115.095 li
444.499 115.194 li
446.519 115.314 li
448.539 115.424 li
450.559 115.524 li
452.579 115.604 li
454.599 115.685 li
456.619 115.744 li
458.639 115.805 li
460.659 115.854 li
462.679 115.904 li
464.699 115.944 li
466.719 115.975 li
468.739 116.004 li
470.759 116.035 li
472.779 116.064 li
474.809 116.084 li
476.829 116.104 li
478.849 116.125 li
480.869 116.145 li
482.889 116.164 li
484.909 116.185 li
486.929 116.205 li
488.949 116.225 li
490.969 116.244 li
492.989 116.265 li
495.009 116.295 li
497.029 116.324 li
499.049 116.354 li
501.069 116.385 li
503.089 116.424 li
505.109 116.465 li
507.129 116.515 li
509.149 116.564 li
511.169 116.615 li
513.189 116.685 li
515.208 116.754 li
517.229 116.824 li
519.249 116.904 li
521.269 116.994 li
523.289 117.095 li
523.289 10.0444 li
380.079 10.0444 li
cp
.75021 .679683 .670222 .90164 cmyk
@
400.619 10.0444 mo
402.08 10.8745 li
404.089 12.0645 li
404.099 12.0645 li
406.119 13.3145 li
407.309 14.0845 li
408.139 14.6245 li
410.159 15.9844 li
410.339 16.1045 li
412.179 17.3945 li
413.189 18.1245 li
414.199 18.8647 li
415.899 20.1445 li
416.219 20.3848 li
418.239 21.9644 li
418.489 22.1646 li
420.259 23.5947 li
420.979 24.1846 li
422.279 25.2744 li
423.369 26.2046 li
424.299 27.0044 li
425.689 28.2246 li
426.319 28.7847 li
427.949 30.2446 li
428.339 30.6045 li
430.149 32.2646 li
430.359 32.4546 li
432.309 34.2847 li
432.379 34.3545 li
434.399 36.2646 li
434.439 36.3047 li
436.419 38.2046 li
436.549 38.3247 li
438.439 40.1445 li
438.649 40.3447 li
440.458 42.0947 li
440.739 42.3647 li
442.479 44.0347 li
442.839 44.3848 li
444.499 45.9644 li
444.969 46.4043 li
446.519 47.8647 li
447.119 48.4243 li
448.539 49.7446 li
449.309 50.4443 li
450.559 51.5747 li
451.549 52.4644 li
452.579 53.3647 li
453.859 54.4844 li
454.599 55.1147 li
456.239 56.5044 li
456.619 56.8145 li
458.639 58.4644 li
458.719 58.5244 li
460.659 60.0444 li
461.299 60.5547 li
462.679 61.5845 li
463.999 62.5747 li
464.699 63.0747 li
466.719 64.5146 li
466.839 64.5947 li
468.739 65.8848 li
469.819 66.6147 li
470.759 67.2144 li
472.779 68.5244 li
472.958 68.6348 li
474.809 69.7646 li
476.259 70.6543 li
476.829 70.9746 li
478.849 72.1543 li
479.729 72.6743 li
480.869 73.3047 li
482.889 74.4346 li
483.349 74.6943 li
484.909 75.5347 li
486.929 76.6348 li
487.069 76.7144 li
488.949 77.7144 li
490.839 78.7344 li
490.969 78.7944 li
492.989 79.9043 li
494.559 80.7544 li
495.009 81.0146 li
497.029 82.1846 li
498.059 82.7744 li
499.049 83.4243 li
501.069 84.7446 li
501.139 84.7944 li
503.089 86.4346 li
503.549 86.8145 li
504.929 88.8345 li
504.829 90.8545 li
503.089 92.4346 li
502.569 92.875 li
501.069 93.4746 li
499.049 94.2148 li
497.029 94.8848 li
496.999 94.8945 li
495.009 95.3145 li
492.989 95.7148 li
490.969 96.084 li
488.949 96.4346 li
486.929 96.7539 li
485.909 96.9141 li
484.909 97.0352 li
482.889 97.2744 li
480.869 97.5039 li
478.849 97.7246 li
476.829 97.9346 li
474.809 98.1348 li
472.779 98.334 li
470.759 98.5244 li
468.739 98.7148 li
466.719 98.9043 li
466.419 98.9346 li
464.699 99.084 li
462.679 99.2646 li
460.659 99.4443 li
458.639 99.625 li
456.619 99.8145 li
454.599 100.004 li
452.579 100.205 li
450.559 100.414 li
448.539 100.645 li
446.519 100.875 li
445.889 100.955 li
444.499 101.135 li
442.479 101.424 li
440.458 101.725 li
438.439 102.055 li
436.419 102.414 li
434.399 102.805 li
433.589 102.975 li
432.379 103.295 li
430.359 103.885 li
428.339 104.524 li
426.999 104.994 li
426.319 105.414 li
424.299 106.774 li
423.969 107.015 li
423.849 109.035 li
424.299 109.354 li
426.319 110.715 li
426.879 111.055 li
428.339 111.484 li
430.359 112.035 li
432.379 112.524 li
434.399 112.965 li
434.979 113.074 li
436.419 113.265 li
438.439 113.515 li
440.458 113.725 li
442.479 113.924 li
444.499 114.095 li
446.519 114.244 li
448.539 114.375 li
450.559 114.494 li
452.579 114.595 li
454.599 114.685 li
456.619 114.754 li
458.639 114.824 li
460.659 114.885 li
462.679 114.924 li
464.699 114.965 li
466.719 114.994 li
468.739 115.024 li
470.759 115.045 li
472.779 115.064 li
474.809 115.074 li
476.829 115.084 li
478.849 115.095 li
480.189 115.095 li
480.869 115.095 li
482.889 115.095 li
484.909 115.104 li
486.929 115.104 li
488.949 115.104 li
490.969 115.104 li
492.989 115.104 li
495.009 115.115 li
497.029 115.115 li
499.049 115.125 li
501.069 115.135 li
503.089 115.145 li
505.109 115.164 li
507.129 115.174 li
509.149 115.194 li
511.169 115.225 li
513.189 115.254 li
515.208 115.285 li
517.229 115.324 li
519.249 115.375 li
521.269 115.424 li
523.289 115.484 li
523.289 10.0444 li
400.619 10.0444 li
cp
.675593 .606348 .595972 .467292 cmyk
f
400.619 10.0444 mo
402.08 10.8745 li
404.089 12.0645 li
404.099 12.0645 li
406.119 13.3145 li
407.309 14.0845 li
408.139 14.6245 li
410.159 15.9844 li
410.339 16.1045 li
412.179 17.3945 li
413.189 18.1245 li
414.199 18.8647 li
415.899 20.1445 li
416.219 20.3848 li
418.239 21.9644 li
418.489 22.1646 li
420.259 23.5947 li
420.979 24.1846 li
422.279 25.2744 li
423.369 26.2046 li
424.299 27.0044 li
425.689 28.2246 li
426.319 28.7847 li
427.949 30.2446 li
428.339 30.6045 li
430.149 32.2646 li
430.359 32.4546 li
432.309 34.2847 li
432.379 34.3545 li
434.399 36.2646 li
434.439 36.3047 li
436.419 38.2046 li
436.549 38.3247 li
438.439 40.1445 li
438.649 40.3447 li
440.458 42.0947 li
440.739 42.3647 li
442.479 44.0347 li
442.839 44.3848 li
444.499 45.9644 li
444.969 46.4043 li
446.519 47.8647 li
447.119 48.4243 li
448.539 49.7446 li
449.309 50.4443 li
450.559 51.5747 li
451.549 52.4644 li
452.579 53.3647 li
453.859 54.4844 li
454.599 55.1147 li
456.239 56.5044 li
456.619 56.8145 li
458.639 58.4644 li
458.719 58.5244 li
460.659 60.0444 li
461.299 60.5547 li
462.679 61.5845 li
463.999 62.5747 li
464.699 63.0747 li
466.719 64.5146 li
466.839 64.5947 li
468.739 65.8848 li
469.819 66.6147 li
470.759 67.2144 li
472.779 68.5244 li
472.958 68.6348 li
474.809 69.7646 li
476.259 70.6543 li
476.829 70.9746 li
478.849 72.1543 li
479.729 72.6743 li
480.869 73.3047 li
482.889 74.4346 li
483.349 74.6943 li
484.909 75.5347 li
486.929 76.6348 li
487.069 76.7144 li
488.949 77.7144 li
490.839 78.7344 li
490.969 78.7944 li
492.989 79.9043 li
494.559 80.7544 li
495.009 81.0146 li
497.029 82.1846 li
498.059 82.7744 li
499.049 83.4243 li
501.069 84.7446 li
501.139 84.7944 li
503.089 86.4346 li
503.549 86.8145 li
504.929 88.8345 li
504.829 90.8545 li
503.089 92.4346 li
502.569 92.875 li
501.069 93.4746 li
499.049 94.2148 li
497.029 94.8848 li
496.999 94.8945 li
495.009 95.3145 li
492.989 95.7148 li
490.969 96.084 li
488.949 96.4346 li
486.929 96.7539 li
485.909 96.9141 li
484.909 97.0352 li
482.889 97.2744 li
480.869 97.5039 li
478.849 97.7246 li
476.829 97.9346 li
474.809 98.1348 li
472.779 98.334 li
470.759 98.5244 li
468.739 98.7148 li
466.719 98.9043 li
466.419 98.9346 li
464.699 99.084 li
462.679 99.2646 li
460.659 99.4443 li
458.639 99.625 li
456.619 99.8145 li
454.599 100.004 li
452.579 100.205 li
450.559 100.414 li
448.539 100.645 li
446.519 100.875 li
445.889 100.955 li
444.499 101.135 li
442.479 101.424 li
440.458 101.725 li
438.439 102.055 li
436.419 102.414 li
434.399 102.805 li
433.589 102.975 li
432.379 103.295 li
430.359 103.885 li
428.339 104.524 li
426.999 104.994 li
426.319 105.414 li
424.299 106.774 li
423.969 107.015 li
423.849 109.035 li
424.299 109.354 li
426.319 110.715 li
426.879 111.055 li
428.339 111.484 li
430.359 112.035 li
432.379 112.524 li
434.399 112.965 li
434.979 113.074 li
436.419 113.265 li
438.439 113.515 li
440.458 113.725 li
442.479 113.924 li
444.499 114.095 li
446.519 114.244 li
448.539 114.375 li
450.559 114.494 li
452.579 114.595 li
454.599 114.685 li
456.619 114.754 li
458.639 114.824 li
460.659 114.885 li
462.679 114.924 li
464.699 114.965 li
466.719 114.994 li
468.739 115.024 li
470.759 115.045 li
472.779 115.064 li
474.809 115.074 li
476.829 115.084 li
478.849 115.095 li
480.189 115.095 li
480.869 115.095 li
482.889 115.095 li
484.909 115.104 li
486.929 115.104 li
488.949 115.104 li
490.969 115.104 li
492.989 115.104 li
495.009 115.115 li
497.029 115.115 li
499.049 115.125 li
501.069 115.135 li
503.089 115.145 li
505.109 115.164 li
507.129 115.174 li
509.149 115.194 li
511.169 115.225 li
513.189 115.254 li
515.208 115.285 li
517.229 115.324 li
519.249 115.375 li
521.269 115.424 li
523.289 115.484 li
523.289 10.0444 li
400.619 10.0444 li
cp
.75021 .679683 .670222 .90164 cmyk
@
416.439 10.0444 mo
418.239 11.3647 li
419.159 12.0645 li
420.259 12.9146 li
421.749 14.0845 li
422.279 14.5044 li
424.229 16.1045 li
424.299 16.1646 li
426.319 17.8745 li
426.619 18.1245 li
428.339 19.6348 li
428.909 20.1445 li
430.359 21.4443 li
431.139 22.1646 li
432.379 23.3145 li
433.299 24.1846 li
434.399 25.2246 li
435.409 26.2046 li
436.419 27.1846 li
437.469 28.2246 li
438.439 29.1846 li
439.499 30.2446 li
440.458 31.2144 li
441.499 32.2646 li
442.479 33.2646 li
443.479 34.2847 li
444.499 35.3345 li
445.449 36.3047 li
446.519 37.4146 li
447.409 38.3247 li
448.539 39.4844 li
449.379 40.3447 li
450.559 41.5547 li
451.359 42.3647 li
452.579 43.5947 li
453.369 44.3848 li
454.599 45.6045 li
455.409 46.4043 li
456.619 47.5845 li
457.489 48.4243 li
458.639 49.5146 li
459.629 50.4443 li
460.659 51.3945 li
461.839 52.4644 li
462.679 53.2144 li
464.119 54.4844 li
464.699 54.9844 li
466.489 56.5044 li
466.719 56.6943 li
468.739 58.3447 li
468.979 58.5244 li
470.759 59.9146 li
471.579 60.5547 li
472.779 61.4443 li
474.309 62.5747 li
474.809 62.9146 li
476.829 64.3345 li
477.199 64.5947 li
478.849 65.6846 li
480.249 66.6147 li
480.869 66.9946 li
482.889 68.2646 li
483.469 68.6348 li
484.909 69.4844 li
486.879 70.6543 li
486.929 70.6743 li
488.949 71.8145 li
490.469 72.6743 li
490.969 72.9443 li
492.989 74.0244 li
494.219 74.6943 li
495.009 75.1045 li
497.029 76.1543 li
498.109 76.7144 li
499.049 77.1943 li
501.069 78.2246 li
502.069 78.7344 li
503.089 79.2646 li
505.109 80.2944 li
505.999 80.7544 li
507.129 81.3647 li
509.149 82.4443 li
509.769 82.7744 li
511.169 83.6045 li
513.179 84.7944 li
513.189 84.7944 li
515.208 86.2446 li
516.029 86.8145 li
517.229 88.0547 li
518.009 88.8345 li
518.759 90.8545 li
517.759 92.875 li
517.229 93.2148 li
515.208 94.3848 li
514.219 94.8945 li
513.189 95.2148 li
511.169 95.7949 li
509.149 96.3047 li
507.129 96.7744 li
506.479 96.9141 li
505.109 97.1445 li
503.089 97.4551 li
501.069 97.7441 li
499.049 98.0039 li
497.029 98.2539 li
495.009 98.4746 li
492.989 98.6846 li
490.969 98.8848 li
490.469 98.9346 li
488.949 99.0645 li
486.929 99.2344 li
484.909 99.3848 li
482.889 99.5449 li
480.869 99.6846 li
478.849 99.8242 li
476.829 99.9648 li
474.809 100.104 li
472.779 100.234 li
470.759 100.375 li
468.739 100.504 li
466.719 100.645 li
464.699 100.785 li
462.679 100.924 li
462.349 100.955 li
460.659 101.084 li
458.639 101.254 li
456.619 101.424 li
454.599 101.615 li
452.579 101.805 li
450.559 102.015 li
448.539 102.234 li
446.519 102.475 li
444.499 102.734 li
442.779 102.975 li
442.479 103.024 li
440.458 103.404 li
438.439 103.824 li
436.419 104.285 li
434.399 104.785 li
433.639 104.994 li
432.379 105.584 li
430.359 106.635 li
429.699 107.015 li
429.499 109.035 li
430.359 109.524 li
432.379 110.574 li
433.409 111.055 li
434.399 111.274 li
436.419 111.685 li
438.439 112.055 li
440.458 112.375 li
442.479 112.664 li
444.499 112.914 li
445.949 113.074 li
446.519 113.115 li
448.539 113.254 li
450.559 113.365 li
452.579 113.465 li
454.599 113.555 li
456.619 113.625 li
458.639 113.685 li
460.659 113.734 li
462.679 113.774 li
464.699 113.805 li
466.719 113.824 li
468.739 113.845 li
470.759 113.854 li
472.779 113.854 li
474.809 113.854 li
476.829 113.854 li
478.849 113.845 li
480.869 113.834 li
482.889 113.814 li
484.909 113.805 li
486.929 113.785 li
488.949 113.765 li
490.969 113.744 li
492.989 113.725 li
495.009 113.705 li
497.029 113.685 li
499.049 113.664 li
501.069 113.654 li
503.089 113.635 li
505.109 113.625 li
507.129 113.615 li
509.149 113.604 li
511.169 113.604 li
513.189 113.595 li
515.208 113.604 li
517.229 113.604 li
519.249 113.615 li
521.269 113.635 li
523.289 113.654 li
523.289 10.0444 li
416.439 10.0444 li
cp
.690486 .625269 .615778 .547601 cmyk
f
416.439 10.0444 mo
418.239 11.3647 li
419.159 12.0645 li
420.259 12.9146 li
421.749 14.0845 li
422.279 14.5044 li
424.229 16.1045 li
424.299 16.1646 li
426.319 17.8745 li
426.619 18.1245 li
428.339 19.6348 li
428.909 20.1445 li
430.359 21.4443 li
431.139 22.1646 li
432.379 23.3145 li
433.299 24.1846 li
434.399 25.2246 li
435.409 26.2046 li
436.419 27.1846 li
437.469 28.2246 li
438.439 29.1846 li
439.499 30.2446 li
440.458 31.2144 li
441.499 32.2646 li
442.479 33.2646 li
443.479 34.2847 li
444.499 35.3345 li
445.449 36.3047 li
446.519 37.4146 li
447.409 38.3247 li
448.539 39.4844 li
449.379 40.3447 li
450.559 41.5547 li
451.359 42.3647 li
452.579 43.5947 li
453.369 44.3848 li
454.599 45.6045 li
455.409 46.4043 li
456.619 47.5845 li
457.489 48.4243 li
458.639 49.5146 li
459.629 50.4443 li
460.659 51.3945 li
461.839 52.4644 li
462.679 53.2144 li
464.119 54.4844 li
464.699 54.9844 li
466.489 56.5044 li
466.719 56.6943 li
468.739 58.3447 li
468.979 58.5244 li
470.759 59.9146 li
471.579 60.5547 li
472.779 61.4443 li
474.309 62.5747 li
474.809 62.9146 li
476.829 64.3345 li
477.199 64.5947 li
478.849 65.6846 li
480.249 66.6147 li
480.869 66.9946 li
482.889 68.2646 li
483.469 68.6348 li
484.909 69.4844 li
486.879 70.6543 li
486.929 70.6743 li
488.949 71.8145 li
490.469 72.6743 li
490.969 72.9443 li
492.989 74.0244 li
494.219 74.6943 li
495.009 75.1045 li
497.029 76.1543 li
498.109 76.7144 li
499.049 77.1943 li
501.069 78.2246 li
502.069 78.7344 li
503.089 79.2646 li
505.109 80.2944 li
505.999 80.7544 li
507.129 81.3647 li
509.149 82.4443 li
509.769 82.7744 li
511.169 83.6045 li
513.179 84.7944 li
513.189 84.7944 li
515.208 86.2446 li
516.029 86.8145 li
517.229 88.0547 li
518.009 88.8345 li
518.759 90.8545 li
517.759 92.875 li
517.229 93.2148 li
515.208 94.3848 li
514.219 94.8945 li
513.189 95.2148 li
511.169 95.7949 li
509.149 96.3047 li
507.129 96.7744 li
506.479 96.9141 li
505.109 97.1445 li
503.089 97.4551 li
501.069 97.7441 li
499.049 98.0039 li
497.029 98.2539 li
495.009 98.4746 li
492.989 98.6846 li
490.969 98.8848 li
490.469 98.9346 li
488.949 99.0645 li
486.929 99.2344 li
484.909 99.3848 li
482.889 99.5449 li
480.869 99.6846 li
478.849 99.8242 li
476.829 99.9648 li
474.809 100.104 li
472.779 100.234 li
470.759 100.375 li
468.739 100.504 li
466.719 100.645 li
464.699 100.785 li
462.679 100.924 li
462.349 100.955 li
460.659 101.084 li
458.639 101.254 li
456.619 101.424 li
454.599 101.615 li
452.579 101.805 li
450.559 102.015 li
448.539 102.234 li
446.519 102.475 li
444.499 102.734 li
442.779 102.975 li
442.479 103.024 li
440.458 103.404 li
438.439 103.824 li
436.419 104.285 li
434.399 104.785 li
433.639 104.994 li
432.379 105.584 li
430.359 106.635 li
429.699 107.015 li
429.499 109.035 li
430.359 109.524 li
432.379 110.574 li
433.409 111.055 li
434.399 111.274 li
436.419 111.685 li
438.439 112.055 li
440.458 112.375 li
442.479 112.664 li
444.499 112.914 li
445.949 113.074 li
446.519 113.115 li
448.539 113.254 li
450.559 113.365 li
452.579 113.465 li
454.599 113.555 li
456.619 113.625 li
458.639 113.685 li
460.659 113.734 li
462.679 113.774 li
464.699 113.805 li
466.719 113.824 li
468.739 113.845 li
470.759 113.854 li
472.779 113.854 li
474.809 113.854 li
476.829 113.854 li
478.849 113.845 li
480.869 113.834 li
482.889 113.814 li
484.909 113.805 li
486.929 113.785 li
488.949 113.765 li
490.969 113.744 li
492.989 113.725 li
495.009 113.705 li
497.029 113.685 li
499.049 113.664 li
501.069 113.654 li
503.089 113.635 li
505.109 113.625 li
507.129 113.615 li
509.149 113.604 li
511.169 113.604 li
513.189 113.595 li
515.208 113.604 li
517.229 113.604 li
519.249 113.615 li
521.269 113.635 li
523.289 113.654 li
523.289 10.0444 li
416.439 10.0444 li
cp
.75021 .679683 .670222 .90164 cmyk
@
430.599 10.0444 mo
432.379 11.6045 li
432.899 12.0645 li
434.399 13.4243 li
435.109 14.0845 li
436.419 15.3047 li
437.259 16.1045 li
438.439 17.2344 li
439.349 18.1245 li
440.458 19.2246 li
441.379 20.1445 li
442.479 21.2544 li
443.369 22.1646 li
444.499 23.3345 li
445.309 24.1846 li
446.519 25.4546 li
447.219 26.2046 li
448.539 27.6147 li
449.109 28.2246 li
450.559 29.7847 li
450.979 30.2446 li
452.579 31.9844 li
452.839 32.2646 li
454.599 34.1846 li
454.689 34.2847 li
456.549 36.3047 li
456.619 36.3848 li
458.419 38.3247 li
458.639 38.5645 li
460.309 40.3447 li
460.659 40.7246 li
462.219 42.3647 li
462.679 42.8447 li
464.179 44.3848 li
464.699 44.9146 li
466.179 46.4043 li
466.719 46.9443 li
468.239 48.4243 li
468.739 48.9146 li
470.359 50.4443 li
470.759 50.8145 li
472.569 52.4644 li
472.779 52.6543 li
474.809 54.4346 li
474.869 54.4844 li
476.829 56.1245 li
477.279 56.5044 li
478.849 57.7544 li
479.809 58.5244 li
480.869 59.3247 li
482.479 60.5547 li
482.889 60.8447 li
484.909 62.2847 li
485.299 62.5747 li
486.929 63.6743 li
488.289 64.5947 li
488.949 65.0146 li
490.969 66.2944 li
491.458 66.6147 li
492.989 67.5244 li
494.829 68.6348 li
495.009 68.7344 li
497.029 69.8745 li
498.409 70.6543 li
499.049 70.9946 li
501.069 72.0747 li
502.179 72.6743 li
503.089 73.1348 li
505.109 74.1646 li
506.149 74.6943 li
507.129 75.1743 li
509.149 76.1646 li
510.279 76.7144 li
511.169 77.1348 li
513.189 78.1045 li
514.509 78.7344 li
515.208 79.0645 li
517.229 80.0347 li
518.749 80.7544 li
519.249 80.9946 li
521.269 81.9844 li
522.879 82.7744 li
523.289 82.9946 li
523.289 10.0444 li
430.599 10.0444 li
cp
.70016 .63888 .629328 .627344 cmyk
f
430.599 10.0444 mo
432.379 11.6045 li
432.899 12.0645 li
434.399 13.4243 li
435.109 14.0845 li
436.419 15.3047 li
437.259 16.1045 li
438.439 17.2344 li
439.349 18.1245 li
440.458 19.2246 li
441.379 20.1445 li
442.479 21.2544 li
443.369 22.1646 li
444.499 23.3345 li
445.309 24.1846 li
446.519 25.4546 li
447.219 26.2046 li
448.539 27.6147 li
449.109 28.2246 li
450.559 29.7847 li
450.979 30.2446 li
452.579 31.9844 li
452.839 32.2646 li
454.599 34.1846 li
454.689 34.2847 li
456.549 36.3047 li
456.619 36.3848 li
458.419 38.3247 li
458.639 38.5645 li
460.309 40.3447 li
460.659 40.7246 li
462.219 42.3647 li
462.679 42.8447 li
464.179 44.3848 li
464.699 44.9146 li
466.179 46.4043 li
466.719 46.9443 li
468.239 48.4243 li
468.739 48.9146 li
470.359 50.4443 li
470.759 50.8145 li
472.569 52.4644 li
472.779 52.6543 li
474.809 54.4346 li
474.869 54.4844 li
476.829 56.1245 li
477.279 56.5044 li
478.849 57.7544 li
479.809 58.5244 li
480.869 59.3247 li
482.479 60.5547 li
482.889 60.8447 li
484.909 62.2847 li
485.299 62.5747 li
486.929 63.6743 li
488.289 64.5947 li
488.949 65.0146 li
490.969 66.2944 li
491.458 66.6147 li
492.989 67.5244 li
494.829 68.6348 li
495.009 68.7344 li
497.029 69.8745 li
498.409 70.6543 li
499.049 70.9946 li
501.069 72.0747 li
502.179 72.6743 li
503.089 73.1348 li
505.109 74.1646 li
506.149 74.6943 li
507.129 75.1743 li
509.149 76.1646 li
510.279 76.7144 li
511.169 77.1348 li
513.189 78.1045 li
514.509 78.7344 li
515.208 79.0645 li
517.229 80.0347 li
518.749 80.7544 li
519.249 80.9946 li
521.269 81.9844 li
522.879 82.7744 li
523.289 82.9946 li
523.289 10.0444 li
430.599 10.0444 li
cp
.75021 .679683 .670222 .90164 cmyk
@
444.229 10.0444 mo
444.499 10.3145 li
446.249 12.0645 li
446.519 12.3345 li
448.219 14.0845 li
448.539 14.4243 li
450.139 16.1045 li
450.559 16.5547 li
452.019 18.1245 li
452.579 18.7344 li
453.869 20.1445 li
454.599 20.9546 li
455.689 22.1646 li
456.619 23.2144 li
457.479 24.1846 li
458.639 25.4946 li
459.259 26.2046 li
460.659 27.8047 li
461.029 28.2246 li
462.679 30.1245 li
462.789 30.2446 li
464.559 32.2646 li
464.699 32.4243 li
466.339 34.2847 li
466.719 34.7246 li
468.129 36.3047 li
468.739 36.9844 li
469.949 38.3247 li
470.759 39.2144 li
471.799 40.3447 li
472.779 41.4043 li
473.689 42.3647 li
474.809 43.5347 li
475.629 44.3848 li
476.829 45.5947 li
477.629 46.4043 li
478.849 47.5845 li
479.708 48.4243 li
480.869 49.5146 li
481.869 50.4443 li
482.889 51.3545 li
484.129 52.4644 li
484.909 53.1348 li
486.499 54.4844 li
486.929 54.8345 li
488.949 56.4746 li
488.989 56.5044 li
490.969 58.0146 li
491.639 58.5244 li
492.989 59.5044 li
494.439 60.5547 li
495.009 60.9346 li
497.029 62.3145 li
497.409 62.5747 li
499.049 63.6147 li
500.579 64.5947 li
501.069 64.8848 li
503.089 66.0845 li
503.969 66.6147 li
505.109 67.2544 li
507.129 68.3848 li
507.569 68.6348 li
509.149 69.4644 li
511.169 70.5244 li
511.409 70.6543 li
513.189 71.5347 li
515.208 72.5347 li
515.489 72.6743 li
517.229 73.4844 li
519.249 74.4346 li
519.799 74.6943 li
521.269 75.3545 li
523.289 76.2544 li
523.289 10.0444 li
444.229 10.0444 li
cp
.713466 .653346 .642878 .708888 cmyk
f
444.229 10.0444 mo
444.499 10.3145 li
446.249 12.0645 li
446.519 12.3345 li
448.219 14.0845 li
448.539 14.4243 li
450.139 16.1045 li
450.559 16.5547 li
452.019 18.1245 li
452.579 18.7344 li
453.869 20.1445 li
454.599 20.9546 li
455.689 22.1646 li
456.619 23.2144 li
457.479 24.1846 li
458.639 25.4946 li
459.259 26.2046 li
460.659 27.8047 li
461.029 28.2246 li
462.679 30.1245 li
462.789 30.2446 li
464.559 32.2646 li
464.699 32.4243 li
466.339 34.2847 li
466.719 34.7246 li
468.129 36.3047 li
468.739 36.9844 li
469.949 38.3247 li
470.759 39.2144 li
471.799 40.3447 li
472.779 41.4043 li
473.689 42.3647 li
474.809 43.5347 li
475.629 44.3848 li
476.829 45.5947 li
477.629 46.4043 li
478.849 47.5845 li
479.708 48.4243 li
480.869 49.5146 li
481.869 50.4443 li
482.889 51.3545 li
484.129 52.4644 li
484.909 53.1348 li
486.499 54.4844 li
486.929 54.8345 li
488.949 56.4746 li
488.989 56.5044 li
490.969 58.0146 li
491.639 58.5244 li
492.989 59.5044 li
494.439 60.5547 li
495.009 60.9346 li
497.029 62.3145 li
497.409 62.5747 li
499.049 63.6147 li
500.579 64.5947 li
501.069 64.8848 li
503.089 66.0845 li
503.969 66.6147 li
505.109 67.2544 li
507.129 68.3848 li
507.569 68.6348 li
509.149 69.4644 li
511.169 70.5244 li
511.409 70.6543 li
513.189 71.5347 li
515.208 72.5347 li
515.489 72.6743 li
517.229 73.4844 li
519.249 74.4346 li
519.799 74.6943 li
521.269 75.3545 li
523.289 76.2544 li
523.289 10.0444 li
444.229 10.0444 li
cp
.75021 .679683 .670222 .90164 cmyk
@
458.059 10.0444 mo
458.639 10.6846 li
459.889 12.0645 li
460.659 12.9346 li
461.679 14.0845 li
462.679 15.2246 li
463.449 16.1045 li
464.699 17.5645 li
465.189 18.1245 li
466.719 19.9346 li
466.909 20.1445 li
468.609 22.1646 li
468.739 22.3247 li
470.309 24.1846 li
470.759 24.7246 li
472.009 26.2046 li
472.779 27.1245 li
473.708 28.2246 li
474.809 29.5244 li
475.409 30.2446 li
476.829 31.9043 li
477.129 32.2646 li
478.849 34.2544 li
478.869 34.2847 li
480.649 36.3047 li
480.869 36.5444 li
482.458 38.3247 li
482.889 38.7847 li
484.319 40.3447 li
484.909 40.9644 li
486.239 42.3647 li
486.929 43.0645 li
488.229 44.3848 li
488.949 45.0947 li
490.289 46.4043 li
490.969 47.0444 li
492.449 48.4243 li
492.989 48.9146 li
494.708 50.4443 li
495.009 50.7046 li
497.029 52.4146 li
497.089 52.4644 li
499.049 54.0444 li
499.609 54.4844 li
501.069 55.5947 li
502.289 56.5044 li
503.089 57.0845 li
505.109 58.5146 li
505.129 58.5244 li
507.129 59.8545 li
508.179 60.5547 li
509.149 61.1543 li
511.169 62.4146 li
511.429 62.5747 li
513.189 63.5947 li
514.919 64.5947 li
515.208 64.7446 li
517.229 65.8345 li
518.669 66.6147 li
519.249 66.9043 li
521.269 67.9243 li
522.689 68.6348 li
523.289 68.9146 li
523.289 10.0444 li
458.059 10.0444 li
cp
.724819 .664973 .651209 .775509 cmyk
f
458.059 10.0444 mo
458.639 10.6846 li
459.889 12.0645 li
460.659 12.9346 li
461.679 14.0845 li
462.679 15.2246 li
463.449 16.1045 li
464.699 17.5645 li
465.189 18.1245 li
466.719 19.9346 li
466.909 20.1445 li
468.609 22.1646 li
468.739 22.3247 li
470.309 24.1846 li
470.759 24.7246 li
472.009 26.2046 li
472.779 27.1245 li
473.708 28.2246 li
474.809 29.5244 li
475.409 30.2446 li
476.829 31.9043 li
477.129 32.2646 li
478.849 34.2544 li
478.869 34.2847 li
480.649 36.3047 li
480.869 36.5444 li
482.458 38.3247 li
482.889 38.7847 li
484.319 40.3447 li
484.909 40.9644 li
486.239 42.3647 li
486.929 43.0645 li
488.229 44.3848 li
488.949 45.0947 li
490.289 46.4043 li
490.969 47.0444 li
492.449 48.4243 li
492.989 48.9146 li
494.708 50.4443 li
495.009 50.7046 li
497.029 52.4146 li
497.089 52.4644 li
499.049 54.0444 li
499.609 54.4844 li
501.069 55.5947 li
502.289 56.5044 li
503.089 57.0845 li
505.109 58.5146 li
505.129 58.5244 li
507.129 59.8545 li
508.179 60.5547 li
509.149 61.1543 li
511.169 62.4146 li
511.429 62.5747 li
513.189 63.5947 li
514.919 64.5947 li
515.208 64.7446 li
517.229 65.8345 li
518.669 66.6147 li
519.249 66.9043 li
521.269 67.9243 li
522.689 68.6348 li
523.289 68.9146 li
523.289 10.0444 li
458.059 10.0444 li
cp
.75021 .679683 .670222 .90164 cmyk
@
472.809 10.0444 mo
474.519 12.0645 li
474.809 12.4146 li
476.199 14.0845 li
476.829 14.8345 li
477.869 16.1045 li
478.849 17.2847 li
479.529 18.1245 li
480.869 19.7544 li
481.179 20.1445 li
482.829 22.1646 li
482.889 22.2344 li
484.489 24.1846 li
484.909 24.6943 li
486.159 26.2046 li
486.929 27.1348 li
487.839 28.2246 li
488.949 29.5347 li
489.549 30.2446 li
490.969 31.9043 li
491.279 32.2646 li
492.989 34.2144 li
493.059 34.2847 li
494.879 36.3047 li
495.009 36.4443 li
496.759 38.3247 li
497.029 38.6045 li
498.708 40.3447 li
499.049 40.6846 li
500.739 42.3647 li
501.069 42.6846 li
502.859 44.3848 li
503.089 44.6045 li
505.079 46.4043 li
505.109 46.4346 li
507.129 48.1743 li
507.429 48.4243 li
509.149 49.8247 li
509.929 50.4443 li
511.169 51.4043 li
512.579 52.4644 li
513.189 52.9146 li
515.208 54.3545 li
515.399 54.4844 li
517.229 55.7046 li
518.439 56.5044 li
519.249 57.0146 li
521.269 58.2646 li
521.708 58.5244 li
523.289 59.4443 li
523.289 10.0444 li
472.809 10.0444 li
cp
.732265 .671473 .656947 .820401 cmyk
f
472.809 10.0444 mo
474.519 12.0645 li
474.809 12.4146 li
476.199 14.0845 li
476.829 14.8345 li
477.869 16.1045 li
478.849 17.2847 li
479.529 18.1245 li
480.869 19.7544 li
481.179 20.1445 li
482.829 22.1646 li
482.889 22.2344 li
484.489 24.1846 li
484.909 24.6943 li
486.159 26.2046 li
486.929 27.1348 li
487.839 28.2246 li
488.949 29.5347 li
489.549 30.2446 li
490.969 31.9043 li
491.279 32.2646 li
492.989 34.2144 li
493.059 34.2847 li
494.879 36.3047 li
495.009 36.4443 li
496.759 38.3247 li
497.029 38.6045 li
498.708 40.3447 li
499.049 40.6846 li
500.739 42.3647 li
501.069 42.6846 li
502.859 44.3848 li
503.089 44.6045 li
505.079 46.4043 li
505.109 46.4346 li
507.129 48.1743 li
507.429 48.4243 li
509.149 49.8247 li
509.929 50.4443 li
511.169 51.4043 li
512.579 52.4644 li
513.189 52.9146 li
515.208 54.3545 li
515.399 54.4844 li
517.229 55.7046 li
518.439 56.5044 li
519.249 57.0146 li
521.269 58.2646 li
521.708 58.5244 li
523.289 59.4443 li
523.289 10.0444 li
472.809 10.0444 li
cp
.75021 .679683 .670222 .90164 cmyk
@
489.619 10.0444 mo
490.969 11.6846 li
491.279 12.0645 li
492.929 14.0845 li
492.989 14.1543 li
494.589 16.1045 li
495.009 16.6147 li
496.249 18.1245 li
497.029 19.0747 li
497.919 20.1445 li
499.049 21.5044 li
499.599 22.1646 li
501.069 23.9146 li
501.299 24.1846 li
503.029 26.2046 li
503.089 26.2744 li
504.809 28.2246 li
505.109 28.5645 li
506.629 30.2446 li
507.129 30.7944 li
508.499 32.2646 li
509.149 32.9443 li
510.439 34.2847 li
511.169 35.0244 li
512.458 36.3047 li
513.189 37.0146 li
514.569 38.3247 li
515.208 38.9146 li
516.789 40.3447 li
517.229 40.7344 li
519.119 42.3647 li
519.249 42.4746 li
521.269 44.1147 li
521.619 44.3848 li
523.289 45.6646 li
523.289 10.0444 li
489.619 10.0444 li
cp
.741817 .675685 .664179 .863462 cmyk
f
489.619 10.0444 mo
490.969 11.6846 li
491.279 12.0645 li
492.929 14.0845 li
492.989 14.1543 li
494.589 16.1045 li
495.009 16.6147 li
496.249 18.1245 li
497.029 19.0747 li
497.919 20.1445 li
499.049 21.5044 li
499.599 22.1646 li
501.069 23.9146 li
501.299 24.1846 li
503.029 26.2046 li
503.089 26.2744 li
504.809 28.2246 li
505.109 28.5645 li
506.629 30.2446 li
507.129 30.7944 li
508.499 32.2646 li
509.149 32.9443 li
510.439 34.2847 li
511.169 35.0244 li
512.458 36.3047 li
513.189 37.0146 li
514.569 38.3247 li
515.208 38.9146 li
516.789 40.3447 li
517.229 40.7344 li
519.119 42.3647 li
519.249 42.4746 li
521.269 44.1147 li
521.619 44.3848 li
523.289 45.6646 li
523.289 10.0444 li
489.619 10.0444 li
cp
.75021 .679683 .670222 .90164 cmyk
@
511.069 10.0444 mo
511.169 10.1543 li
512.859 12.0645 li
513.189 12.4346 li
514.669 14.0845 li
515.208 14.6846 li
516.509 16.1045 li
517.229 16.8945 li
518.379 18.1245 li
519.249 19.0444 li
520.299 20.1445 li
521.269 21.1445 li
522.279 22.1646 li
523.289 23.1846 li
523.289 10.0444 li
511.069 10.0444 li
cp
f
511.069 10.0444 mo
511.169 10.1543 li
512.859 12.0645 li
513.189 12.4346 li
514.669 14.0845 li
515.208 14.6846 li
516.509 16.1045 li
517.229 16.8945 li
518.379 18.1245 li
519.249 19.0444 li
520.299 20.1445 li
521.269 21.1445 li
522.279 22.1646 li
523.289 23.1846 li
523.289 10.0444 li
511.069 10.0444 li
cp
@
523.289 111.385 mo
521.269 111.404 li
519.249 111.435 li
517.229 111.465 li
515.208 111.504 li
513.189 111.545 li
511.169 111.584 li
509.149 111.635 li
507.129 111.685 li
505.109 111.734 li
503.089 111.795 li
501.069 111.845 li
499.049 111.904 li
497.029 111.965 li
495.009 112.015 li
492.989 112.074 li
490.969 112.125 li
488.949 112.185 li
486.929 112.234 li
484.909 112.285 li
482.889 112.324 li
480.869 112.375 li
478.849 112.404 li
476.829 112.435 li
474.809 112.465 li
472.779 112.484 li
470.759 112.494 li
468.739 112.494 li
466.719 112.484 li
464.699 112.465 li
462.679 112.435 li
460.659 112.385 li
458.639 112.324 li
456.619 112.244 li
454.599 112.145 li
452.579 112.024 li
450.559 111.885 li
448.539 111.715 li
446.519 111.515 li
444.499 111.295 li
442.659 111.055 li
442.479 111.004 li
440.458 110.404 li
438.439 109.715 li
436.669 109.035 li
436.958 107.015 li
438.439 106.424 li
440.458 105.705 li
442.479 105.045 li
442.669 104.994 li
444.499 104.685 li
446.519 104.365 li
448.539 104.084 li
450.559 103.814 li
452.579 103.574 li
454.599 103.365 li
456.619 103.154 li
458.619 102.975 li
458.639 102.975 li
460.659 102.834 li
462.679 102.715 li
464.699 102.595 li
466.719 102.484 li
468.739 102.385 li
470.759 102.285 li
472.779 102.194 li
474.809 102.104 li
476.829 102.015 li
478.849 101.935 li
480.869 101.845 li
482.889 101.765 li
484.909 101.685 li
486.929 101.604 li
488.949 101.515 li
490.969 101.424 li
492.989 101.334 li
495.009 101.234 li
497.029 101.125 li
499.049 101.015 li
500.069 100.955 li
501.069 100.895 li
503.089 100.774 li
505.109 100.645 li
507.129 100.494 li
509.149 100.334 li
511.169 100.154 li
513.189 99.9551 li
515.208 99.7344 li
517.229 99.4844 li
519.249 99.2051 li
521.029 98.9346 li
521.269 98.8945 li
523.289 98.5039 li
523.289 111.385 li
cp
.70016 .63888 .629328 .627344 cmyk
f
523.289 111.385 mo
521.269 111.404 li
519.249 111.435 li
517.229 111.465 li
515.208 111.504 li
513.189 111.545 li
511.169 111.584 li
509.149 111.635 li
507.129 111.685 li
505.109 111.734 li
503.089 111.795 li
501.069 111.845 li
499.049 111.904 li
497.029 111.965 li
495.009 112.015 li
492.989 112.074 li
490.969 112.125 li
488.949 112.185 li
486.929 112.234 li
484.909 112.285 li
482.889 112.324 li
480.869 112.375 li
478.849 112.404 li
476.829 112.435 li
474.809 112.465 li
472.779 112.484 li
470.759 112.494 li
468.739 112.494 li
466.719 112.484 li
464.699 112.465 li
462.679 112.435 li
460.659 112.385 li
458.639 112.324 li
456.619 112.244 li
454.599 112.145 li
452.579 112.024 li
450.559 111.885 li
448.539 111.715 li
446.519 111.515 li
444.499 111.295 li
442.659 111.055 li
442.479 111.004 li
440.458 110.404 li
438.439 109.715 li
436.669 109.035 li
436.958 107.015 li
438.439 106.424 li
440.458 105.705 li
442.479 105.045 li
442.669 104.994 li
444.499 104.685 li
446.519 104.365 li
448.539 104.084 li
450.559 103.814 li
452.579 103.574 li
454.599 103.365 li
456.619 103.154 li
458.619 102.975 li
458.639 102.975 li
460.659 102.834 li
462.679 102.715 li
464.699 102.595 li
466.719 102.484 li
468.739 102.385 li
470.759 102.285 li
472.779 102.194 li
474.809 102.104 li
476.829 102.015 li
478.849 101.935 li
480.869 101.845 li
482.889 101.765 li
484.909 101.685 li
486.929 101.604 li
488.949 101.515 li
490.969 101.424 li
492.989 101.334 li
495.009 101.234 li
497.029 101.125 li
499.049 101.015 li
500.069 100.955 li
501.069 100.895 li
503.089 100.774 li
505.109 100.645 li
507.129 100.494 li
509.149 100.334 li
511.169 100.154 li
513.189 99.9551 li
515.208 99.7344 li
517.229 99.4844 li
519.249 99.2051 li
521.029 98.9346 li
521.269 98.8945 li
523.289 98.5039 li
523.289 111.385 li
cp
.75021 .679683 .670222 .90164 cmyk
@
448.539 109.125 mo
448.089 109.035 li
448.259 107.015 li
448.539 106.955 li
450.559 106.535 li
452.579 106.164 li
454.599 105.834 li
456.619 105.535 li
458.639 105.274 li
460.659 105.045 li
461.149 104.994 li
462.679 104.904 li
464.699 104.814 li
466.719 104.725 li
468.739 104.654 li
470.759 104.595 li
472.779 104.555 li
474.809 104.515 li
476.829 104.484 li
478.849 104.475 li
480.869 104.465 li
482.889 104.465 li
484.909 104.465 li
486.929 104.484 li
488.949 104.504 li
490.969 104.535 li
492.989 104.564 li
495.009 104.604 li
497.029 104.654 li
499.049 104.705 li
501.069 104.765 li
503.089 104.824 li
505.109 104.895 li
507.129 104.975 li
507.789 104.994 li
509.149 105.185 li
511.169 105.535 li
513.189 106.004 li
515.208 106.685 li
515.949 107.015 li
515.208 107.084 li
513.189 107.285 li
511.169 107.515 li
509.149 107.765 li
507.129 108.045 li
505.109 108.354 li
503.089 108.694 li
501.219 109.035 li
501.069 109.045 li
499.049 109.174 li
497.029 109.305 li
495.009 109.435 li
492.989 109.564 li
490.969 109.694 li
488.949 109.814 li
486.929 109.935 li
484.909 110.055 li
482.889 110.164 li
480.869 110.265 li
478.849 110.354 li
476.829 110.444 li
474.809 110.515 li
472.779 110.564 li
470.759 110.604 li
468.739 110.625 li
466.719 110.635 li
464.699 110.604 li
462.679 110.555 li
460.659 110.475 li
458.639 110.354 li
456.619 110.205 li
454.599 110.015 li
452.579 109.765 li
450.559 109.475 li
448.539 109.125 li
cp
.713466 .653346 .642878 .708888 cmyk
f
448.539 109.125 mo
448.089 109.035 li
448.259 107.015 li
448.539 106.955 li
450.559 106.535 li
452.579 106.164 li
454.599 105.834 li
456.619 105.535 li
458.639 105.274 li
460.659 105.045 li
461.149 104.994 li
462.679 104.904 li
464.699 104.814 li
466.719 104.725 li
468.739 104.654 li
470.759 104.595 li
472.779 104.555 li
474.809 104.515 li
476.829 104.484 li
478.849 104.475 li
480.869 104.465 li
482.889 104.465 li
484.909 104.465 li
486.929 104.484 li
488.949 104.504 li
490.969 104.535 li
492.989 104.564 li
495.009 104.604 li
497.029 104.654 li
499.049 104.705 li
501.069 104.765 li
503.089 104.824 li
505.109 104.895 li
507.129 104.975 li
507.789 104.994 li
509.149 105.185 li
511.169 105.535 li
513.189 106.004 li
515.208 106.685 li
515.949 107.015 li
515.208 107.084 li
513.189 107.285 li
511.169 107.515 li
509.149 107.765 li
507.129 108.045 li
505.109 108.354 li
503.089 108.694 li
501.219 109.035 li
501.069 109.045 li
499.049 109.174 li
497.029 109.305 li
495.009 109.435 li
492.989 109.564 li
490.969 109.694 li
488.949 109.814 li
486.929 109.935 li
484.909 110.055 li
482.889 110.164 li
480.869 110.265 li
478.849 110.354 li
476.829 110.444 li
474.809 110.515 li
472.779 110.564 li
470.759 110.604 li
468.739 110.625 li
466.719 110.635 li
464.699 110.604 li
462.679 110.555 li
460.659 110.475 li
458.639 110.354 li
456.619 110.205 li
454.599 110.015 li
452.579 109.765 li
450.559 109.475 li
448.539 109.125 li
cp
.75021 .679683 .670222 .90164 cmyk
@
384.309 210.045 mo
383.899 209.755 li
381.879 208.305 li
381.499 208.024 li
379.859 206.765 li
378.899 206.005 li
377.839 205.135 li
376.479 203.984 li
375.819 203.404 li
374.219 201.965 li
373.799 201.574 li
372.099 199.944 li
371.769 199.625 li
370.109 197.925 li
369.749 197.555 li
368.229 195.904 li
367.729 195.354 li
366.459 193.885 li
365.709 192.994 li
364.789 191.864 li
363.689 190.475 li
363.209 189.845 li
361.709 187.824 li
361.669 187.774 li
360.299 185.805 li
359.649 184.835 li
358.959 183.784 li
357.699 181.765 li
357.629 181.654 li
356.509 179.744 li
355.609 178.145 li
355.379 177.725 li
354.319 175.704 li
353.589 174.234 li
353.319 173.685 li
352.379 171.664 li
351.569 169.805 li
351.499 169.645 li
350.679 167.625 li
349.909 165.604 li
349.549 164.585 li
349.199 163.585 li
348.549 161.564 li
347.949 159.534 li
347.529 158.015 li
347.399 157.515 li
346.909 155.494 li
346.469 153.475 li
346.089 151.454 li
345.759 149.435 li
345.509 147.524 li
345.499 147.414 li
345.289 145.395 li
345.159 143.375 li
345.089 141.354 li
345.099 139.335 li
345.209 137.314 li
345.429 135.295 li
345.509 134.814 li
345.789 133.274 li
346.319 131.254 li
347.079 129.234 li
347.529 128.345 li
348.149 127.215 li
349.549 125.285 li
349.619 125.194 li
351.569 123.305 li
351.729 123.174 li
353.589 121.895 li
354.919 121.154 li
355.609 120.824 li
357.629 120.035 li
359.649 119.444 li
361.129 119.135 li
361.669 119.035 li
363.689 118.754 li
365.709 118.595 li
367.729 118.535 li
369.749 118.555 li
371.769 118.645 li
373.799 118.785 li
375.819 118.975 li
377.319 119.135 li
377.839 119.185 li
379.859 119.424 li
381.879 119.685 li
383.899 119.965 li
385.919 120.234 li
387.939 120.515 li
389.959 120.795 li
391.979 121.074 li
392.58 121.154 li
394 121.354 li
396.019 121.625 li
398.039 121.885 li
400.059 122.145 li
402.08 122.385 li
404.099 122.615 li
406.119 122.834 li
408.139 123.045 li
409.529 123.174 li
410.159 123.244 li
412.179 123.444 li
414.199 123.635 li
416.219 123.814 li
418.239 123.984 li
420.259 124.154 li
422.279 124.305 li
424.299 124.444 li
426.319 124.584 li
428.339 124.715 li
430.359 124.845 li
432.379 124.965 li
434.399 125.084 li
436.419 125.194 li
436.458 125.194 li
438.439 125.324 li
440.458 125.455 li
442.479 125.574 li
444.499 125.705 li
446.519 125.834 li
448.539 125.965 li
450.559 126.095 li
452.579 126.225 li
454.599 126.365 li
456.619 126.504 li
458.639 126.654 li
460.659 126.805 li
462.679 126.965 li
464.699 127.125 li
465.739 127.215 li
466.719 127.314 li
468.739 127.535 li
470.759 127.765 li
472.779 128.004 li
474.809 128.254 li
476.829 128.515 li
478.849 128.785 li
480.869 129.074 li
481.919 129.234 li
482.889 129.414 li
484.909 129.814 li
486.929 130.225 li
488.949 130.654 li
490.969 131.115 li
491.589 131.254 li
492.989 131.674 li
495.009 132.295 li
497.029 132.944 li
498.009 133.274 li
499.049 133.725 li
501.069 134.614 li
502.559 135.295 li
503.089 135.604 li
505.109 136.814 li
505.919 137.314 li
507.129 138.255 li
508.499 139.335 li
509.149 139.975 li
510.529 141.354 li
511.169 142.145 li
512.159 143.375 li
513.189 144.925 li
513.499 145.395 li
514.599 147.414 li
515.208 148.795 li
515.489 149.435 li
516.208 151.454 li
516.769 153.475 li
517.179 155.494 li
517.229 155.864 li
517.449 157.515 li
517.589 159.534 li
517.619 161.564 li
517.519 163.585 li
517.309 165.604 li
517.229 166.135 li
516.999 167.625 li
516.579 169.645 li
516.059 171.664 li
515.439 173.685 li
515.208 174.345 li
514.729 175.704 li
513.919 177.725 li
513.189 179.364 li
513.019 179.744 li
512.019 181.765 li
511.169 183.354 li
510.929 183.784 li
509.749 185.805 li
509.149 186.755 li
508.469 187.824 li
507.129 189.784 li
507.089 189.845 li
505.599 191.864 li
505.109 192.494 li
504.009 193.885 li
503.089 194.984 li
502.299 195.904 li
501.069 197.284 li
500.479 197.925 li
499.049 199.414 li
498.519 199.944 li
497.029 201.404 li
496.429 201.965 li
495.009 203.265 li
494.189 203.984 li
492.989 205.015 li
491.779 206.005 li
490.969 206.654 li
489.189 208.024 li
488.949 208.204 li
486.929 209.664 li
486.369 210.045 li
384.309 210.045 li
cp
.293034 .231266 .236057 3.0518e-05 cmyk
f
384.309 210.045 mo
383.899 209.755 li
381.879 208.305 li
381.499 208.024 li
379.859 206.765 li
378.899 206.005 li
377.839 205.135 li
376.479 203.984 li
375.819 203.404 li
374.219 201.965 li
373.799 201.574 li
372.099 199.944 li
371.769 199.625 li
370.109 197.925 li
369.749 197.555 li
368.229 195.904 li
367.729 195.354 li
366.459 193.885 li
365.709 192.994 li
364.789 191.864 li
363.689 190.475 li
363.209 189.845 li
361.709 187.824 li
361.669 187.774 li
360.299 185.805 li
359.649 184.835 li
358.959 183.784 li
357.699 181.765 li
357.629 181.654 li
356.509 179.744 li
355.609 178.145 li
355.379 177.725 li
354.319 175.704 li
353.589 174.234 li
353.319 173.685 li
352.379 171.664 li
351.569 169.805 li
351.499 169.645 li
350.679 167.625 li
349.909 165.604 li
349.549 164.585 li
349.199 163.585 li
348.549 161.564 li
347.949 159.534 li
347.529 158.015 li
347.399 157.515 li
346.909 155.494 li
346.469 153.475 li
346.089 151.454 li
345.759 149.435 li
345.509 147.524 li
345.499 147.414 li
345.289 145.395 li
345.159 143.375 li
345.089 141.354 li
345.099 139.335 li
345.209 137.314 li
345.429 135.295 li
345.509 134.814 li
345.789 133.274 li
346.319 131.254 li
347.079 129.234 li
347.529 128.345 li
348.149 127.215 li
349.549 125.285 li
349.619 125.194 li
351.569 123.305 li
351.729 123.174 li
353.589 121.895 li
354.919 121.154 li
355.609 120.824 li
357.629 120.035 li
359.649 119.444 li
361.129 119.135 li
361.669 119.035 li
363.689 118.754 li
365.709 118.595 li
367.729 118.535 li
369.749 118.555 li
371.769 118.645 li
373.799 118.785 li
375.819 118.975 li
377.319 119.135 li
377.839 119.185 li
379.859 119.424 li
381.879 119.685 li
383.899 119.965 li
385.919 120.234 li
387.939 120.515 li
389.959 120.795 li
391.979 121.074 li
392.58 121.154 li
394 121.354 li
396.019 121.625 li
398.039 121.885 li
400.059 122.145 li
402.08 122.385 li
404.099 122.615 li
406.119 122.834 li
408.139 123.045 li
409.529 123.174 li
410.159 123.244 li
412.179 123.444 li
414.199 123.635 li
416.219 123.814 li
418.239 123.984 li
420.259 124.154 li
422.279 124.305 li
424.299 124.444 li
426.319 124.584 li
428.339 124.715 li
430.359 124.845 li
432.379 124.965 li
434.399 125.084 li
436.419 125.194 li
436.458 125.194 li
438.439 125.324 li
440.458 125.455 li
442.479 125.574 li
444.499 125.705 li
446.519 125.834 li
448.539 125.965 li
450.559 126.095 li
452.579 126.225 li
454.599 126.365 li
456.619 126.504 li
458.639 126.654 li
460.659 126.805 li
462.679 126.965 li
464.699 127.125 li
465.739 127.215 li
466.719 127.314 li
468.739 127.535 li
470.759 127.765 li
472.779 128.004 li
474.809 128.254 li
476.829 128.515 li
478.849 128.785 li
480.869 129.074 li
481.919 129.234 li
482.889 129.414 li
484.909 129.814 li
486.929 130.225 li
488.949 130.654 li
490.969 131.115 li
491.589 131.254 li
492.989 131.674 li
495.009 132.295 li
497.029 132.944 li
498.009 133.274 li
499.049 133.725 li
501.069 134.614 li
502.559 135.295 li
503.089 135.604 li
505.109 136.814 li
505.919 137.314 li
507.129 138.255 li
508.499 139.335 li
509.149 139.975 li
510.529 141.354 li
511.169 142.145 li
512.159 143.375 li
513.189 144.925 li
513.499 145.395 li
514.599 147.414 li
515.208 148.795 li
515.489 149.435 li
516.208 151.454 li
516.769 153.475 li
517.179 155.494 li
517.229 155.864 li
517.449 157.515 li
517.589 159.534 li
517.619 161.564 li
517.519 163.585 li
517.309 165.604 li
517.229 166.135 li
516.999 167.625 li
516.579 169.645 li
516.059 171.664 li
515.439 173.685 li
515.208 174.345 li
514.729 175.704 li
513.919 177.725 li
513.189 179.364 li
513.019 179.744 li
512.019 181.765 li
511.169 183.354 li
510.929 183.784 li
509.749 185.805 li
509.149 186.755 li
508.469 187.824 li
507.129 189.784 li
507.089 189.845 li
505.599 191.864 li
505.109 192.494 li
504.009 193.885 li
503.089 194.984 li
502.299 195.904 li
501.069 197.284 li
500.479 197.925 li
499.049 199.414 li
498.519 199.944 li
497.029 201.404 li
496.429 201.965 li
495.009 203.265 li
494.189 203.984 li
492.989 205.015 li
491.779 206.005 li
490.969 206.654 li
489.189 208.024 li
488.949 208.204 li
486.929 209.664 li
486.369 210.045 li
384.309 210.045 li
cp
.75021 .679683 .670222 .90164 cmyk
@
396.889 210.045 mo
396.019 209.595 li
394 208.494 li
393.179 208.024 li
391.979 207.324 li
389.959 206.074 li
389.849 206.005 li
387.939 204.744 li
386.839 203.984 li
385.919 203.324 li
384.079 201.965 li
383.899 201.824 li
381.879 200.225 li
381.529 199.944 li
379.859 198.524 li
379.179 197.925 li
377.839 196.715 li
376.979 195.904 li
375.819 194.774 li
374.919 193.885 li
373.799 192.715 li
372.999 191.864 li
371.769 190.505 li
371.199 189.845 li
369.749 188.135 li
369.499 187.824 li
367.909 185.805 li
367.729 185.574 li
366.409 183.784 li
365.709 182.795 li
364.999 181.765 li
363.689 179.774 li
363.669 179.744 li
362.429 177.725 li
361.669 176.425 li
361.259 175.704 li
360.169 173.685 li
359.649 172.675 li
359.139 171.664 li
358.189 169.645 li
357.629 168.395 li
357.299 167.625 li
356.479 165.604 li
355.719 163.585 li
355.609 163.284 li
355.019 161.564 li
354.389 159.534 li
353.819 157.515 li
353.589 156.595 li
353.319 155.494 li
352.879 153.475 li
352.509 151.454 li
352.199 149.435 li
351.969 147.414 li
351.809 145.395 li
351.729 143.375 li
351.739 141.354 li
351.849 139.335 li
352.089 137.314 li
352.479 135.295 li
353.079 133.274 li
353.589 132.024 li
353.929 131.254 li
355.169 129.234 li
355.609 128.685 li
356.959 127.215 li
357.629 126.654 li
359.649 125.205 li
359.669 125.194 li
361.669 124.205 li
363.689 123.424 li
364.509 123.174 li
365.709 122.865 li
367.729 122.465 li
369.749 122.185 li
371.769 121.994 li
373.799 121.895 li
375.819 121.854 li
377.839 121.875 li
379.859 121.944 li
381.879 122.035 li
383.899 122.164 li
385.919 122.314 li
387.939 122.475 li
389.959 122.654 li
391.979 122.834 li
394 123.015 li
395.739 123.174 li
396.019 123.205 li
398.039 123.404 li
400.059 123.604 li
402.08 123.795 li
404.099 123.984 li
406.119 124.164 li
408.139 124.345 li
410.159 124.515 li
412.179 124.664 li
414.199 124.824 li
416.219 124.965 li
418.239 125.104 li
419.589 125.194 li
420.259 125.244 li
422.279 125.395 li
424.299 125.535 li
426.319 125.674 li
428.339 125.805 li
430.359 125.935 li
432.379 126.064 li
434.399 126.185 li
436.419 126.305 li
438.439 126.424 li
440.458 126.555 li
442.479 126.674 li
444.499 126.795 li
446.519 126.924 li
448.539 127.055 li
450.559 127.185 li
451.059 127.215 li
452.579 127.345 li
454.599 127.515 li
456.619 127.685 li
458.639 127.875 li
460.659 128.064 li
462.679 128.265 li
464.699 128.475 li
466.719 128.694 li
468.739 128.924 li
470.759 129.164 li
471.369 129.234 li
472.779 129.455 li
474.809 129.785 li
476.829 130.135 li
478.849 130.494 li
480.869 130.875 li
482.799 131.254 li
482.889 131.274 li
484.909 131.805 li
486.929 132.354 li
488.949 132.935 li
490.089 133.274 li
490.969 133.614 li
492.989 134.404 li
495.009 135.244 li
495.139 135.295 li
497.029 136.314 li
498.809 137.314 li
499.049 137.484 li
501.069 138.954 li
501.579 139.335 li
503.089 140.744 li
503.739 141.354 li
505.109 142.954 li
505.458 143.375 li
506.859 145.395 li
507.129 145.864 li
507.999 147.414 li
508.919 149.435 li
509.149 150.074 li
509.649 151.454 li
510.208 153.475 li
510.609 155.494 li
510.859 157.515 li
510.979 159.534 li
510.969 161.564 li
510.829 163.585 li
510.569 165.604 li
510.189 167.625 li
509.699 169.645 li
509.149 171.515 li
509.109 171.664 li
508.399 173.685 li
507.589 175.704 li
507.129 176.725 li
506.669 177.725 li
505.649 179.744 li
505.109 180.715 li
504.509 181.765 li
503.279 183.784 li
503.089 184.074 li
501.929 185.805 li
501.069 187.005 li
500.458 187.824 li
499.049 189.635 li
498.879 189.845 li
497.169 191.864 li
497.029 192.024 li
495.319 193.885 li
495.009 194.215 li
493.339 195.904 li
492.989 196.244 li
491.189 197.925 li
490.969 198.125 li
488.949 199.885 li
488.869 199.944 li
486.929 201.515 li
486.349 201.965 li
484.909 203.055 li
483.609 203.984 li
482.889 204.494 li
480.869 205.845 li
480.609 206.005 li
478.849 207.104 li
477.289 208.024 li
476.829 208.295 li
474.809 209.404 li
473.569 210.045 li
396.889 210.045 li
cp
.251957 .1991 .204257 3.0518e-05 cmyk
f
396.889 210.045 mo
396.019 209.595 li
394 208.494 li
393.179 208.024 li
391.979 207.324 li
389.959 206.074 li
389.849 206.005 li
387.939 204.744 li
386.839 203.984 li
385.919 203.324 li
384.079 201.965 li
383.899 201.824 li
381.879 200.225 li
381.529 199.944 li
379.859 198.524 li
379.179 197.925 li
377.839 196.715 li
376.979 195.904 li
375.819 194.774 li
374.919 193.885 li
373.799 192.715 li
372.999 191.864 li
371.769 190.505 li
371.199 189.845 li
369.749 188.135 li
369.499 187.824 li
367.909 185.805 li
367.729 185.574 li
366.409 183.784 li
365.709 182.795 li
364.999 181.765 li
363.689 179.774 li
363.669 179.744 li
362.429 177.725 li
361.669 176.425 li
361.259 175.704 li
360.169 173.685 li
359.649 172.675 li
359.139 171.664 li
358.189 169.645 li
357.629 168.395 li
357.299 167.625 li
356.479 165.604 li
355.719 163.585 li
355.609 163.284 li
355.019 161.564 li
354.389 159.534 li
353.819 157.515 li
353.589 156.595 li
353.319 155.494 li
352.879 153.475 li
352.509 151.454 li
352.199 149.435 li
351.969 147.414 li
351.809 145.395 li
351.729 143.375 li
351.739 141.354 li
351.849 139.335 li
352.089 137.314 li
352.479 135.295 li
353.079 133.274 li
353.589 132.024 li
353.929 131.254 li
355.169 129.234 li
355.609 128.685 li
356.959 127.215 li
357.629 126.654 li
359.649 125.205 li
359.669 125.194 li
361.669 124.205 li
363.689 123.424 li
364.509 123.174 li
365.709 122.865 li
367.729 122.465 li
369.749 122.185 li
371.769 121.994 li
373.799 121.895 li
375.819 121.854 li
377.839 121.875 li
379.859 121.944 li
381.879 122.035 li
383.899 122.164 li
385.919 122.314 li
387.939 122.475 li
389.959 122.654 li
391.979 122.834 li
394 123.015 li
395.739 123.174 li
396.019 123.205 li
398.039 123.404 li
400.059 123.604 li
402.08 123.795 li
404.099 123.984 li
406.119 124.164 li
408.139 124.345 li
410.159 124.515 li
412.179 124.664 li
414.199 124.824 li
416.219 124.965 li
418.239 125.104 li
419.589 125.194 li
420.259 125.244 li
422.279 125.395 li
424.299 125.535 li
426.319 125.674 li
428.339 125.805 li
430.359 125.935 li
432.379 126.064 li
434.399 126.185 li
436.419 126.305 li
438.439 126.424 li
440.458 126.555 li
442.479 126.674 li
444.499 126.795 li
446.519 126.924 li
448.539 127.055 li
450.559 127.185 li
451.059 127.215 li
452.579 127.345 li
454.599 127.515 li
456.619 127.685 li
458.639 127.875 li
460.659 128.064 li
462.679 128.265 li
464.699 128.475 li
466.719 128.694 li
468.739 128.924 li
470.759 129.164 li
471.369 129.234 li
472.779 129.455 li
474.809 129.785 li
476.829 130.135 li
478.849 130.494 li
480.869 130.875 li
482.799 131.254 li
482.889 131.274 li
484.909 131.805 li
486.929 132.354 li
488.949 132.935 li
490.089 133.274 li
490.969 133.614 li
492.989 134.404 li
495.009 135.244 li
495.139 135.295 li
497.029 136.314 li
498.809 137.314 li
499.049 137.484 li
501.069 138.954 li
501.579 139.335 li
503.089 140.744 li
503.739 141.354 li
505.109 142.954 li
505.458 143.375 li
506.859 145.395 li
507.129 145.864 li
507.999 147.414 li
508.919 149.435 li
509.149 150.074 li
509.649 151.454 li
510.208 153.475 li
510.609 155.494 li
510.859 157.515 li
510.979 159.534 li
510.969 161.564 li
510.829 163.585 li
510.569 165.604 li
510.189 167.625 li
509.699 169.645 li
509.149 171.515 li
509.109 171.664 li
508.399 173.685 li
507.589 175.704 li
507.129 176.725 li
506.669 177.725 li
505.649 179.744 li
505.109 180.715 li
504.509 181.765 li
503.279 183.784 li
503.089 184.074 li
501.929 185.805 li
501.069 187.005 li
500.458 187.824 li
499.049 189.635 li
498.879 189.845 li
497.169 191.864 li
497.029 192.024 li
495.319 193.885 li
495.009 194.215 li
493.339 195.904 li
492.989 196.244 li
491.189 197.925 li
490.969 198.125 li
488.949 199.885 li
488.869 199.944 li
486.929 201.515 li
486.349 201.965 li
484.909 203.055 li
483.609 203.984 li
482.889 204.494 li
480.869 205.845 li
480.609 206.005 li
478.849 207.104 li
477.289 208.024 li
476.829 208.295 li
474.809 209.404 li
473.569 210.045 li
396.889 210.045 li
cp
.75021 .679683 .670222 .90164 cmyk
@
415.069 210.045 mo
414.199 209.814 li
412.179 209.225 li
410.159 208.574 li
408.589 208.024 li
408.139 207.864 li
406.119 207.085 li
404.099 206.255 li
403.539 206.005 li
402.08 205.345 li
400.059 204.364 li
399.309 203.984 li
398.039 203.324 li
396.019 202.194 li
395.619 201.965 li
394 200.994 li
392.339 199.944 li
391.979 199.704 li
389.959 198.335 li
389.389 197.925 li
387.939 196.854 li
386.699 195.904 li
385.919 195.284 li
384.219 193.885 li
383.899 193.604 li
381.929 191.864 li
381.879 191.814 li
379.859 189.885 li
379.809 189.845 li
377.839 187.824 li
377.839 187.814 li
376.009 185.805 li
375.819 185.574 li
374.299 183.784 li
373.799 183.154 li
372.699 181.765 li
371.769 180.524 li
371.209 179.744 li
369.809 177.725 li
369.749 177.635 li
368.509 175.704 li
367.729 174.425 li
367.299 173.685 li
366.169 171.664 li
365.709 170.805 li
365.119 169.645 li
364.149 167.625 li
363.689 166.595 li
363.259 165.604 li
362.439 163.585 li
361.699 161.564 li
361.669 161.484 li
361.039 159.534 li
360.439 157.515 li
359.919 155.494 li
359.649 154.265 li
359.479 153.475 li
359.119 151.454 li
358.839 149.435 li
358.639 147.414 li
358.529 145.395 li
358.529 143.375 li
358.639 141.354 li
358.879 139.335 li
359.289 137.314 li
359.649 136.125 li
359.919 135.295 li
360.849 133.274 li
361.669 132.024 li
362.219 131.254 li
363.689 129.754 li
364.269 129.234 li
365.709 128.265 li
367.589 127.215 li
367.729 127.154 li
369.749 126.404 li
371.769 125.805 li
373.799 125.354 li
374.689 125.194 li
375.819 125.035 li
377.839 124.824 li
379.859 124.685 li
381.879 124.604 li
383.899 124.564 li
385.919 124.564 li
387.939 124.604 li
389.959 124.664 li
391.979 124.744 li
394 124.834 li
396.019 124.944 li
398.039 125.055 li
400.059 125.174 li
400.399 125.194 li
402.08 125.314 li
404.099 125.455 li
406.119 125.595 li
408.139 125.734 li
410.159 125.875 li
412.179 126.004 li
414.199 126.135 li
416.219 126.265 li
418.239 126.395 li
420.259 126.515 li
422.279 126.635 li
424.299 126.744 li
426.319 126.865 li
428.339 126.975 li
430.359 127.084 li
432.379 127.194 li
432.708 127.215 li
434.399 127.324 li
436.419 127.465 li
438.439 127.604 li
440.458 127.744 li
442.479 127.885 li
444.499 128.024 li
446.519 128.174 li
448.539 128.334 li
450.559 128.494 li
452.579 128.654 li
454.599 128.834 li
456.619 129.015 li
458.639 129.205 li
458.969 129.234 li
460.659 129.444 li
462.679 129.705 li
464.699 129.975 li
466.719 130.265 li
468.739 130.564 li
470.759 130.875 li
472.779 131.205 li
473.069 131.254 li
474.809 131.635 li
476.829 132.095 li
478.849 132.585 li
480.869 133.085 li
481.599 133.274 li
482.889 133.715 li
484.909 134.414 li
486.929 135.154 li
487.299 135.295 li
488.949 136.095 li
490.969 137.114 li
491.359 137.314 li
492.989 138.395 li
494.379 139.335 li
495.009 139.875 li
496.708 141.354 li
497.029 141.704 li
498.539 143.375 li
499.049 144.064 li
500.009 145.395 li
501.069 147.185 li
501.199 147.414 li
502.149 149.435 li
502.899 151.454 li
503.089 152.125 li
503.458 153.475 li
503.859 155.494 li
504.089 157.515 li
504.179 159.534 li
504.119 161.564 li
503.929 163.585 li
503.609 165.604 li
503.169 167.625 li
503.089 167.895 li
502.589 169.645 li
501.899 171.664 li
501.089 173.685 li
501.069 173.725 li
500.149 175.704 li
499.099 177.725 li
499.049 177.814 li
497.919 179.744 li
497.029 181.145 li
496.619 181.765 li
495.189 183.784 li
495.009 184.024 li
493.619 185.805 li
492.989 186.574 li
491.909 187.824 li
490.969 188.875 li
490.049 189.845 li
488.949 190.965 li
488.029 191.864 li
486.929 192.895 li
485.819 193.885 li
484.909 194.675 li
483.409 195.904 li
482.889 196.324 li
480.869 197.854 li
480.769 197.925 li
478.849 199.274 li
477.849 199.944 li
476.829 200.604 li
474.809 201.845 li
474.609 201.965 li
472.779 203.005 li
470.939 203.984 li
470.759 204.074 li
468.739 205.074 li
466.719 206.005 li
464.699 206.854 li
462.679 207.654 li
461.659 208.024 li
460.659 208.385 li
458.639 209.045 li
456.619 209.654 li
455.189 210.045 li
415.069 210.045 li
cp
.212253 .165286 .17023 3.0518e-05 cmyk
f
415.069 210.045 mo
414.199 209.814 li
412.179 209.225 li
410.159 208.574 li
408.589 208.024 li
408.139 207.864 li
406.119 207.085 li
404.099 206.255 li
403.539 206.005 li
402.08 205.345 li
400.059 204.364 li
399.309 203.984 li
398.039 203.324 li
396.019 202.194 li
395.619 201.965 li
394 200.994 li
392.339 199.944 li
391.979 199.704 li
389.959 198.335 li
389.389 197.925 li
387.939 196.854 li
386.699 195.904 li
385.919 195.284 li
384.219 193.885 li
383.899 193.604 li
381.929 191.864 li
381.879 191.814 li
379.859 189.885 li
379.809 189.845 li
377.839 187.824 li
377.839 187.814 li
376.009 185.805 li
375.819 185.574 li
374.299 183.784 li
373.799 183.154 li
372.699 181.765 li
371.769 180.524 li
371.209 179.744 li
369.809 177.725 li
369.749 177.635 li
368.509 175.704 li
367.729 174.425 li
367.299 173.685 li
366.169 171.664 li
365.709 170.805 li
365.119 169.645 li
364.149 167.625 li
363.689 166.595 li
363.259 165.604 li
362.439 163.585 li
361.699 161.564 li
361.669 161.484 li
361.039 159.534 li
360.439 157.515 li
359.919 155.494 li
359.649 154.265 li
359.479 153.475 li
359.119 151.454 li
358.839 149.435 li
358.639 147.414 li
358.529 145.395 li
358.529 143.375 li
358.639 141.354 li
358.879 139.335 li
359.289 137.314 li
359.649 136.125 li
359.919 135.295 li
360.849 133.274 li
361.669 132.024 li
362.219 131.254 li
363.689 129.754 li
364.269 129.234 li
365.709 128.265 li
367.589 127.215 li
367.729 127.154 li
369.749 126.404 li
371.769 125.805 li
373.799 125.354 li
374.689 125.194 li
375.819 125.035 li
377.839 124.824 li
379.859 124.685 li
381.879 124.604 li
383.899 124.564 li
385.919 124.564 li
387.939 124.604 li
389.959 124.664 li
391.979 124.744 li
394 124.834 li
396.019 124.944 li
398.039 125.055 li
400.059 125.174 li
400.399 125.194 li
402.08 125.314 li
404.099 125.455 li
406.119 125.595 li
408.139 125.734 li
410.159 125.875 li
412.179 126.004 li
414.199 126.135 li
416.219 126.265 li
418.239 126.395 li
420.259 126.515 li
422.279 126.635 li
424.299 126.744 li
426.319 126.865 li
428.339 126.975 li
430.359 127.084 li
432.379 127.194 li
432.708 127.215 li
434.399 127.324 li
436.419 127.465 li
438.439 127.604 li
440.458 127.744 li
442.479 127.885 li
444.499 128.024 li
446.519 128.174 li
448.539 128.334 li
450.559 128.494 li
452.579 128.654 li
454.599 128.834 li
456.619 129.015 li
458.639 129.205 li
458.969 129.234 li
460.659 129.444 li
462.679 129.705 li
464.699 129.975 li
466.719 130.265 li
468.739 130.564 li
470.759 130.875 li
472.779 131.205 li
473.069 131.254 li
474.809 131.635 li
476.829 132.095 li
478.849 132.585 li
480.869 133.085 li
481.599 133.274 li
482.889 133.715 li
484.909 134.414 li
486.929 135.154 li
487.299 135.295 li
488.949 136.095 li
490.969 137.114 li
491.359 137.314 li
492.989 138.395 li
494.379 139.335 li
495.009 139.875 li
496.708 141.354 li
497.029 141.704 li
498.539 143.375 li
499.049 144.064 li
500.009 145.395 li
501.069 147.185 li
501.199 147.414 li
502.149 149.435 li
502.899 151.454 li
503.089 152.125 li
503.458 153.475 li
503.859 155.494 li
504.089 157.515 li
504.179 159.534 li
504.119 161.564 li
503.929 163.585 li
503.609 165.604 li
503.169 167.625 li
503.089 167.895 li
502.589 169.645 li
501.899 171.664 li
501.089 173.685 li
501.069 173.725 li
500.149 175.704 li
499.099 177.725 li
499.049 177.814 li
497.919 179.744 li
497.029 181.145 li
496.619 181.765 li
495.189 183.784 li
495.009 184.024 li
493.619 185.805 li
492.989 186.574 li
491.909 187.824 li
490.969 188.875 li
490.049 189.845 li
488.949 190.965 li
488.029 191.864 li
486.929 192.895 li
485.819 193.885 li
484.909 194.675 li
483.409 195.904 li
482.889 196.324 li
480.869 197.854 li
480.769 197.925 li
478.849 199.274 li
477.849 199.944 li
476.829 200.604 li
474.809 201.845 li
474.609 201.965 li
472.779 203.005 li
470.939 203.984 li
470.759 204.074 li
468.739 205.074 li
466.719 206.005 li
464.699 206.854 li
462.679 207.654 li
461.659 208.024 li
460.659 208.385 li
458.639 209.045 li
456.619 209.654 li
455.189 210.045 li
415.069 210.045 li
cp
.75021 .679683 .670222 .90164 cmyk
@
365.709 148.645 mo
365.619 147.414 li
365.589 145.395 li
365.669 143.375 li
365.709 143.005 li
365.909 141.354 li
366.329 139.335 li
366.979 137.314 li
367.729 135.744 li
367.969 135.295 li
369.439 133.274 li
369.749 132.965 li
371.709 131.254 li
371.769 131.215 li
373.799 130.064 li
375.579 129.234 li
375.819 129.154 li
377.839 128.545 li
379.859 128.055 li
381.879 127.674 li
383.899 127.385 li
385.509 127.215 li
385.919 127.185 li
387.939 127.055 li
389.959 126.975 li
391.979 126.924 li
394 126.914 li
396.019 126.924 li
398.039 126.955 li
400.059 126.994 li
402.08 127.045 li
404.099 127.115 li
406.119 127.185 li
406.919 127.215 li
408.139 127.274 li
410.159 127.375 li
412.179 127.475 li
414.199 127.574 li
416.219 127.685 li
418.239 127.785 li
420.259 127.895 li
422.279 128.004 li
424.299 128.115 li
426.319 128.225 li
428.339 128.334 li
430.359 128.455 li
432.379 128.574 li
434.399 128.694 li
436.419 128.814 li
438.439 128.935 li
440.458 129.074 li
442.479 129.205 li
442.929 129.234 li
444.499 129.375 li
446.519 129.555 li
448.539 129.754 li
450.559 129.955 li
452.579 130.164 li
454.599 130.385 li
456.619 130.615 li
458.639 130.854 li
460.659 131.115 li
461.739 131.254 li
462.679 131.414 li
464.699 131.774 li
466.719 132.154 li
468.739 132.555 li
470.759 132.975 li
472.169 133.274 li
472.779 133.454 li
474.809 134.045 li
476.829 134.664 li
478.819 135.295 li
478.849 135.305 li
480.869 136.175 li
482.889 137.074 li
483.409 137.314 li
484.909 138.204 li
486.759 139.335 li
486.929 139.465 li
488.949 141.074 li
489.289 141.354 li
490.969 143.055 li
491.269 143.375 li
492.849 145.395 li
492.989 145.625 li
494.099 147.414 li
495.009 149.255 li
495.099 149.435 li
495.859 151.454 li
496.429 153.475 li
496.819 155.494 li
497.029 157.435 li
497.039 157.515 li
497.089 159.534 li
497.029 160.725 li
496.979 161.564 li
496.729 163.585 li
496.329 165.604 li
495.789 167.625 li
495.119 169.645 li
495.009 169.914 li
494.299 171.664 li
493.349 173.685 li
492.989 174.364 li
492.249 175.704 li
491.019 177.725 li
490.969 177.805 li
489.639 179.744 li
488.949 180.664 li
488.099 181.765 li
486.929 183.175 li
486.399 183.784 li
484.909 185.414 li
484.529 185.805 li
482.889 187.425 li
482.458 187.824 li
480.869 189.255 li
480.179 189.845 li
478.849 190.935 li
477.659 191.864 li
476.829 192.484 li
474.849 193.885 li
474.809 193.914 li
472.779 195.225 li
471.679 195.904 li
470.759 196.444 li
468.739 197.574 li
468.069 197.925 li
466.719 198.604 li
464.699 199.564 li
463.849 199.944 li
462.679 200.444 li
460.659 201.255 li
458.719 201.965 li
458.639 201.994 li
456.619 202.654 li
454.599 203.265 li
452.579 203.805 li
451.809 203.984 li
450.559 204.274 li
448.539 204.694 li
446.519 205.045 li
444.499 205.345 li
442.479 205.585 li
440.458 205.765 li
438.439 205.885 li
436.419 205.954 li
434.399 205.965 li
432.379 205.914 li
430.359 205.814 li
428.339 205.654 li
426.319 205.435 li
424.299 205.164 li
422.279 204.835 li
420.259 204.444 li
418.239 203.994 li
418.208 203.984 li
416.219 203.475 li
414.199 202.895 li
412.179 202.265 li
411.319 201.965 li
410.159 201.555 li
408.139 200.774 li
406.139 199.944 li
406.119 199.935 li
404.099 199.015 li
402.08 198.024 li
401.889 197.925 li
400.059 196.944 li
398.229 195.904 li
398.039 195.795 li
396.019 194.545 li
395.009 193.885 li
394 193.204 li
392.109 191.864 li
391.979 191.765 li
389.959 190.215 li
389.499 189.845 li
387.939 188.534 li
387.119 187.824 li
385.919 186.734 li
384.919 185.805 li
383.899 184.795 li
382.899 183.784 li
381.879 182.685 li
381.039 181.765 li
379.859 180.395 li
379.309 179.744 li
377.839 177.885 li
377.709 177.725 li
376.229 175.704 li
375.819 175.104 li
374.859 173.685 li
373.799 171.994 li
373.589 171.664 li
372.429 169.645 li
371.769 168.425 li
371.359 167.625 li
370.379 165.604 li
369.749 164.194 li
369.489 163.585 li
368.689 161.564 li
367.979 159.534 li
367.729 158.755 li
367.359 157.515 li
366.829 155.494 li
366.379 153.475 li
366.029 151.454 li
365.769 149.435 li
365.709 148.645 li
cp
.170718 .129671 .134585 3.0518e-05 cmyk
f
365.709 148.645 mo
365.619 147.414 li
365.589 145.395 li
365.669 143.375 li
365.709 143.005 li
365.909 141.354 li
366.329 139.335 li
366.979 137.314 li
367.729 135.744 li
367.969 135.295 li
369.439 133.274 li
369.749 132.965 li
371.709 131.254 li
371.769 131.215 li
373.799 130.064 li
375.579 129.234 li
375.819 129.154 li
377.839 128.545 li
379.859 128.055 li
381.879 127.674 li
383.899 127.385 li
385.509 127.215 li
385.919 127.185 li
387.939 127.055 li
389.959 126.975 li
391.979 126.924 li
394 126.914 li
396.019 126.924 li
398.039 126.955 li
400.059 126.994 li
402.08 127.045 li
404.099 127.115 li
406.119 127.185 li
406.919 127.215 li
408.139 127.274 li
410.159 127.375 li
412.179 127.475 li
414.199 127.574 li
416.219 127.685 li
418.239 127.785 li
420.259 127.895 li
422.279 128.004 li
424.299 128.115 li
426.319 128.225 li
428.339 128.334 li
430.359 128.455 li
432.379 128.574 li
434.399 128.694 li
436.419 128.814 li
438.439 128.935 li
440.458 129.074 li
442.479 129.205 li
442.929 129.234 li
444.499 129.375 li
446.519 129.555 li
448.539 129.754 li
450.559 129.955 li
452.579 130.164 li
454.599 130.385 li
456.619 130.615 li
458.639 130.854 li
460.659 131.115 li
461.739 131.254 li
462.679 131.414 li
464.699 131.774 li
466.719 132.154 li
468.739 132.555 li
470.759 132.975 li
472.169 133.274 li
472.779 133.454 li
474.809 134.045 li
476.829 134.664 li
478.819 135.295 li
478.849 135.305 li
480.869 136.175 li
482.889 137.074 li
483.409 137.314 li
484.909 138.204 li
486.759 139.335 li
486.929 139.465 li
488.949 141.074 li
489.289 141.354 li
490.969 143.055 li
491.269 143.375 li
492.849 145.395 li
492.989 145.625 li
494.099 147.414 li
495.009 149.255 li
495.099 149.435 li
495.859 151.454 li
496.429 153.475 li
496.819 155.494 li
497.029 157.435 li
497.039 157.515 li
497.089 159.534 li
497.029 160.725 li
496.979 161.564 li
496.729 163.585 li
496.329 165.604 li
495.789 167.625 li
495.119 169.645 li
495.009 169.914 li
494.299 171.664 li
493.349 173.685 li
492.989 174.364 li
492.249 175.704 li
491.019 177.725 li
490.969 177.805 li
489.639 179.744 li
488.949 180.664 li
488.099 181.765 li
486.929 183.175 li
486.399 183.784 li
484.909 185.414 li
484.529 185.805 li
482.889 187.425 li
482.458 187.824 li
480.869 189.255 li
480.179 189.845 li
478.849 190.935 li
477.659 191.864 li
476.829 192.484 li
474.849 193.885 li
474.809 193.914 li
472.779 195.225 li
471.679 195.904 li
470.759 196.444 li
468.739 197.574 li
468.069 197.925 li
466.719 198.604 li
464.699 199.564 li
463.849 199.944 li
462.679 200.444 li
460.659 201.255 li
458.719 201.965 li
458.639 201.994 li
456.619 202.654 li
454.599 203.265 li
452.579 203.805 li
451.809 203.984 li
450.559 204.274 li
448.539 204.694 li
446.519 205.045 li
444.499 205.345 li
442.479 205.585 li
440.458 205.765 li
438.439 205.885 li
436.419 205.954 li
434.399 205.965 li
432.379 205.914 li
430.359 205.814 li
428.339 205.654 li
426.319 205.435 li
424.299 205.164 li
422.279 204.835 li
420.259 204.444 li
418.239 203.994 li
418.208 203.984 li
416.219 203.475 li
414.199 202.895 li
412.179 202.265 li
411.319 201.965 li
410.159 201.555 li
408.139 200.774 li
406.139 199.944 li
406.119 199.935 li
404.099 199.015 li
402.08 198.024 li
401.889 197.925 li
400.059 196.944 li
398.229 195.904 li
398.039 195.795 li
396.019 194.545 li
395.009 193.885 li
394 193.204 li
392.109 191.864 li
391.979 191.765 li
389.959 190.215 li
389.499 189.845 li
387.939 188.534 li
387.119 187.824 li
385.919 186.734 li
384.919 185.805 li
383.899 184.795 li
382.899 183.784 li
381.879 182.685 li
381.039 181.765 li
379.859 180.395 li
379.309 179.744 li
377.839 177.885 li
377.709 177.725 li
376.229 175.704 li
375.819 175.104 li
374.859 173.685 li
373.799 171.994 li
373.589 171.664 li
372.429 169.645 li
371.769 168.425 li
371.359 167.625 li
370.379 165.604 li
369.749 164.194 li
369.489 163.585 li
368.689 161.564 li
367.979 159.534 li
367.729 158.755 li
367.359 157.515 li
366.829 155.494 li
366.379 153.475 li
366.029 151.454 li
365.769 149.435 li
365.709 148.645 li
cp
.75021 .679683 .670222 .90164 cmyk
@
373.799 153.835 mo
373.719 153.475 li
373.389 151.454 li
373.169 149.435 li
373.079 147.414 li
373.139 145.395 li
373.349 143.375 li
373.759 141.354 li
373.799 141.265 li
374.439 139.335 li
375.469 137.314 li
375.819 136.845 li
377.039 135.295 li
377.839 134.595 li
379.509 133.274 li
379.859 133.085 li
381.879 132.084 li
383.889 131.254 li
383.899 131.254 li
385.919 130.725 li
387.939 130.295 li
389.959 129.944 li
391.979 129.674 li
394 129.465 li
396.019 129.314 li
397.33 129.234 li
398.039 129.205 li
400.059 129.145 li
402.08 129.115 li
404.099 129.095 li
406.119 129.104 li
408.139 129.125 li
410.159 129.154 li
412.179 129.194 li
413.969 129.234 li
414.199 129.244 li
416.219 129.314 li
418.239 129.395 li
420.259 129.475 li
422.279 129.574 li
424.299 129.674 li
426.319 129.774 li
428.339 129.885 li
430.359 130.004 li
432.379 130.125 li
434.399 130.254 li
436.419 130.395 li
438.439 130.545 li
440.458 130.694 li
442.479 130.854 li
444.499 131.024 li
446.519 131.205 li
447.079 131.254 li
448.539 131.435 li
450.559 131.694 li
452.579 131.965 li
454.599 132.244 li
456.619 132.545 li
458.639 132.864 li
460.659 133.204 li
461.089 133.274 li
462.679 133.635 li
464.699 134.125 li
466.719 134.625 li
468.739 135.154 li
469.249 135.295 li
470.759 135.835 li
472.779 136.595 li
474.649 137.314 li
474.809 137.395 li
476.829 138.454 li
478.469 139.335 li
478.849 139.604 li
480.869 141.034 li
481.299 141.354 li
482.889 142.814 li
483.479 143.375 li
484.909 145.064 li
485.189 145.395 li
486.529 147.414 li
486.929 148.164 li
487.579 149.435 li
488.389 151.454 li
488.949 153.385 li
488.969 153.475 li
489.349 155.494 li
489.529 157.515 li
489.539 159.534 li
489.379 161.564 li
489.039 163.585 li
488.949 163.984 li
488.539 165.604 li
487.879 167.625 li
487.069 169.645 li
486.929 169.944 li
486.079 171.664 li
484.939 173.685 li
484.909 173.734 li
483.619 175.704 li
482.889 176.715 li
482.119 177.725 li
480.869 179.244 li
480.439 179.744 li
478.849 181.454 li
478.549 181.765 li
476.829 183.414 li
476.419 183.784 li
474.809 185.175 li
474.029 185.805 li
472.779 186.765 li
471.339 187.824 li
470.759 188.225 li
468.739 189.545 li
468.269 189.845 li
466.719 190.755 li
464.719 191.864 li
464.699 191.864 li
462.679 192.875 li
460.659 193.795 li
460.458 193.885 li
458.639 194.625 li
456.619 195.385 li
455.099 195.904 li
454.599 196.064 li
452.579 196.664 li
450.559 197.204 li
448.539 197.664 li
447.259 197.925 li
446.519 198.064 li
444.499 198.395 li
442.479 198.664 li
440.458 198.864 li
438.439 199.005 li
436.419 199.085 li
434.399 199.104 li
432.379 199.055 li
430.359 198.944 li
428.339 198.774 li
426.319 198.545 li
424.299 198.244 li
422.499 197.925 li
422.279 197.885 li
420.259 197.454 li
418.239 196.954 li
416.219 196.395 li
414.639 195.904 li
414.199 195.765 li
412.179 195.055 li
410.159 194.274 li
409.219 193.885 li
408.139 193.414 li
406.119 192.475 li
404.899 191.864 li
404.099 191.454 li
402.08 190.335 li
401.239 189.845 li
400.059 189.125 li
398.048 187.824 li
398.039 187.814 li
396.019 186.385 li
395.239 185.805 li
394 184.835 li
392.708 183.784 li
391.979 183.154 li
390.419 181.765 li
389.959 181.324 li
388.339 179.744 li
387.939 179.324 li
386.439 177.725 li
385.919 177.135 li
384.699 175.704 li
383.899 174.704 li
383.109 173.685 li
381.879 171.984 li
381.649 171.664 li
380.319 169.645 li
379.859 168.885 li
379.109 167.625 li
378.009 165.604 li
377.839 165.244 li
377.029 163.585 li
376.149 161.564 li
375.819 160.685 li
375.379 159.534 li
374.719 157.515 li
374.169 155.494 li
373.799 153.835 li
cp
.12723 .0972 .102388 3.0518e-05 cmyk
f
373.799 153.835 mo
373.719 153.475 li
373.389 151.454 li
373.169 149.435 li
373.079 147.414 li
373.139 145.395 li
373.349 143.375 li
373.759 141.354 li
373.799 141.265 li
374.439 139.335 li
375.469 137.314 li
375.819 136.845 li
377.039 135.295 li
377.839 134.595 li
379.509 133.274 li
379.859 133.085 li
381.879 132.084 li
383.889 131.254 li
383.899 131.254 li
385.919 130.725 li
387.939 130.295 li
389.959 129.944 li
391.979 129.674 li
394 129.465 li
396.019 129.314 li
397.33 129.234 li
398.039 129.205 li
400.059 129.145 li
402.08 129.115 li
404.099 129.095 li
406.119 129.104 li
408.139 129.125 li
410.159 129.154 li
412.179 129.194 li
413.969 129.234 li
414.199 129.244 li
416.219 129.314 li
418.239 129.395 li
420.259 129.475 li
422.279 129.574 li
424.299 129.674 li
426.319 129.774 li
428.339 129.885 li
430.359 130.004 li
432.379 130.125 li
434.399 130.254 li
436.419 130.395 li
438.439 130.545 li
440.458 130.694 li
442.479 130.854 li
444.499 131.024 li
446.519 131.205 li
447.079 131.254 li
448.539 131.435 li
450.559 131.694 li
452.579 131.965 li
454.599 132.244 li
456.619 132.545 li
458.639 132.864 li
460.659 133.204 li
461.089 133.274 li
462.679 133.635 li
464.699 134.125 li
466.719 134.625 li
468.739 135.154 li
469.249 135.295 li
470.759 135.835 li
472.779 136.595 li
474.649 137.314 li
474.809 137.395 li
476.829 138.454 li
478.469 139.335 li
478.849 139.604 li
480.869 141.034 li
481.299 141.354 li
482.889 142.814 li
483.479 143.375 li
484.909 145.064 li
485.189 145.395 li
486.529 147.414 li
486.929 148.164 li
487.579 149.435 li
488.389 151.454 li
488.949 153.385 li
488.969 153.475 li
489.349 155.494 li
489.529 157.515 li
489.539 159.534 li
489.379 161.564 li
489.039 163.585 li
488.949 163.984 li
488.539 165.604 li
487.879 167.625 li
487.069 169.645 li
486.929 169.944 li
486.079 171.664 li
484.939 173.685 li
484.909 173.734 li
483.619 175.704 li
482.889 176.715 li
482.119 177.725 li
480.869 179.244 li
480.439 179.744 li
478.849 181.454 li
478.549 181.765 li
476.829 183.414 li
476.419 183.784 li
474.809 185.175 li
474.029 185.805 li
472.779 186.765 li
471.339 187.824 li
470.759 188.225 li
468.739 189.545 li
468.269 189.845 li
466.719 190.755 li
464.719 191.864 li
464.699 191.864 li
462.679 192.875 li
460.659 193.795 li
460.458 193.885 li
458.639 194.625 li
456.619 195.385 li
455.099 195.904 li
454.599 196.064 li
452.579 196.664 li
450.559 197.204 li
448.539 197.664 li
447.259 197.925 li
446.519 198.064 li
444.499 198.395 li
442.479 198.664 li
440.458 198.864 li
438.439 199.005 li
436.419 199.085 li
434.399 199.104 li
432.379 199.055 li
430.359 198.944 li
428.339 198.774 li
426.319 198.545 li
424.299 198.244 li
422.499 197.925 li
422.279 197.885 li
420.259 197.454 li
418.239 196.954 li
416.219 196.395 li
414.639 195.904 li
414.199 195.765 li
412.179 195.055 li
410.159 194.274 li
409.219 193.885 li
408.139 193.414 li
406.119 192.475 li
404.899 191.864 li
404.099 191.454 li
402.08 190.335 li
401.239 189.845 li
400.059 189.125 li
398.048 187.824 li
398.039 187.814 li
396.019 186.385 li
395.239 185.805 li
394 184.835 li
392.708 183.784 li
391.979 183.154 li
390.419 181.765 li
389.959 181.324 li
388.339 179.744 li
387.939 179.324 li
386.439 177.725 li
385.919 177.135 li
384.699 175.704 li
383.899 174.704 li
383.109 173.685 li
381.879 171.984 li
381.649 171.664 li
380.319 169.645 li
379.859 168.885 li
379.109 167.625 li
378.009 165.604 li
377.839 165.244 li
377.029 163.585 li
376.149 161.564 li
375.819 160.685 li
375.379 159.534 li
374.719 157.515 li
374.169 155.494 li
373.799 153.835 li
cp
.75021 .679683 .670222 .90164 cmyk
@
381.879 154.114 mo
381.739 153.475 li
381.429 151.454 li
381.269 149.435 li
381.269 147.414 li
381.459 145.395 li
381.859 143.375 li
381.879 143.345 li
382.569 141.354 li
383.659 139.335 li
383.899 139.024 li
385.349 137.314 li
385.919 136.854 li
387.939 135.385 li
388.069 135.295 li
389.959 134.435 li
391.979 133.654 li
393.109 133.274 li
394 133.064 li
396.019 132.654 li
398.039 132.324 li
400.059 132.055 li
402.08 131.834 li
404.099 131.674 li
406.119 131.545 li
408.139 131.455 li
410.159 131.395 li
412.179 131.365 li
414.199 131.354 li
416.219 131.365 li
418.239 131.404 li
420.259 131.444 li
422.279 131.515 li
424.299 131.584 li
426.319 131.685 li
428.339 131.785 li
430.359 131.904 li
432.379 132.035 li
434.399 132.175 li
436.419 132.324 li
438.439 132.494 li
440.458 132.675 li
442.479 132.875 li
444.499 133.085 li
446.279 133.274 li
446.519 133.314 li
448.539 133.625 li
450.559 133.954 li
452.579 134.305 li
454.599 134.685 li
456.619 135.085 li
457.669 135.295 li
458.639 135.564 li
460.659 136.135 li
462.679 136.744 li
464.489 137.314 li
464.699 137.404 li
466.719 138.274 li
468.739 139.185 li
469.069 139.335 li
470.759 140.354 li
472.369 141.354 li
472.779 141.685 li
474.809 143.335 li
474.859 143.375 li
476.759 145.395 li
476.829 145.484 li
478.239 147.414 li
478.849 148.484 li
479.379 149.435 li
480.229 151.454 li
480.839 153.475 li
480.869 153.635 li
481.199 155.494 li
481.349 157.515 li
481.299 159.534 li
481.049 161.564 li
480.869 162.385 li
480.599 163.585 li
479.949 165.604 li
479.119 167.625 li
478.849 168.175 li
478.079 169.645 li
476.859 171.664 li
476.829 171.704 li
475.399 173.685 li
474.809 174.414 li
473.708 175.704 li
472.779 176.694 li
471.779 177.725 li
470.759 178.664 li
469.549 179.744 li
468.739 180.404 li
466.979 181.765 li
466.719 181.944 li
464.699 183.324 li
463.969 183.784 li
462.679 184.555 li
460.659 185.675 li
460.409 185.805 li
458.639 186.664 li
456.619 187.564 li
455.979 187.824 li
454.599 188.354 li
452.579 189.064 li
450.559 189.694 li
450.009 189.845 li
448.539 190.225 li
446.519 190.685 li
444.499 191.074 li
442.479 191.385 li
440.458 191.625 li
438.439 191.784 li
436.859 191.864 li
436.419 191.885 li
434.399 191.904 li
432.439 191.864 li
432.379 191.864 li
430.359 191.744 li
428.339 191.555 li
426.319 191.295 li
424.299 190.965 li
422.279 190.564 li
420.259 190.095 li
419.339 189.845 li
418.239 189.534 li
416.219 188.904 li
414.199 188.194 li
413.259 187.824 li
412.179 187.395 li
410.159 186.494 li
408.708 185.805 li
408.139 185.515 li
406.119 184.435 li
404.999 183.784 li
404.099 183.244 li
402.08 181.935 li
401.819 181.765 li
400.059 180.494 li
399.069 179.744 li
398.039 178.914 li
396.628 177.725 li
396.019 177.175 li
394.439 175.704 li
394 175.255 li
392.489 173.685 li
391.979 173.114 li
390.729 171.664 li
389.959 170.694 li
389.149 169.645 li
387.939 167.925 li
387.729 167.625 li
386.459 165.604 li
385.919 164.635 li
385.339 163.585 li
384.349 161.564 li
383.899 160.505 li
383.499 159.534 li
382.779 157.515 li
382.189 155.494 li
381.879 154.114 li
cp
.0925612 .0673533 .0720531 3.0518e-05 cmyk
f
381.879 154.114 mo
381.739 153.475 li
381.429 151.454 li
381.269 149.435 li
381.269 147.414 li
381.459 145.395 li
381.859 143.375 li
381.879 143.345 li
382.569 141.354 li
383.659 139.335 li
383.899 139.024 li
385.349 137.314 li
385.919 136.854 li
387.939 135.385 li
388.069 135.295 li
389.959 134.435 li
391.979 133.654 li
393.109 133.274 li
394 133.064 li
396.019 132.654 li
398.039 132.324 li
400.059 132.055 li
402.08 131.834 li
404.099 131.674 li
406.119 131.545 li
408.139 131.455 li
410.159 131.395 li
412.179 131.365 li
414.199 131.354 li
416.219 131.365 li
418.239 131.404 li
420.259 131.444 li
422.279 131.515 li
424.299 131.584 li
426.319 131.685 li
428.339 131.785 li
430.359 131.904 li
432.379 132.035 li
434.399 132.175 li
436.419 132.324 li
438.439 132.494 li
440.458 132.675 li
442.479 132.875 li
444.499 133.085 li
446.279 133.274 li
446.519 133.314 li
448.539 133.625 li
450.559 133.954 li
452.579 134.305 li
454.599 134.685 li
456.619 135.085 li
457.669 135.295 li
458.639 135.564 li
460.659 136.135 li
462.679 136.744 li
464.489 137.314 li
464.699 137.404 li
466.719 138.274 li
468.739 139.185 li
469.069 139.335 li
470.759 140.354 li
472.369 141.354 li
472.779 141.685 li
474.809 143.335 li
474.859 143.375 li
476.759 145.395 li
476.829 145.484 li
478.239 147.414 li
478.849 148.484 li
479.379 149.435 li
480.229 151.454 li
480.839 153.475 li
480.869 153.635 li
481.199 155.494 li
481.349 157.515 li
481.299 159.534 li
481.049 161.564 li
480.869 162.385 li
480.599 163.585 li
479.949 165.604 li
479.119 167.625 li
478.849 168.175 li
478.079 169.645 li
476.859 171.664 li
476.829 171.704 li
475.399 173.685 li
474.809 174.414 li
473.708 175.704 li
472.779 176.694 li
471.779 177.725 li
470.759 178.664 li
469.549 179.744 li
468.739 180.404 li
466.979 181.765 li
466.719 181.944 li
464.699 183.324 li
463.969 183.784 li
462.679 184.555 li
460.659 185.675 li
460.409 185.805 li
458.639 186.664 li
456.619 187.564 li
455.979 187.824 li
454.599 188.354 li
452.579 189.064 li
450.559 189.694 li
450.009 189.845 li
448.539 190.225 li
446.519 190.685 li
444.499 191.074 li
442.479 191.385 li
440.458 191.625 li
438.439 191.784 li
436.859 191.864 li
436.419 191.885 li
434.399 191.904 li
432.439 191.864 li
432.379 191.864 li
430.359 191.744 li
428.339 191.555 li
426.319 191.295 li
424.299 190.965 li
422.279 190.564 li
420.259 190.095 li
419.339 189.845 li
418.239 189.534 li
416.219 188.904 li
414.199 188.194 li
413.259 187.824 li
412.179 187.395 li
410.159 186.494 li
408.708 185.805 li
408.139 185.515 li
406.119 184.435 li
404.999 183.784 li
404.099 183.244 li
402.08 181.935 li
401.819 181.765 li
400.059 180.494 li
399.069 179.744 li
398.039 178.914 li
396.628 177.725 li
396.019 177.175 li
394.439 175.704 li
394 175.255 li
392.489 173.685 li
391.979 173.114 li
390.729 171.664 li
389.959 170.694 li
389.149 169.645 li
387.939 167.925 li
387.729 167.625 li
386.459 165.604 li
385.919 164.635 li
385.339 163.585 li
384.349 161.564 li
383.899 160.505 li
383.499 159.534 li
382.779 157.515 li
382.189 155.494 li
381.879 154.114 li
cp
.75021 .679683 .670222 .90164 cmyk
@
391.979 157.515 mo
391.349 155.494 li
390.889 153.475 li
390.619 151.454 li
390.539 149.435 li
390.699 147.414 li
391.119 145.395 li
391.859 143.375 li
391.979 143.175 li
393.089 141.354 li
394 140.364 li
395.029 139.335 li
396.019 138.654 li
398.039 137.435 li
398.269 137.314 li
400.059 136.645 li
402.08 135.994 li
404.099 135.454 li
404.819 135.295 li
406.119 135.085 li
408.139 134.814 li
410.159 134.595 li
412.179 134.435 li
414.199 134.305 li
416.219 134.215 li
418.239 134.164 li
420.259 134.145 li
422.279 134.154 li
424.299 134.185 li
426.319 134.255 li
428.339 134.335 li
430.359 134.444 li
432.379 134.574 li
434.399 134.725 li
436.419 134.895 li
438.439 135.085 li
440.399 135.295 li
440.458 135.305 li
442.479 135.614 li
444.499 135.965 li
446.519 136.324 li
448.539 136.725 li
450.559 137.154 li
451.289 137.314 li
452.579 137.704 li
454.599 138.345 li
456.619 139.015 li
457.539 139.335 li
458.639 139.845 li
460.659 140.814 li
461.729 141.354 li
462.679 141.975 li
464.699 143.345 li
464.759 143.375 li
466.719 145.135 li
467.009 145.395 li
468.719 147.414 li
468.739 147.454 li
469.999 149.435 li
470.759 151.074 li
470.939 151.454 li
471.569 153.475 li
471.919 155.494 li
472.019 157.515 li
471.869 159.534 li
471.469 161.564 li
470.839 163.585 li
470.759 163.755 li
469.939 165.604 li
468.809 167.625 li
468.739 167.725 li
467.379 169.645 li
466.719 170.444 li
465.659 171.664 li
464.699 172.635 li
463.599 173.685 li
462.679 174.465 li
461.119 175.704 li
460.659 176.034 li
458.639 177.385 li
458.099 177.725 li
456.619 178.564 li
454.599 179.604 li
454.319 179.744 li
452.579 180.505 li
450.559 181.295 li
449.179 181.765 li
448.539 181.965 li
446.519 182.534 li
444.499 183.015 li
442.479 183.395 li
440.458 183.694 li
439.659 183.784 li
438.439 183.904 li
436.419 184.024 li
434.399 184.064 li
432.379 184.024 li
430.359 183.904 li
429.159 183.784 li
428.339 183.694 li
426.319 183.404 li
424.299 183.024 li
422.279 182.555 li
420.259 182.005 li
419.469 181.765 li
418.239 181.354 li
416.219 180.604 li
414.199 179.774 li
414.139 179.744 li
412.179 178.805 li
410.159 177.734 li
410.139 177.725 li
408.139 176.515 li
406.899 175.704 li
406.119 175.164 li
404.129 173.685 li
404.099 173.654 li
402.08 171.944 li
401.769 171.664 li
400.059 170.005 li
399.699 169.645 li
398.039 167.784 li
397.899 167.625 li
396.33 165.604 li
396.019 165.154 li
394.968 163.585 li
394 161.935 li
393.789 161.564 li
392.798 159.534 li
391.979 157.515 li
cp
.0570077 .0408942 .0411994 3.0518e-05 cmyk
f
391.979 157.515 mo
391.349 155.494 li
390.889 153.475 li
390.619 151.454 li
390.539 149.435 li
390.699 147.414 li
391.119 145.395 li
391.859 143.375 li
391.979 143.175 li
393.089 141.354 li
394 140.364 li
395.029 139.335 li
396.019 138.654 li
398.039 137.435 li
398.269 137.314 li
400.059 136.645 li
402.08 135.994 li
404.099 135.454 li
404.819 135.295 li
406.119 135.085 li
408.139 134.814 li
410.159 134.595 li
412.179 134.435 li
414.199 134.305 li
416.219 134.215 li
418.239 134.164 li
420.259 134.145 li
422.279 134.154 li
424.299 134.185 li
426.319 134.255 li
428.339 134.335 li
430.359 134.444 li
432.379 134.574 li
434.399 134.725 li
436.419 134.895 li
438.439 135.085 li
440.399 135.295 li
440.458 135.305 li
442.479 135.614 li
444.499 135.965 li
446.519 136.324 li
448.539 136.725 li
450.559 137.154 li
451.289 137.314 li
452.579 137.704 li
454.599 138.345 li
456.619 139.015 li
457.539 139.335 li
458.639 139.845 li
460.659 140.814 li
461.729 141.354 li
462.679 141.975 li
464.699 143.345 li
464.759 143.375 li
466.719 145.135 li
467.009 145.395 li
468.719 147.414 li
468.739 147.454 li
469.999 149.435 li
470.759 151.074 li
470.939 151.454 li
471.569 153.475 li
471.919 155.494 li
472.019 157.515 li
471.869 159.534 li
471.469 161.564 li
470.839 163.585 li
470.759 163.755 li
469.939 165.604 li
468.809 167.625 li
468.739 167.725 li
467.379 169.645 li
466.719 170.444 li
465.659 171.664 li
464.699 172.635 li
463.599 173.685 li
462.679 174.465 li
461.119 175.704 li
460.659 176.034 li
458.639 177.385 li
458.099 177.725 li
456.619 178.564 li
454.599 179.604 li
454.319 179.744 li
452.579 180.505 li
450.559 181.295 li
449.179 181.765 li
448.539 181.965 li
446.519 182.534 li
444.499 183.015 li
442.479 183.395 li
440.458 183.694 li
439.659 183.784 li
438.439 183.904 li
436.419 184.024 li
434.399 184.064 li
432.379 184.024 li
430.359 183.904 li
429.159 183.784 li
428.339 183.694 li
426.319 183.404 li
424.299 183.024 li
422.279 182.555 li
420.259 182.005 li
419.469 181.765 li
418.239 181.354 li
416.219 180.604 li
414.199 179.774 li
414.139 179.744 li
412.179 178.805 li
410.159 177.734 li
410.139 177.725 li
408.139 176.515 li
406.899 175.704 li
406.119 175.164 li
404.129 173.685 li
404.099 173.654 li
402.08 171.944 li
401.769 171.664 li
400.059 170.005 li
399.699 169.645 li
398.039 167.784 li
397.899 167.625 li
396.33 165.604 li
396.019 165.154 li
394.968 163.585 li
394 161.935 li
393.789 161.564 li
392.798 159.534 li
391.979 157.515 li
cp
.75021 .679683 .670222 .90164 cmyk
@
402.08 151.475 mo
402.08 151.454 li
402.08 151.435 li
402.199 149.435 li
402.689 147.414 li
403.649 145.395 li
404.099 144.795 li
405.279 143.375 li
406.119 142.704 li
408.049 141.354 li
408.139 141.314 li
410.159 140.454 li
412.179 139.744 li
413.579 139.335 li
414.199 139.215 li
416.219 138.864 li
418.239 138.604 li
420.259 138.425 li
422.279 138.295 li
424.299 138.244 li
426.319 138.234 li
428.339 138.284 li
430.359 138.395 li
432.379 138.545 li
434.399 138.744 li
436.419 138.984 li
438.439 139.265 li
438.859 139.335 li
440.458 139.685 li
442.479 140.175 li
444.499 140.715 li
446.519 141.314 li
446.669 141.354 li
448.539 142.145 li
450.559 143.045 li
451.239 143.375 li
452.579 144.204 li
454.389 145.395 li
454.599 145.585 li
456.619 147.404 li
456.639 147.414 li
458.239 149.435 li
458.639 150.145 li
459.359 151.454 li
460.069 153.475 li
460.409 155.494 li
460.389 157.515 li
460.019 159.534 li
459.309 161.564 li
458.639 162.845 li
458.229 163.585 li
456.749 165.604 li
456.619 165.744 li
454.769 167.625 li
454.599 167.765 li
452.579 169.345 li
452.149 169.645 li
450.559 170.614 li
448.609 171.664 li
448.539 171.694 li
446.519 172.545 li
444.499 173.255 li
443.039 173.685 li
442.479 173.824 li
440.458 174.255 li
438.439 174.564 li
436.419 174.755 li
434.399 174.835 li
432.379 174.814 li
430.359 174.675 li
428.339 174.435 li
426.319 174.085 li
424.549 173.685 li
424.299 173.625 li
422.279 173.015 li
420.259 172.295 li
418.708 171.664 li
418.239 171.454 li
416.219 170.435 li
414.809 169.645 li
414.199 169.265 li
412.179 167.895 li
411.809 167.625 li
410.159 166.265 li
409.409 165.604 li
408.139 164.324 li
407.439 163.585 li
406.119 161.944 li
405.819 161.564 li
404.529 159.534 li
404.099 158.715 li
403.509 157.515 li
402.759 155.494 li
402.279 153.475 li
402.08 151.475 li
cp
.0240482 .0148928 .0148928 3.0518e-05 cmyk
f
402.08 151.475 mo
402.08 151.454 li
402.08 151.435 li
402.199 149.435 li
402.689 147.414 li
403.649 145.395 li
404.099 144.795 li
405.279 143.375 li
406.119 142.704 li
408.049 141.354 li
408.139 141.314 li
410.159 140.454 li
412.179 139.744 li
413.579 139.335 li
414.199 139.215 li
416.219 138.864 li
418.239 138.604 li
420.259 138.425 li
422.279 138.295 li
424.299 138.244 li
426.319 138.234 li
428.339 138.284 li
430.359 138.395 li
432.379 138.545 li
434.399 138.744 li
436.419 138.984 li
438.439 139.265 li
438.859 139.335 li
440.458 139.685 li
442.479 140.175 li
444.499 140.715 li
446.519 141.314 li
446.669 141.354 li
448.539 142.145 li
450.559 143.045 li
451.239 143.375 li
452.579 144.204 li
454.389 145.395 li
454.599 145.585 li
456.619 147.404 li
456.639 147.414 li
458.239 149.435 li
458.639 150.145 li
459.359 151.454 li
460.069 153.475 li
460.409 155.494 li
460.389 157.515 li
460.019 159.534 li
459.309 161.564 li
458.639 162.845 li
458.229 163.585 li
456.749 165.604 li
456.619 165.744 li
454.769 167.625 li
454.599 167.765 li
452.579 169.345 li
452.149 169.645 li
450.559 170.614 li
448.609 171.664 li
448.539 171.694 li
446.519 172.545 li
444.499 173.255 li
443.039 173.685 li
442.479 173.824 li
440.458 174.255 li
438.439 174.564 li
436.419 174.755 li
434.399 174.835 li
432.379 174.814 li
430.359 174.675 li
428.339 174.435 li
426.319 174.085 li
424.549 173.685 li
424.299 173.625 li
422.279 173.015 li
420.259 172.295 li
418.708 171.664 li
418.239 171.454 li
416.219 170.435 li
414.809 169.645 li
414.199 169.265 li
412.179 167.895 li
411.809 167.625 li
410.159 166.265 li
409.409 165.604 li
408.139 164.324 li
407.439 163.585 li
406.119 161.944 li
405.819 161.564 li
404.529 159.534 li
404.099 158.715 li
403.509 157.515 li
402.759 155.494 li
402.279 153.475 li
402.08 151.475 li
cp
.75021 .679683 .670222 .90164 cmyk
@
424.299 156.885 mo
423.159 155.494 li
422.479 153.475 li
422.989 151.454 li
424.299 150.135 li
425.359 149.435 li
426.319 149.095 li
428.339 148.704 li
430.359 148.614 li
432.379 148.805 li
434.399 149.234 li
435.009 149.435 li
436.419 150.154 li
438.429 151.454 li
438.439 151.475 li
439.739 153.475 li
439.909 155.494 li
438.849 157.515 li
438.439 157.875 li
436.419 159.114 li
435.219 159.534 li
434.399 159.734 li
432.379 159.904 li
430.359 159.774 li
429.219 159.534 li
428.339 159.295 li
426.319 158.375 li
424.949 157.515 li
424.299 156.885 li
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
424.299 156.885 mo
423.159 155.494 li
422.479 153.475 li
422.989 151.454 li
424.299 150.135 li
425.359 149.435 li
426.319 149.095 li
428.339 148.704 li
430.359 148.614 li
432.379 148.805 li
434.399 149.234 li
435.009 149.435 li
436.419 150.154 li
438.429 151.454 li
438.439 151.475 li
439.739 153.475 li
439.909 155.494 li
438.849 157.515 li
438.439 157.875 li
436.419 159.114 li
435.219 159.534 li
434.399 159.734 li
432.379 159.904 li
430.359 159.774 li
429.219 159.534 li
428.339 159.295 li
426.319 158.375 li
424.949 157.515 li
424.299 156.885 li
cp
.75021 .679683 .670222 .90164 cmyk
@
483.65 48.8994 mo
483.445 48.7119 483.13 48.7266 482.945 48.9316 cv
478.796 53.6445 li
474.365 59.1816 li
472.039 62.3623 li
469.644 65.8848 li
464.705 74.0713 li
462.191 78.4746 li
461.566 79.5068 li
460.333 81.3672 li
459.728 82.1641 li
459.13 82.8613 li
458.542 83.4551 li
457.964 83.9512 li
457.39 84.3584 li
456.82 84.6875 li
456.25 84.9512 li
455.677 85.1592 li
454.527 85.4473 li
453.359 85.6133 li
449.804 85.7568 li
434.818 85.6182 li
416.39 86.0293 li
404.181 86.8975 li
394.309 88.0684 li
388.748 88.9502 li
383.978 89.8584 li
380 90.7441 li
376.645 91.6035 li
371.452 93.2061 li
369.299 94.0078 li
367.506 94.7725 li
364.728 96.2275 li
362.736 97.6455 li
361.873 98.4482 li
361.047 99.4072 li
360.134 100.832 li
359.161 103.236 li
358.41 107.23 li
358.264 110.536 li
358.394 113.383 li
358.659 115.66 li
359.126 118.146 li
359.444 119.418 li
359.82 120.687 li
360.25 121.927 li
360.734 123.128 li
361.264 124.278 li
361.836 125.374 li
362.445 126.406 li
363.084 127.382 li
363.737 128.284 li
365.103 129.936 li
366.526 131.406 li
368.729 133.332 li
369.473 133.91 li
371.729 135.5 li
374.71 137.313 li
377.67 138.881 li
380.55 140.244 li
386.064 142.529 li
391.173 144.373 li
395.827 145.879 li
403.812 148.154 li
414.523 150.711 li
421.164 152.051 li
426.462 152.986 li
426.962 153.059 li
425.804 155.143 li
425.804 155.143 427.255 154.322 428.416 153.918 cv
429.576 153.516 430.75 153.379 430.75 153.379 cv
430.75 153.379 429.765 152.736 428.775 151.867 cv
427.787 150.996 426.863 149.85 426.863 149.85 cv
426.863 149.85 427.078 152.078 427.058 152.076 cv
414.732 149.734 li
410.009 148.668 li
407.205 147.99 li
400.312 146.158 li
398.271 145.568 li
391.492 143.426 li
389.011 142.557 li
383.738 140.529 li
382.359 139.947 li
378.112 137.982 li
376.661 137.238 li
372.272 134.66 li
370.805 133.652 li
370.077 133.113 li
367.924 131.34 li
367.22 130.686 li
365.847 129.269 li
364.534 127.681 li
363.294 125.879 li
362.71 124.889 li
362.162 123.838 li
361.652 122.732 li
361.187 121.576 li
360.771 120.381 li
360.409 119.155 li
360.101 117.923 li
359.848 116.701 li
359.498 114.371 li
359.319 112.298 li
359.264 110.53 li
359.288 109.063 li
359.458 106.851 li
359.875 104.438 li
360.695 101.96 li
361.736 100.154 li
361.823 100.036 li
362.492 99.248 li
362.572 99.1631 li
363.274 98.5 li
363.366 98.4229 li
364.129 97.8252 li
364.239 97.7451 li
364.719 97.416 li
366.458 96.3975 li
367.156 96.042 li
370.671 94.5498 li
374.113 93.3809 li
378.498 92.1475 li
382.123 91.2803 li
386.454 90.3867 li
391.582 89.4912 li
397.519 88.6426 li
402.511 88.0684 li
409.998 87.415 li
418.681 86.9268 li
434.818 86.6182 li
449.207 86.7568 li
451.623 86.7275 li
454.083 86.5313 li
455.347 86.293 li
456.628 85.876 li
457.277 85.5762 li
457.927 85.2012 li
458.578 84.7402 li
459.222 84.1875 li
459.865 83.54 li
460.505 82.793 li
461.144 81.9541 li
462.416 80.0352 li
464.316 76.79 li
470.486 66.4248 li
472.859 62.9355 li
474.019 61.3213 li
477.394 56.918 li
481.654 51.8623 li
483.683 49.6055 li
483.869 49.4014 483.855 49.085 483.65 48.8994 cv
cp
f
.5 lw
0 lc
0 lj
4 ml
483.65 48.8994 mo
483.445 48.7119 483.13 48.7266 482.945 48.9316 cv
478.796 53.6445 li
474.365 59.1816 li
472.039 62.3623 li
469.644 65.8848 li
464.705 74.0713 li
462.191 78.4746 li
461.566 79.5068 li
460.333 81.3672 li
459.728 82.1641 li
459.13 82.8613 li
458.542 83.4551 li
457.964 83.9512 li
457.39 84.3584 li
456.82 84.6875 li
456.25 84.9512 li
455.677 85.1592 li
454.527 85.4473 li
453.359 85.6133 li
449.804 85.7568 li
434.818 85.6182 li
416.39 86.0293 li
404.181 86.8975 li
394.309 88.0684 li
388.748 88.9502 li
383.978 89.8584 li
380 90.7441 li
376.645 91.6035 li
371.452 93.2061 li
369.299 94.0078 li
367.506 94.7725 li
364.728 96.2275 li
362.736 97.6455 li
361.873 98.4482 li
361.047 99.4072 li
360.134 100.832 li
359.161 103.236 li
358.41 107.23 li
358.264 110.536 li
358.394 113.383 li
358.659 115.66 li
359.126 118.146 li
359.444 119.418 li
359.82 120.687 li
360.25 121.927 li
360.734 123.128 li
361.264 124.278 li
361.836 125.374 li
362.445 126.406 li
363.084 127.382 li
363.737 128.284 li
365.103 129.936 li
366.526 131.406 li
368.729 133.332 li
369.473 133.91 li
371.729 135.5 li
374.71 137.313 li
377.67 138.881 li
380.55 140.244 li
386.064 142.529 li
391.173 144.373 li
395.827 145.879 li
403.812 148.154 li
414.523 150.711 li
421.164 152.051 li
426.462 152.986 li
426.962 153.059 li
425.804 155.143 li
425.804 155.143 427.255 154.322 428.416 153.918 cv
429.576 153.516 430.75 153.379 430.75 153.379 cv
430.75 153.379 429.765 152.736 428.775 151.867 cv
427.787 150.996 426.863 149.85 426.863 149.85 cv
426.863 149.85 427.078 152.078 427.058 152.076 cv
414.732 149.734 li
410.009 148.668 li
407.205 147.99 li
400.312 146.158 li
398.271 145.568 li
391.492 143.426 li
389.011 142.557 li
383.738 140.529 li
382.359 139.947 li
378.112 137.982 li
376.661 137.238 li
372.272 134.66 li
370.805 133.652 li
370.077 133.113 li
367.924 131.34 li
367.22 130.686 li
365.847 129.269 li
364.534 127.681 li
363.294 125.879 li
362.71 124.889 li
362.162 123.838 li
361.652 122.732 li
361.187 121.576 li
360.771 120.381 li
360.409 119.155 li
360.101 117.923 li
359.848 116.701 li
359.498 114.371 li
359.319 112.298 li
359.264 110.53 li
359.288 109.063 li
359.458 106.851 li
359.875 104.438 li
360.695 101.96 li
361.736 100.154 li
361.823 100.036 li
362.492 99.248 li
362.572 99.1631 li
363.274 98.5 li
363.366 98.4229 li
364.129 97.8252 li
364.239 97.7451 li
364.719 97.416 li
366.458 96.3975 li
367.156 96.042 li
370.671 94.5498 li
374.113 93.3809 li
378.498 92.1475 li
382.123 91.2803 li
386.454 90.3867 li
391.582 89.4912 li
397.519 88.6426 li
402.511 88.0684 li
409.998 87.415 li
418.681 86.9268 li
434.818 86.6182 li
449.207 86.7568 li
451.623 86.7275 li
454.083 86.5313 li
455.347 86.293 li
456.628 85.876 li
457.277 85.5762 li
457.927 85.2012 li
458.578 84.7402 li
459.222 84.1875 li
459.865 83.54 li
460.505 82.793 li
461.144 81.9541 li
462.416 80.0352 li
464.316 76.79 li
470.486 66.4248 li
472.859 62.9355 li
474.019 61.3213 li
477.394 56.918 li
481.654 51.8623 li
483.683 49.6055 li
483.869 49.4014 483.855 49.085 483.65 48.8994 cv
cp
@
gsave
20.8872 237.268 mo
255.369 237.268 li
255.369 137.91 li
20.8872 137.91 li
20.8872 237.268 li
cp
clp
1.5 lw
1 lc
1 lj
10 ml
29.5723 228.252 mo
31.7617 227.818 li
33.96 227.358 li
36.1499 226.872 li
38.3481 226.375 li
40.5381 225.859 li
42.7275 225.316 li
44.9263 224.755 li
47.1157 224.176 li
49.3052 223.578 li
51.5039 222.952 li
53.6934 222.309 li
55.8926 221.637 li
58.0815 220.946 li
60.271 220.229 li
62.4702 219.484 li
64.6597 218.721 li
66.8584 217.92 li
69.0479 217.102 li
71.2373 216.245 li
73.436 215.362 li
75.6255 214.442 li
77.8154 213.485 li
80.0137 212.492 li
82.2036 211.452 li
84.4019 210.376 li
86.5918 209.254 li
88.7813 208.086 li
90.98 206.862 li
93.1694 205.592 li
95.3677 204.259 li
97.5576 202.869 li
99.7471 201.416 li
101.946 199.907 li
104.135 198.325 li
106.325 196.687 li
108.524 194.985 li
110.713 193.219 li
112.912 191.397 li
115.102 189.521 li
117.291 187.598 li
119.49 185.62 li
121.679 183.614 li
123.878 181.581 li
126.067 179.529 li
128.257 177.469 li
130.456 175.408 li
132.646 173.366 li
134.835 171.361 li
137.033 169.4 li
139.223 167.496 li
141.422 165.675 li
143.611 163.937 li
145.801 162.299 li
147.999 160.771 li
150.188 159.373 li
152.379 158.122 li
154.577 157 li
156.767 156.043 li
158.965 155.232 li
161.155 154.59 li
163.345 154.102 li
165.543 153.78 li
167.733 153.604 li
169.931 153.587 li
172.122 153.715 li
174.311 153.973 li
176.509 154.359 li
178.699 154.856 li
180.888 155.463 li
183.087 156.152 li
185.277 156.926 li
187.475 157.754 li
189.665 158.646 li
191.854 159.575 li
194.053 160.532 li
196.243 161.507 li
198.441 162.492 li
200.63 163.477 li
202.82 164.461 li
205.019 165.436 li
207.208 166.384 li
209.398 167.321 li
211.597 168.232 li
213.787 169.116 li
215.985 169.98 li
218.175 170.818 li
220.364 171.627 li
222.563 172.418 li
224.753 173.191 li
226.951 173.945 li
229.141 174.69 li
231.33 175.418 li
233.529 176.135 li
235.719 176.852 li
237.908 177.561 li
240.106 178.27 li
242.296 178.978 li
244.495 179.686 li
246.685 180.404 li
.653773 .579889 .56878 .366613 cmyk
@
grestore
LSXWEM+Helvetica*1 [11.9596 0 0 -11.9596 0 0 ]msf174.187 240.864 mo(e)sh180.479 240.864 mo(v)sh186.172 240.864 mo(ol)[6.65137 0 ]xsh195.48 240.864 mo(v)sh201.174 240.864 mo(a)sh207.825 240.864 mo(b)sh214.237 240.864 mo(le!t)sh230.191 240.864 mo(r)sh234.054 240.864 mo(ait)shLSXWEM+Helvetica*1 [0 -11.9596 -11.9596 0 0 0 ]msf25.2383 188.151 mo(fitness)[-3.32324 -2.65723 -3.32324 -6.65137 -6.65137 -5.97949 0 ]ysh.75 lw
1 lc
1 lj
10 ml
29.5723 228.252 mo
29.5723 153.587 li
@
29.5723 228.252 mo
246.685 228.252 li
@
.653773 .579889 .56878 .366613 cmyk
LSXWEN+AdobePiStd*1 [6.88136 0 0 -6.88136 0 0 ]msf122.378 182.822 mo(\177)shLSXWEN+AdobePiStd*1 [6.88136 0 0 -6.88136 0 0 ]msf122.378 182.822 mo(\177) false chp@
LSXWEN+AdobePiStd*1 [6.88136 0 0 -6.88136 0 0 ]msf196.197 165.095 mo(\177)shLSXWEN+AdobePiStd*1 [6.88136 0 0 -6.88136 0 0 ]msf196.197 165.095 mo(\177) false chp@
LSXWEN+AdobePiStd*1 [6.88136 0 0 -6.88136 0 0 ]msf165.801 155.969 mo(\177)shLSXWEN+AdobePiStd*1 [6.88136 0 0 -6.88136 0 0 ]msf165.801 155.969 mo(\177) false chp@
.519524 .434333 .434333 .0791333 cmyk
LSXWEM+Helvetica*1 [9 0 0 -9 0 0 ]msf120.603 170.366 mo(\(1\))sh194.42 152.647 mo(\(2\))sh164.025 143.521 mo(\(3\))sh125.102 185.951 mo
198.92 185.951 li
.75021 .679683 .670222 .90164 cmyk
@
196.05 187.607 mo
198.92 185.951 li
196.05 184.295 li
@
198.92 191.471 mo
168.524 191.471 li
@
171.395 189.815 mo
168.524 191.471 li
171.395 193.128 li
@
114.062 180.432 mo
114.062 162.713 li
@
115.718 165.582 mo
114.062 162.713 li
112.406 165.582 li
@
119.582 162.713 mo
119.582 153.587 li
@
121.237 156.456 mo
119.582 153.587 li
117.925 156.456 li
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/LSXWEN+AdobePiStd*1 uf/LSXWEN+AdobePiStd uf/AdobePiStd uf/LSXWEO+MyriadPro-Regular*1 uf/LSXWEO+MyriadPro-Regular uf/MyriadPro-Regular uf/LSXWEM+Helvetica*1 uf/LSXWEM+Helvetica uf/Helvetica ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Kevin Bullaughey) ()%%Title: (horseshoe_countour-with_line.eps)%%CreationDate: 5/23/12 1:54 PM%%Canvassize: 16383%AI9_DataStream%Gb",KkBc\kdbrs^pAhYD8J4$r&T+`Q)k=,4JMGORcHJ@7p=d!f-'V4MS3?K2ZSTqt$`I(U?!UH9<F+-l[H?*<eTeNkk1BWnS%V3<%C;saq,!ph[_Bu=k14,b)nhq(e3#VndHl*G%J;1QE%gR(C+lj"9K-B_fEBW#/l.)rUX@Mo+>?EQ0bVj>kr1R0RHYNnZ;!'sT=KMO6%c7c-D>kAB6?L:#,gituX>I4$@%%b#S'mfBd]pk!0o^2Vg1S_qi\G(iOmM?Q^HG@/NC_egQHmY@g2)HFg$^t<V958+Z0cpUL`/-d/%5?j'gp<+W(`6EjP"TBAXTV6M;?qasQn2'r_FZ!@ha)h[tNZM8gi:.RHL^_Yn2SIiGH@kSDTHAmbIU,XG\/Fm,65Y9+J&@CN3#Y%(%0S1F_LDYc$K4`.Ckj`K$A#S4"^%u\gSRL*=-,n*;E14Xs0,b+Sk:$I]^q`'$#r#dUR!kl"0/j8R8#+2FK0f$W>RNe,DX+!a08'L\%i"Hms"gJVh)?V'j@GDhHU:sGTaH8o!!;`l:rNA2Jp!IT`>Aq8ZMR@%@QI\'.f:Mqr7]8&#rQ@BMg+R-:]:-Q=6pJZC=7=aNH@[Kb%]h^7/84j<h*uFp^%6>1ZV0@HJf8Def<SSQW?iZDDT`3<"1IE^Fk([2bf$C;8J:^W`Y^e_F#f;'YB&!Xj_ndmWK=De[ZC(,8k]Dd(%NZ\8+-m1b\mXQYdrs.]!"h:5Ibbh^HSEjm":hF<LJMVf^7bL">0YXLL^Y%L0[b$$0],eTEBED;DE%f#C0].9t?nAG"L%Q)($/e3e%*cTF40\p2$AY8Lbd1c$GIUd[["_.JgrH^tP!NZHANeRF1LAHfdj$_Ch)p`1%4PBRP%!_+l!)B.<(6lR%NV5Hfs0)Ur6Mm7-AgW"o%ItM4":^EL3YQb3^A[8!/mAGUqm/%Iu4ur\Ad@2IIc+Zf.?D[I!B.WfqgL_dI1ZR5k&9sCgc*goaD:bMjCVK2)mE2#;\n@N#Kr-3s%So6]fVGirRO$O"bg-5Z2p2>.3Z[eh'dNchbro&=2TQgAE`BXcH^AZuL-++X%(P#*d&o7PbllW>g5XS8\GCC[u@iC65TBu`AcF7!G%`q73A/,>[h"h":enNUk+qsAF4g'`lMs8J]nroIJcZg"FEiSQLKT$RJeCdl7f956QB0Ar0a!t+tO@K504><'^oqHka;rU8-c>,%(.%]7AU@J/A!i-:"#4X5e(kJYl`"bOoa=:NjT6Q4dTUQu1d&[i:uErAf$VEZDE*s-3Fsa<R`?k`VQEU43_!!tliOLG(2PoM,+OrGass%CBbZ0-Q5eP56#?6;!a.,p<4HJ'M/YhDtFKi1\iCS0OTo(!+u68i)u*aK:oajjD7A(Btf5`$Y[-K?LP@R783]NLdat2cT.:I8poeo%/8;-Nmo;*S<r#3b[S`6*e.f_\N4[3?kcueO@PD*]d2:0YG!#;RhI\-E8W=S.mpHkqc);3e#Zda(M)P1EpT#a^m$A)p^B8Md?I<io%L][%53[LRj6a]3m$^R!dq#NTg(DrsF8up>X)CBIq5Zm3g9E(DfoY<+p_^aut.gldL^B5nXmEV=5D&>-K;i%L_J=-Ar(E0NYKG)uK%ZTeobOmSlNc%'+?rTHIpd0MJ`n1`-:2)?9[p]5H_^O'\r^4cHkeH@:Uh&hd%JII)JJ/*^6+H+,j-9R/Qbl]f[DFQ4tZcU,r#.d3'%N.8aHa86IqM_b?Q#;nUD+-$)c96s3u9mA5M#AOfb&Ra*Vr6tq`n8GHGZ)GE.07[1si'C+[J]dd!]pdA],)F(T$R!ZGp7LGc]bpOt%IjGa@@VIq)1iEC)L$PZ$@0<,i#Hbrd4=W/QrMI/pXA'0m)),jQXI5NH_]PQ*SRr-$KCGkRTC$;62;:)J!J)PeU!;pkn1sidpfIL_%,!>thWpi(HCMEGX]i]2@@/4/[+u-i/bXN[2Y[CO_7F:KcjMhV\!%eQ)8:W;iAcO6eqZ_d>d*Go;-MpdMO8Vcp?@)ea+NBpap=jM,%B>%X@@&8p/khOMJ=4mMe"%Na4Y\L=C!Zbe1)TXW6,P]"`$YZZ&!Bg9uL0gO'Ob#'ifglF#_K-b3qs5$:6CMSr>mgKTqP=?Qj_-rh%rrAO-W<E`/"/t05?ppf4K\iku)sG,-gY^M87PK&D,\l#p!J[9((TTa'='I&Dr'H?j!Zf#2+0[kpr:LdY%+,l4*)L.Q?CA^)OONQG%TU)t<A+I*A^c/)#/MM7pV!f2-)SJY/%_a(\ncsQAJIb!'Vgk+ek'Q^S#A,$0?[GSI>n>RfX?K:Eb[;T^J:Eir(]Nmk?::]<iD:X0%J_^Z%@aQUr+[b4%"T"@6E&`fo-NOX2rqu;A^TGs^SPFsUb"i#cq1=0*+:o*6^`kM'r?W5u!\oB>fC/AOpm'PdFrrd$`k_TUOFF2O%f`.]f4rNOSSDaM-.K`#c#fKf+79tI^;8?ZFN]0A[)B/%F4ALS]c/*qD8+EY2aOJB(h)Je(7A2O<3:Z&LN=n*.7s!W+qhWeG&Bt16%IKk=55H4_HqK`F*'r`3bZ4?efmso'/[i'35.HV0<]m&@Y=H@18LC(<Ihb2m%O(g7LXdRiR3+p$oo"_+_L8"V8J@GZ.;6/)'E#KU?%`O6r6r[OQLrtPIcrIG=nI-Rr<[Y)=CAt&cuf\SoT;VLarC9^"1KthP+g9#l.Zd$"OCaJ!<LJe@*<n[O^(@0A<*ZLfsTr$qE*S57b%Fs:l-@fss&VKWPa&GkE#\%^;_?UtK.P7iVi5GNr@g'Ha)cKbET6')%W=O^d.J!d"in4*<BDS>s\2;-m-L[cr"N?bsq!>.-1NdnZG%JA1ptFliW,.G[buoj>?Ms2/<M?-Ge<drdC[p[<U+WJ/>#)k,T4>4ipp`cVLWa2hZfr6p:Lg[EN$nAo]@o<6hlpMFG/>f2&7<(&/$%$f_gcDcGUNgg`,qX@(0\R.\]&r-GJ"T](2%/:n'hfs+Z]7YZ*ac@<[qO47K_]k9ek8gF2QQ[c51rR5%SdQ;1PXJ&;a&\G7h[pq&g%@"c-[NR>pod"hENd@9`4Q/"#.LQKM3c"qqjJYsKoa]C2'o<mgOL"_*%X)L/5>25jM8o2YZCog.V!]k/W[c.K3BNd^'>`[e1l1&T)%1^giZ0S7n^bsl*BLJd-43,[lr1+3[QbiRI'N4HpS>C'otgr+.['F8^-OK6CF'XJa].;!B;_,M^:DBAB0`XXbb:`QEJSq50`3uTrO%O__#NGeO5spj0\2:YG\+`/Pr,TH7MPmcj,Jq2'\@,d[NDkaH2#LUA<s7+F@nR,K[$dC.7B.M0B@rFkVC)phILSe**e4,-pU2\b3<%d3$_fg"<s.rJ*;`$\?O51Ema-DHhR/\7@c7)_cchjpq@YS[gSKmASu[1#)Zc-]\@TbY&C[2;M20g>#kM%PoLL%7Ebj@D&$(fJZ%`%(XOs-`Ze&j4.#n6/S83ia1%Nq-O>:m@@fC,Gg+?*Y%l8LGADZINnH=&hG>.6"l%^N^S$6_`)TAWV$B[ibV:r>"/GgQ4q_`<Aj6,7%7hKc,#!S"Y%j(9W6a>huQP";Uf-8U0NajakkTatE4AJ14i8HpX^j#T.56Yfp(U\*1N>op^'4(hBl%>s2jrKh8@kG/OAj*'Ro-%m3%>0JmTB$aES[i)&nX]IQ%C^s.KrekAH0\Uo!!>@2\p^IGPXS4AoZif)HU__Hp`%-)J&u.<?VT6_.C%acmGEU"VQml'OTaU#9$B8N.%76?SLH<6n]#rCL&%4*O%!,>_g`%#`EH4glA,)A&0PiZNW1HXa3Gg$f>agNh>r":EZ0L:<@Ub[oUd;nSH%62IKcPaHM1kPWOI1kK#%;QFZ!#&Idl+rn(/Eidn/Z_EgfCbruI@[iu^/bUcEEp59MA-5T8I/='df+0^bJk`b>O:_q)ghs`.pr4jQ`5=F0[N+#ZiG2\F_,)oX%c=X]lNu'=aS_B#3"(rj8r#9nQ5^m^jc%bc5?llli-7TpL\Qa-5<@AX4DTN.o<[:(H[q/h\?B$!b*Po2a>#-JLHDfB]>Lr.sVEaAi%T]pVX>uAWhLqFn"g*,XbBL,#qf9=m>2UIK<%VNC"[F&m7[UE]UU""Cq@!naB$E2i&>i7KN$=!(9H3fE]1tj]phjT+j:$J;U%4=CO%IBT(=E9s:H$EXSC=:15tZ%=#LW/^9#@(X2'qmMnFk<@hA!5mNXr1Fj.!>9"na?*ePG-`2Rs#qX&aRubd&8A)!7DT_hY&Ai@bZ9q8%:,>AHO06qGR:J[BfkM'72$>2"a$?(]qS>F,?:>]E.oHua>)Up!=LC/hI$+-V5\%O[#24r\D4n;Hf1IN!3l_,a#,Z&TIasP>a_KuX%0/h$b^![Pec.3-%0Eu-#CU1q1#;dd7&6GO(B[&_Uq<s<(OXh\f'.C8Y)Gse5*N-FN;d,#O69Eb[<enbTRB9HJEMZf)bmmeEG,pXK%[.GAtm*YBbQG+%OY'8b.qZ4`:e^nt4/SH`t`AZF$7Xm8+LY@\f>E'p>[b8n@ijaRq+)YMAN(t>1X*Qg]3QRC^QWa$9k)VEYDth/e%Vuk+X]:f1u(Rg:GS3[6TZcS)r;M$F!.S*rm?YQuPi)&4-SOe>HZi^lJDe][g0/U1[_t'\?R1Z8A'aTN3Io@"#YVp8hi-I3-=C=sX%XiA^bKCSr*!1W=t_$X5.kfJ921:.mnf$nGW#]p=nekmr@RF`.$JP."h?e]4BTngG>U3=<[H$?W&R]Ue3q(G(T"bDOsA/d!9S"L44%,%`>70o"hm?C,(>c=>du-sY=!(>0dlQte/A?ASdZ>ek:rRtlL;70^gAULP-lpEam]B%os0+Z7H7QC&'#,_V.Rr6Q"I5SI@kn"?p:%d8DGp-o9D_<'d"g$n_hCU0nrJ1W"r?ma0B5`3P)QgVL^ma+34o'?(4WVUhcbYK/c=\?^o6G6aM=?q."3$;0fF((9M1g\GXfI$U&;%)@W+O1,EN8_sT8!clU&h`Ymt/L1kC<h15S4C.BdKC2H+e=o6??b"dY,7PWGd:.H`Gfr"bCmsusUD&.4g3lji;L5D%D^6kB/36>C2%&H=lBJeUd/(^8`c2;:eG^(WjF@P.TWm(bNiG+i*!L5Ig`/:8;Y1i71!j@dXeTR*25^t//?ZV5Z?*M9Jc2:CK(fF'LX\%N/n/#D`P%4PMHcmt7$Qj5#0VAbMl)=X*:/<]h53`NX4LV`=?WGM0p4c]q4N2V[T,:A@Q7Cnb?H%ZP58r3Z%Ia<lO]].cmS7n'&r5!;6_)#"'F%8<L:!,Hp37n`M,=I._f+bB7;&aL_7lVo,ujZ5C6$ao<pY0.(ISK%5U5_!WDO8`]^;m60&Mpn$#uMVH*7ZH5-&Oc=:-96\cnh33li%G[ds&@Zb#Mk.WhNG_tJtfgRPXaa`adhiUuF6B3^'EJ-9"ZcS1)KnTW?]IeM+5M+hWmC-1<="S]9o]IjYp>2t)54kfDhIMWE38C:W%..l^OHj9n5ABl*t\ap?'06aj4mudj#mn,grDSHj[&N,?9B("*Cn]bO_0g?C]Ap7VPfk5/l?W]+-0B7N=k8J3l0C6G0S#C`?9\+1B%q'2A5NU0;^l9=0f/DjC48Ar96"EM_bMS&%kS;0'Rf!`nTC_8`LGmRm=poNDO_#33d.>QMBk8093OrZj'@EfRfakN/F-PkEfH)\N3%DpsicqU;!_*l#[NiU$jORpK76JC7lX/Y&!5n4WOr"mM8sc^eJta-t?7#)7W_hA?,idRIEqY7/>^L(?H['\('3`J->%+StG"P=b1@%ntf;uRhn2`0,>DP-`V]>H^Hmc/pW7^At%`;]VL^In^#*#RRt62!+%H'iimr&q&8.A&"s*8,P;0Yd6[D/aHA1d&?1T[2A6M6L4;\'%:@ZA1SG;Eb-&T"cjho"(A$SuPUiW*qd4X%^)r9[<6ibG[0(RE)"n.CW9>.OQSgP,n[1YCrS.!-,$Qi;-9NZdMS?tq!6r*fKEk9`/%M&1>i+Cp\D1r.qnq-^BqAf9aC)iW[hAC(`R6Sg%t-I:dnkLZt73@Ud,(Xr=J-[&rB.$HOI:@0'4EIm;X=ssm[Pd))6-QO82Z\cuq%-J,6ap;`tnc(p0`LPbIS(AM)=kcnLP/17@Er[C=#%bo!+p^TO%QA/Mi<MUMPK@-f#K'rt<%\=MsEc+^k&[s("?R1lc]!#67M,:;?%ZP+6os"<WJk%F[b/50eU%'L2^A7<.;,NYmY#Nbk-S9bcTLNea-CVJ6-:!*6>Z@ZE0c!ks9V#dU:,h+LKC_D5#+88gmD?N.KG3-un%0G\^WJe'Vo,c]VlUbLQK_GFH_hcb^)[TX84Q([0G-'718-Y0E-GH1@?4!:*."$ID":TY(-GrHQnF7$/7d6C8a8/B"Z?4#dUpZlPe%\Po?G;Y75,Z6nC0l('3BVW:lE&>Ultmt!LVa%E-&YO-i?$-7^-'sm;Ph>lgqA^<Lk2D0!]8#cX?T04$:qKD[TomV7!ZAMWViV=VN%M:e8N`bu*K//^'EEK[YX9%JM?OrQG5he3ilkH8J@;PBfN.6%.nq-:5RLu*<+7C9][Grh]7T]4u>&FA8E4.Q]`d*l7SP?eo8Zc=d?%RKYV6'^PFLQV<]3:@o6\Aa3I(brbZ&COT-uHuQ7F"Sn!E1G`)dq`OL@>*\t4I/)C>"`0L:'&gM#/E#VV,7?`4!K5teN#otp\AqIf%n@teo<p;\^9Cs2$RYOM?J6kWN_sIZu#bS!@gH:&hr%66HasF`3,igO@&VJ\0#rY?VSID"*+,W1\4DaX4^gXK5Hr:MY^@Q(<N<Ett%Hdb;e6@AiD!H<'q=5Ydc!Q.Yul?(s&#m<r;Jj@CK"M:ag'Rf'k"sLFO`'j&>i);IkN'L"D1$flQ`RQg8aHN9VkfI=+MT-i6?<VDb%%8VXn)GF2b7'Q,F@L99d0G'eNj@GtA$""8m*ckKJK?5U6bHqo*BheuhAb:g$'oQ&db4:oD@i/S]fXSbY8miAoca%%X-!#mD.?^2'%3E!_]@H43t;.Yo*ZLT87abIpd,VB7_OnPXp]SiB(OE0q:aIS,s,dWpT\/$rVPfP;08qQM?McUrNPHn[A&KMHcUSJ[u6'GXeahd=2%3qBN(8dZ+=N>KjgfFUa_9<fb'!;5k2*6"ICoSFkY5LN*tff&p=r$T:^Ha2?UpGA;hJQZ.5a;0_>kIJ;NZT(--=j,Ce!73"P#`EM_%rM)5A%X&jo2M&7ema?0[E`gJsG9V)pA/32!,]Po]aj;bMbnmSe]1&k?*WlmF4Wh*7e'Iiel:j\[Y736'R,?GU+!;Sc)`\0NCNNk"%+sjF*&hMTi^HjT?r.*'UXkMT9HWOL=g^V"cqK,#8A(Jo@WH`Fjc52D3qUYJe2%03qZsbr[C+1;7n3EZ^-69),fSCeBh5=N=^%PF,%0s3/U!4bqfURJ6u49@U4lWMh#05m=:_jPt5E#pRbmloTPn7hb0g7ADR/e5St";Zi95NmE5o!iQ6B<=+#2OAk#XM#VsDVhak+]VUb%A/.0n!f+XdYo\'Af-H8=08%..-gXW&QI[LhDd>>q8bsqMGoEkpkIcCp`0mmt`J4F#E&%[bs!>u8m,I%+l/L4Ybch?o"6hIHW&<sr%Dg/tST;>J+DQ]dWP5$5B_"KriE.ic`'@/tFK#eIa#&[l=TY^1]a./laW&YU$1s>'6!443`i)p?Z^XW)rFYl"SlNJu8Z((Y0UgqAa%5;E9-G_s4lEq!BFp<hlIQT6KGO-L2g^E/;sY.G,71g))oit<knaA[e.5`A]JT1RdB9s,]$kD/Ah/?SVQKJg2sEjMD1h"fj%O\qm>%Ir&]4=Sg2GcGAE4XguK-p+oinNXlX'Ama;saF$3g@?(,&,P]@NQilk>#P1jgI^d8Ol1/5$i2dG2QpG(B5JMCEe%R[OA2XoB/YDi!%Og56'pcnfp+"nEI>XTVU[9nW$#OqL&E*jP?CFME&7<dd=FD%2EhZJI*,b(b,Dh.`[D3;\Qk1\qe&"&[t6Y*fp(n(O`""D9^THVKQ%ci]r]1>ghLRcN*G:oXN=-NubW[\^eE+(c0l]2'+d,=7<X`+7d%a`Y0o+!?@m0_.@G!55@VH0m-n@$n%#"hC5'E=C.%ll;g&%*YC:%#/h*BD>D/,E6_K(#3iS!oSP[2V0<8+R<5kQ$*kCo-/@baL[,eO!A@d_[NUgjHt2Z*kR$At*Nndf^8J4p)h7XNo1N%1Hpb%D>\F[&%T6Kn=Se_4;7.rlA473'F5JJ=([p8+=`>#49?W&&WbS0e`1CXl`'H8)(_0g;GGQjmlg6UNsn3jWm$%)t\.=?@:)pQB0IV4L/AN7rS%H__JmX0Ggb4Z5-"d>FLeoYVCH>I8Qp/MRM"ds!#jJ$4\Q]kKBd3>&uB"E37;7'YUZ^Ceg_Sem@r=QhMaV#e%$-r)hBM9/rlXRGno%:cA&K)RU>URCU7)-E#ET:oLXgaO^C\SEi#;:^gjjj3B"m=iME8k?:[\O8/&t3WV&9iWA]q12kh,.-1[Rdr5<ijh4:s'&S-u;Bl(O%"HtsUA:HB[>'L&1C7gCo2cCf)H1l3lJLLfs=Qf,(901WYVsG!ZCfC]A"M_[f/jFUPM^:7^r%`a2VrQ$N2R/+ta$\n@_0H&5,LOQ>%9=5@H&g*0i^W0&T]gXLGC*sC2Gb448.6PA$hF96:o/k.8Ru[q6@3Q/%`'n?h+uSZ!!MLt!kFO`fhdbNQh%jV%qe\5d>,cHfgaa0^%$I9UH3Xg)q9-cM:]bRTCVcH"V6L9^Zrq"\B((]boFOW(*=QQ+/ECMW@M*A^gol-XSQ^\\e[i`FWI,c^WF(j\K5U!0=!h7PPaE2>l%kFH_q\N<q4qHl0ZbF@m%Zt$^`PCm(D)iW,A?MaTQNDL&SR%EDFBpa*)9\0!P47JR%FDM^!ZXg'ufEN.gin1!A.cJ:sG81=]gldBH%#;?areK3(I78G;L`sgYX`oag0-PqV&9k2#Cr"9DnO/Y$g$NUE:-)YtKl1!gQnA764R<^]YhRnBHEj<Jt$6\R1gqKiNKDh9W-1r=d%)]C/<k"24*I.%Wi]_VW`O4%2_GN%m,Y(eeNlNG*7"`AmLn/;s*`:9efJTUTi]3N%1O$uT<onRO,]Sq-SHPW8e%\VpQo;SC4=XC`[%q@8?-Q/B8_'s@FBrDT6)C5_)u27(:@?VHX,/QOeY*%Ktb0`,f>0E+f;^DH5/Un9NpLrZrj/E%6I):(J%*%(<s!Ao;H+&7s/F?XNs%KSicE@6N%'Mj>%'k2Qd5;I?\8]dWqu.2AMOBA`!<=_p"sF1rQU(7,72/o2?<'-i%g"MTC'AtgKR!LL^G3gYt(jR]U"Q*j5.h`)f*%84RfjMg`?)glfY-I@IT]Jj?lZd*leRru)S^OY_X*-c*SbH[*(lqmMRgs&H?rYKs2("ZEZO@BfMI1b&ZhAaFT3$Tdk7P%-TOJ;OJr%'+<Q@?I9/]_=dM%Z*YHq_E$j/K#$c]0m&iL\b10q-2*k9,SdT__;j!THp7?)L3<UU>S0E)?%+G2b9'Ts0CulUnZG0,JD&9*+]AO2%;*m?)S@pTPRbp[Kf;?HW2<f.-_S?Qe>(J2d?(fH^"<AFEF'EVB>$!gaE<maUO9s6mi4pH)R!@<@N$kEr?B0ji)=d"Pq^m3"aL-em%$0s/UiL=P1Gn^,g=\@Aik4^!`_YSkg]EFBs,k9N'jkBSaEP.rtQst1ugO`ue^B?])KZUEECJ<OcBZ?63J7A95`i\fR+)HgJD!`=0%L?j^uVd7@:nkl-qW]0aMgEp*s%m22E4u*X30[hi*^:arB8FDL-$5\rK!)-k@oa=I]lGI%!7dBT#Z1gfDIRE:Nq`O@iJ>Y!ia\e7u%,769+YI)CNr3WcKlM,@#X>q7Gg]jmdqaS+"[7$lhBkOJM%[_$Y@#Z6IY72ccQ8<$=gG.bN:[ZUf!%[,DM2To(D83ugDrmcg*k8HT%"(fu=5C<t8jOYcaKKL%.2q)-QXH]IN,4uK.S>CiQS%jNnU$!h!Cn'2KY.dPkK8%W)_(to[9YkO]?'4o[]++Leh"#^s3*-,g&-St;%cu*42n<^^N(G0QL0Ppe,FB,?-h)]mA`Hpq3[n%l2DhJEa2ZHhi/CBXj:`o0*E.$<F)1<I<)["AcV*YZ8+'p^<V`W>O\1eO0<l5ms%K,.RXZek.!^um/5?_a1dd]ep^.8E7=R7qttMX-qApf3d5;r!V%cs2s>BFD-8rKd@-F04dUI_X^BV4k_Ep_SuS'h8FB??FHiUI[.:%U._\RC5EHsU*a_"nSJoA9iNb1p"dDc8/\BY7'Y<YV"7UVPJqq[D+d%oMo4s7P,mA$=?emmr&g,6EX%C0iY3fNp:`<u&iWp0a8p_%%abQC^+6]tL]JpX?9C@)gQD63*]5I%Nh=q>TJ":Ycb7&*T[jN+@cUT&OqdEq_"D8=O^tSZL!u+E.\n]2mO+%/YQEHJLK?Y4\OhCIf%:nF:!/l%c8$J\;2L7-(S#+.RlTVCbeH.8ZXFHh#lll\M=_qinr%j\RK+g&6Vps"jqSmor"_8IR+)fP68oC!r[Q3>XiLr<l/q8Rs*%8DEHP<Lg-TgaI9?(r,34I6J"5_k$AT\,"7u?_(&&p0e;Y]enI#Hq'Tj5UR?:e.UiXo,O*VKnn,+X_#\a'[BcgqG#]&Y'3jnAKJW6%>gBI$[sj_#d4BajqR>J?C-_m=CXhsh0Reitr<VcIHdZ6/P*I?^('+[)jj$r/\SjiEb_t:_Bf,I@@2?ZeOl:aphUpc)&"pV%PXN)I%,2'o4GG"18+p6bGNe)uQpJSPEN[BJ*YttL^>U#[4kiO+jC'QD@9Krg@n$a*9rrEt`(TfER^KD0X=CR/R86`X0&^leh(0g,c*3RP`%iJtDI8sCm`]`3=9VX@pB(C'N>ilEe:4C4CXhX!L6gof%C&\IY;d./6`'O3We$'mNch!Y`r0QLpI"91I-VtWb]iJQiX#=B5ce\u!Y%Wd**Rq7>+90O:n_,R4LU*[Jd>e_M3KUH4XPW.;k7q51X.)4ja?qkhVCU9T!eh(rO>f/LAuDlLKZ5H0oN4<BmhCo4Z1B-F2BE28'2%gta09i3*jITCq'R=b)ji.l0>[_']LG$Z8S]<j:4YKZIX-aS8h<?i]?F)M/gRjr(0mVT]G5%m3#VSd%CuZ"F\cpS2ZZ^$;VRC'+Vn%/@H:dd2qpt4V?&e[c[O'%SqfOC!RFQ#tRhlHGn#ca#3H\NS?N%YU%,O=qIC3k-Qbl%(r9(aP>9oU!->_V!YS##(S@YEO'5eeRtqf%r_$g)_G'@\cM)cJ>Z%iHTs@4E4i)Lo*M]:Wr/%$%_`B;r@M[pF,](;0CCMWhO&>?6X>NTt%P:n$!ANk5LHg&QlNOH0]-BB'_>k?d%8ltgd5Y][Zfi=In($LH?TJ)do_&CG545B)6Ig"T&<q^e%=biCs+dlYYEqt\7\"Ge[!toIb#U7"@MX=.W[YU=mN7N@uhIR3c.BHV2%R<E#/7/$32E_U\ZU:.ZMH3eGXdcV3+ZWpIpT\?oh*s/hY02m4L_q'U'Lt\5Q;Y>1nXJ&p0.V\c*.DXGtJq?i!W2m<3T%jKKBt0EW%$XF2j6M@pe";OB;9#Y#W_MW5cb73'Q),SM^!D7=2]P$T8&]M%VSoIST4isdl^khd;)Q:<$MH$_r4hQ!R?EH`Ti&+[TXo-BJXdNn.%,uj)'4bHZXOuR]\'Y9,4_LPO"FCpfL/[1E3eB6?:q:mINoGKlq`P<0<*^4Z!lq5L:ZZKGp$n+?0bRW/_.YX">O,H'4_GI]-K'-r)%Ms(;IPA'N_;ZX&tU7gUC,39F.Z7plfQ.KKb<TcMNCJn;VC1<EBZ6S&RHrhXEMD$LON.IbLJqi@`PdQ*!qq,ZPgk])DW?$>tUV<Q.%>TI?/G!m(u7aQs]S.b,o'rVRgjOifAgV<gnYHZefi-iM\ZQkf8\-,-E-NQW[hGjR!apu`kW(Z,W'W\h#l-NMMSTu:Q0u*VBmEU+J%!q6j89KpGur.@N='7,`GA3.>ME=seJ/%8;'W]7ikC&TR?:-F<G/bVp%fAcW*WL0b&pW2O&GR-'4n`BmI?_A";\C7F:27O+N4X-];%?2mN,Q*4?qFt&<k&W/E/hj<-mNL++fC2"c](?[m]2H5NZ/V1ON8+!jZX+ViPP;WA_s&-oBPK=U.b/MuJpNJfA#Ysg#1JgYG]RK_k%kiY'BEB_%T^fY4+?nBU,M9k2<a4hBUIBR>S@eU#f:\>`A(`ZF_H]L4F7MX!7"4?URGkm6>6r5M3n._o3kQ8Yt;o>,<o2*W]A)"B4%)Qb8lI,t,]pfq:b?a8T@g$b$%>\XCr(0QKK<q*\l!5:p)D6DLl6'C-IR[C27F(<BIM/<J?nPh5mYjE"J#3a_u9(&:-ch6(JNGUYl%g_@OZ+4rIX?q9tZFP1+:"qG5n=q4#O'0h;nap[]^^NerBMtES9\:9!-7Tth"L>p`ZT-D_0]8)+L.Dirq%F=<N'r4EZKA#6b7N#nJ%Ih1BIEL.<dXke'e2-Er!)Z"VRp3oRNBs?L48Bc4[M"HEAL[QE_c3FBLaXWt&aNdFU"_mb_g1oekC.Q+Do'L3o)/7cn2-K=sTs(@b%i:e<CbTUiVmBTk(,^,)#64.sW=H^sDTD9UE%hP]R+[pOK_Q<UjJuSX!)^#TmO'(X&8ZEsD/XeU[25EJD17pJjZ[c).PT5BYp2E8/%kr/8J:d\CmY2B(k!@cgm'=#uF@r%.X(aZ!%rX61r*LXAI-);@q/#?7-L2Tf;]Cn%E:`aDVs+-:SPpaP5hN6KFFma`s.j?Qlp(%4&%0J?>2G']To.O.Ykr60?5\q<OZ8*#(D?("77EY"7$2DV'n__`S55)6T8Fi]Z!gPu"bMmW+?-RC!cc!l[A;FhDa:$$R<RGU2_&Q4fm%51Y&s1K-`2SIZ&f'r5bCX<"4J8k;\-m7lF6?6@XfS^LWFp)oPq7JcL[WTDZl(9hFu08bjc4_<k[)n5_<F?#:1,(4@eCK71dZG4%K%642cWTWM_MRm:#B^l=<Eq=E\uVhjsk1N]T?*=Qu#(PL:K4W`p9&Gp-aSB=AERa[m81$MS(qQ]WT.NnsV)5:EFgpWd]J_s%8nG&JP%7bZ'IRCCt[TSTuIj(/rK>[QQ%NE.S`%p4HQ9&8jV;PD2dqj4c77-ZrKRc\J(q70iB!7DQ++9bjYg+V(,*B2PpbU$J-CtS\R#U(M\%Bh(ULeAlC'[9JI:H`S8,50Nh?Qip;I[Ulp<WpkEWA!(@C-')kC/NL+NB9@Z0i\_$fSR$H6P,^gDIK:n5_PtC)mYs&>56*.CQQp'R%)(11rrofQ+[*m3'D+TC;OQeYAP*+V8D*u4M(:7M%D=!(o%l)g5Dtd?;8;SSYbiFMZY1jjc.R20JmJUq_]d>iVY@>_IZ6Z^?]6gIN%p7ARfEGF7><I,#7JFlsFq7@huWha&Q_c8Z_hVmu"&_l)?^,LhD9^1f!M)7FH+dJt;>ng)L7aUKP4KmHig#brl;<@$p;6SPg\&qM4%fLNjH%detJP'-f%*ZdFSdsJ^Lg\",g*dRH/5)hb=ieNe`n0h,7J_fj;H-Gl>YcUR3Q-q-XPE+fmng1@-2",b$@qL"P@LCF3Sj=OT%GuoH@T-Jh`c@Ajhl,2!EcZW-*$W!T5Hg(DZ"'\!`o(MWum@D^'jer'<<qqOB._Z9>p>L>Xq>9sS_=-t]+"BCLH:7&<'-WX5d_,m+%GLNA<-oSn*^?n/8)o\`+QcJX&_t&mdHHIq@_.+Vbk]">8^14-Q;FJ7QI*=8&F8sYB\\W<%q61YMTC0JR%[T%eq,2MGf#mqmb3@'_%\1$<]HK.\:G`QcqPZ0\E\be\H$[A\R!q2RHZs>JGX.I+X?g0"']i[DCT>7WMN&qfqRr]*)[@db.Y^#I9?jlYi&ba1cC-;g8BkJ#A%!OMei]!;E^['rQN%T'9k,``YlQMt$%kQD[X9aS<kI];17D?tThjlP9g]<ul@9]$&IqQDJRB4lJ`1`)Ca(hq@mNk?Vl=qT1%o$aXs%'I35.V@(c@mG07R(l6dl$/5BV#1Be'UlMfeB)4X<J-9Sn@^=kiLA1-A[,m"+^`R$]_=jFe]T:_n&^mr/Ft4\X-PkMC!@bB.,QrkW%[S]L4m.]%mhN1Z0'e,5:kW>`%'mPqXG8R>'V)4:"Z++?#Q_HnaM(2D:O`]-plVU(Xob^i>a^u:^!*]Q!8"[;JGhA&d[;4XIZ?F$8%<GHg.9N_chAG1Yd<MV5)QmH/n:2mbr"aJe^E9Gj-#F>8'VZO7*We`?a$0<JIgjB/[^@uSr170J;_o7C_SgTA3R;U].HF1F%\6`!-%Gn_]#D]Iet>VuQSH2fg/[),&:49CjIQj`QKXbaU[59t$*"]u=fg.S>:<m`"^)$P@k(8H50h>BDmiJ&k)(or@l<`l%"rdjG*,.@<X%Si-<U']&"^THYSQM"9YF$[f?J1Ni.alB:)oZ^ofbGKN.^NI0"oQC_p*7Mall8`&)-,Y(]k7A?PA:L]r$@=/s*hU!2`p]IX<W`R]A%_*I.nF0@NPSpQK)=FWjs5(j*!0]CG,QLXc$[oY?a4N,9>M5:7>feBb=S?,I:Ch!G3S]P"9AQc!;j4'X5EXCiQ]).cVcHXP3PTOd=%dL9CI6:q!'/pgW>ePgcICr?VSd;,a'2VKCHNR&5DqUh*Z&-6>DQKpHS-rZdEl+OWk9'&p"ODag.5B#PSlOiMVd"AL%W,39KFK.%K%B.7edW&H=H)N)GFhs-EZ`laBH7kgAMFB(hBZ6%$I[%U>Glh8&*K,0>##B\<HV>$][_We]M9)'C$><\P+<YnP1]);Q.6l*S[-P9r'%GJ'rXdZ6N>#ck=:K9NQ3_=r+60P.4&&o20A8`buDBdf#<e0U_2q'H,C-Qg[2VrV:dE-$`:PhBL_\1o\.gq(gG5nlC^OC[Y=*`iO-%s'E<9a8LnqWic.cig7a$`bNX)lcD4&X>$b*R7B2L6?qr6F:,\:AMeP3;:SU"A0HX],H2@m-@M@\1r&(V<3%&n9*Zr8XEsJ"O7"[0%SiGC.SKD%BM$:r_fBlK&7UrP7qI@=:"8KTKe[gt[A6,'^j<^eLTT2T&f\;D2T?4*GdM\=rH'I9S.QJo@oaG5<4&n>@?bEg0"t!VP%/fH!?.uj)3!FVp.h)Q/_FR9ek-IlcW%[)`cnSoBihs5WcNb\fU9'KgNfU^lq=hTCI7G!f$Q@injW-N6cWn@^o\L2j7<)+ro@NYJp%r<,VNW0GL-WKXTeC/o/R1dE)ADVm0c=A&rqGACpB=\tUPXf>8Q=UfK7ck5:jSua0<-dHm(:CA$(Lt&jqF@:"NlHhpplt)dI0];#/%)!MZumgXlHq;gn.-6M4_B5,?4(AX04;T^tV]@.=i"?!4+_(D_A0M:Ut76lABVRXVrFc":?dcf1<'EHK6Z1:]`8dYQWcZZ>'Y<'Bk%r:0ahN?)9)X=oYG<,DeMY#VafM3%$_DGjPU-Se]4^JWMi-EDaYUZRd?<3ZaYdm&[k#`?a(7'%%j>_?.P'@t<9@S'!N[6l,jmOMTW%)=a60S/9eXa[BA[6K5@l&JAYE_s;O#:8:\`*SAJXE>U+NF,CE[A8?5_SKAc5IIZ5PLZUQP]HN/merH'X1ZCUA)FeZ.0<tUuHPRt;%W4"oR7X)4s"n#j7_(uBB+j5D`M=ntiJQn[+)Y"`N.M26>37]3.VI=3p-8hXcE`6-NJKXh>`\^N]\!POGNg;tfm*#99fFm&jV9>O%%,>9I9K^m)5a@fgQ#-)A`%6fh;>,7'`5\aLA$eY_>?#/Bj!D,$i3Ss!>Lp:_FJ5'=Xg54FJP6`C=kYr83@A/=[J$<N"W"UmN*<W`$%Z7VUW[krR:N2kJn8a\E?=J19-;2$fXpb;L2eK2'=n9P=jq2MVF6F?DV-UV:oV0\s<kaC6GdE.iiMIt-.Osf(jP/EDCP3;P9^G/lp%!CqF56@`N##\UrC')S$!Hc!@TJ4Xqj:BDjNMjN0K_;=7\-2:J9Bc%;Q5u?"k7N1GS.I[CcX0LoaZH&kT7.`ME8LZP^V&E&XQ![:Q%Jk#'4XO2]HH!XiDUM]1O8kA<^)V8ZW\b`1aP"%f#n&hdI"@cXtd=?kr^:@MB]*:*\&_ZVZXO3.0K&BmM;]mJifR$&+#-(m?=cD3[%r>Z>>C]T[\QVLZb;[kZV[LS?BDW8$"Xs8+so:C-IP.Jq4Hr([Y1NK6JX`4GInmFKf-s;baR$n2o1p)(@,qINf!8,9D%kpdLmP9[o%?4Dg6l+Q:E8L^V-(kAAka;O?(:DW=X(QK)#ct!-:]&`(EjPntu":W$FQo'odoZ5TM<faq!c+\]-<E]c+o_>)?V6b\$XbEY4&o%oD%+nnhuRf\0Kb$qSf0cG1%hd*sR]j)Q*&n_/aqu0$,/NdkbHSJpc.mXbKE?=&.ZPoi;fKGo?:Hj1aKIPk$fife7^@7Tkm+&><'ia<n%Vq?rG;'Lb[pd*4ipM*VN+f-<CWk32r=jXE%%9pCD<7%#p2^7't7n>;5?pJ]R.(1m=mOJ'cE_c$?P]Nt_;]lFQd'YEFV4UL1muk8D%ME&I`FCF_h3,*f9bE>FUN?5To)GZ`PbVcB7hj<NSX-(hdE92H<Rk&()6=@Ph98dJ3dGDQf^inlrnM/"A`03V:L1Fp^3g6l1>I>;!%#>E+T./<]YagY`>n-^.(X&H<@d'Iam`HF#+'Wus^>VG8b\r4@VA_O@DY$pii]`V5$Vd2T$Z<jG`::l,'AA(_ISTY1-m$*%,CZr,U%kTn]1(Y$fG=3sO>"jaBGe#o@-<stU(6`43UB<kjAL/,@4:0&rkFq(!c"W^\AG&[t^Fp4F5_g>MqSQiFP:,P@Y@L\lO"e@&bTp_"D%?M:f^i:KW_i70?/ZAR=J7_?TcY:U]gQaiS)3Xh5X.V6.]I:T+8r0C&)QeZh](XT.(8hR[>eCed4ns#*]8R>sQ9eA,?CV6o]0_\.\%&jRK50+aN69&nstk'5QDb+pgS5+dBY_%kWgVkfeB-[/-]q5=r2e"DnBaW-0clbngC0l5abW4IE:b[J0d.eW@C]i5Q2a7i`J,]#"L%RTGaFWKF$S1UL(Y6.@[WqjrdF1<?GKM-R^gU.B4EkdJaP92ZN?=J)I.o,HJ(!+Z[5V%H3c_[QX^<9pm;SqSdNBaPXF=j(]^&OC1/%j<s/%lDCHt;poZ3jgdOMd3;NF&lXZ%eDEP>TC:NuRX<_(Qp`)r73cd84q<d8b6A<0%.76BU[!R3#-,ILFaS*hD0*R=*M4V0U6#J,%662G2mEkf8S-,tBWElBuZ:l/i/OU1qcmeW-Ghs&i1k2blV>32#Mr6"8WB5T5FaUbX0nu(scHG`<#\S4E8r8L?cf,XH)Hla2;bX`6%k"LZ3DhX]D8EHTX$r]h<pl-uue9Y6]UK>QKbeTfNF:/pG@98FmlIX4YJ.M^Z.NG/QZ%KB4FJO8M;3YtcXUaGudA,'kL9mdkM@o[`%ND1>!4rm%0@)Qgm[Pa(\7Pmd"N6]f?cA9'XUL)rW-i5Z.-s!/V-]u;3NLW=A+&<@ubGCq_jN4N)Cg:^F&g,l%:MNC#or;J4<hqc(%Ir&2aKIui=j"r6?Ufp:%,0E/rZ8$\7FNR.nQg3_1`#eg.3G_cjP?lb9UC8?AFOCZfaB1\PEeS8g:5Lg+G6uL-c<3WWI&Y\n^hKj:%<e]@$&K0-cFJ18R*'-Y91)[a54Z^2"E#79mpiJtL1)[_W569l)/@F3r&K0+=pgrhb&K*8ZqrJ\`2$4F.PE@W-M^(!]=toYsEIr.(%4!GoL8Cace]-&;=LqlBpS5c)T?CV+2'/meN`j-kqqkH4%pnL8BDqp/R]W#85-8Eug[5/#G3Z<,aUn\WZ3@Uo5W>ipK2<gI$V48?g%O29UKXcpY]QB,aP)eLiL]!-5AUA@a<j/\f?YBNrIVc#i*XVB>^&4+9XlA&?<8?^[SPbmXGbdVcK:+H%`Tq.=B\Bl]"0BLdUg@]F-%EW0b*_\kLbm,E=N/dki`&U3Vg\C334c`MtdkOl6d;EZ5-LV'?cd!.\nMa]Kfn4N@mLO*KF7GP<:iOF^'[J&BTlJ[t&$*[^K*q!uf%McQk>=nQ`(^6m'O%ZI5hTqoSk,I]`,@YSqJAVU\pgQk<L,*0#TcBJ4pjlQ/3#oUs?1]Z_6=GrAeGTe&po6b.gTFlZn,o;60mPdd[%i:Smt]:&aTST4dt@PTZ;fZJh8CaY%49F)r9"dk+(%tuUV%K],D/jF@0\/:OgT++>O<0+#9@HkITF6V-K%/lO9`N[+fb%\Wsc3[sY%QDFfE>X8cAP[e(se?a$p3!QD#-&0+5L4R.98'L1f2Ph"NL9Wr?`\#@aK"pP$@)a1$=FkRRMU_CX.orGI@+VGMIK-uI74Na20=j0E%,*faMpRJ&J<%:cHS1Eet!(F7NEY099mZVNWWpsSl2*tK%QkC)ENC-W?9eq=c_'94/O!X5@R0\FSW)sBSkcn'eF\XB>4'8_%n\OOU%_MK[Q.%YKd.GSWWbB$>8FSs93Q,5h4;."%@<=6c9'b"'1?;q9Pa2a.8h8/dUN"b/M=6/=@RNQT>?(EZ?.$`t.dE7!=joiiP*]+En%L;6au1-FBI)/c:+%%k/BJ4eH^-gKms;ct)JhLYMIK/g_Y26]3!lKX=JKR@c!6q>qlJVsOlZF@h&ZErU!oZ6*1&h1PXcg@f`QZ&+U%cdX)f.F.HMhHtUYhU8fT1#m.q9\._ib8geZb:V)h?6FU`jI!0LDi3n%KYkEsGk1HGh-'@n,Hf"K>o._^gi#b><2CmKl$20hY?(#@%;_<0F2tPu`UuD_CFKMtYddSj$<r57dfM/]hDA1BsY_1PBX!37aC/<ApZ(/+'/D5H!+[Ui]=osG]Rc]aTMr!:pR1#:[1T+i=h$lsO%<0:X#4kW_!)SWT`+,XFj'm9\]@^itR3n!TZmAgRlGTWQc3P23=.dW``C'c!Icg"%oV(O3R^]Urfm"#=q:L#L.hNdY)B4%K@TR^ac%'5m],k6sUta4IqdY]PIOpOdKRPi'7gQ;^XDE^;5=?8ptHQ6u(CKq-!i&\IHI:J>_*0C;=[-C2dJ/<!m2-+/F!];1s<"ZfZ1aX8rJ%jgWdd\N9%'3JB(g9h'cJ\i7_KNP_B!c`TU4[<.hgcg*[S&inbrh"d;X)&_>jhD_4?\p@Z1]kbD;d>c]a#[L>e.N#Z[c?P[`pdXje%8YpO\ZS%n4MY(4[9kQEqF&=fc;D"Gq@TTS,;];+hlIBuknoEQ$\k=Oqcel_X<oe$rdj_EbHu/^qeTAf+#e@=2mXu>NJnd@2FL&;r%#,9Zr<mrM:=[XW6?)a8fWKp:B\*)O]3[M[?+h-XOC-#5O/mh8LEN[0HeT=EkFNCYuC,MP[QUL/_Q)a)5C?_O[dP\&hP`/O)dX/B:%3i2X^D4#*>dj^];kO.i>=48ULd]]i:[@0j[@b7WW;lZ\+KOT7^Tao$oWhr_K7T%E]5J*@Z"Fq!k*[l1e#[N-/Y,+K9nl;aTP]Pcd%>tq4"JCVcnXJSoG+%&!J?F?4saa#dYLSW7pVGeTA@JgfX<H8pYhUG=\4L^bSaWqVYa/=,iR_AlkE>0:Y"%[fUV`U)>-Isd\ZY7hD%A@V-NE:'bo1e4@*YB4,W>2cp$oC#CM]<=td5?[GTSPHaTgM5),TG#D"eMAb8Ys<<,H4R,Sok^R*Vl0YoQ]uET]7ce%>oGDCf!nR<%l/"TSdkD]2U32LN:f<^55K%:RKtZY\9tDSuj<#7rbgikY%;#$t475cWD3OnWC[NIWb8JtT53nZLU\cQa$gGqs'3piqXF/FOW<52m%k"\WTC6g<>I*J3k6rAE\h2)jQa4K,2F0`&%7."dXe8!m"D&rj9?2(H%B$`a)C/_lNSOFn)BK%]5qF3C\>24+;/^L;3-l:p25:'=U%RBG)eI60KV#p'ltao+hAKlj6Tr[P"7Yej4"M8T,%IA5_&@s=`K(smE#ogGO\e22*rC+YM4M-<QI$_>SW(bAb[?%-5927'"1f?Ata%T>'#.=$E3)I+%jXVm$cMb0.>7ZtjC[.'-dT!TtBoS5,:@@L5GAZurk1)V<*t6GQ>KX;0?Db6r)#N[P+HV6j<<j/2rF?j1iOb"3A?%";G;6NZlg(V+SlPg8.M9V>FT,Ei=Psk*-Z;JDYH$Bp*i&W]AR7UN][Q=/J*`Y@C/.TWWKkiUbc:+bQZYDs(cg;_(YoGNBGidhV9f%3]a,4XPIUokG!:J_`_$j7hhRW.VWn6oRoT,V$qs+S5dS&\&/Sj0@s&aOo8?o,)f"L\NB43gEJl;E2T*9@9<s2DR_dehWbJd\<BuX%?@4?9iXL+phNW5Qpo*)7GEmL"i`59,%,Pr9,W:,I%<qC??KHCdV2a8LBCo/ER&"3T\nJd//ELu51X7"p^]k!X@7=c<YUri_CT3es%OcY-klgfXJS?>]aB]-*7h/f`$3#>&j:i%,e\O'^VKVFXn,kK"IiTSk%.hsf/Ppu:io$4CV5Mh3>HF_^qMIGs_1$%ZL0F^1B>/m@)%aoS8CZGPeB(b0%\Sa!R5c:dV@8"2kB^hl;#DCMEL[dSZs?O7*'cR`N<`Q)ASiNp+)50Yd7?'=A#S9QNugb:;S]LR]b_'eNPg8Rf$%r3O+glQ/LX?0L0:pT8a>K?eV#$MIT<VrJO15+2h/$L(F3G`?LT-U4*hC`DLbJ)f&'"mOipQe/aa9Ce+04QWSU",3/3B=u>&#E:Nq%"Sp%7jM7gLmndUc(DnKO>M0Y&:+"CB^68Fin[6;GF-U^BB!N3C^/:ScpX`glB7"]%HE7KgpUKFMllNV'B(;a'&!sZ9$'eG*lp=VI%pD@h*=\2L%k>$u)C.3B@DjN=q=XtXQ=^f.4HL9V`L)g(jO^_iKs/:N+Hn3^&EO.=#')U*B>5#s(8EKTM`SF`>WMhYuA46V2p:_IP%Q.itlLMCNAZi@nmMt#ND`):t<R(Ni'j*&+Ds%TQbDlHiVGc44Zf:@rM=:nG8KDlpm+f2T(n/cohD(.-UH[%'A+H9DIQP[f,4s%rt%g(WX1!'^"E*`m*Ucn8b*?1>NNXfk]Bl"mWl\7MrX<\QQFJkPMJ7s@13`eh#o=lih$PO@J[j]]+c[;I]t9ncH(OJpe2r1;Rfg&=2!%e4HVnlIAoJ9D=U==l,$^H#9:>>'2#\/\=abRXqG*^=ZZ[[+$RbW\ihUWcP2goJ/7a\Ol0>!a'TCada`;YJ3(HHVe4"g8o!LV,M]L%Su?g(\si]cme$+XN-.^^V'Wl6,KofDf[Gt_/)U1o?1g?"<Eo0m4&\=9B5V'Kl<Y4NNAJ/(-`'p:k5MBPE+m#fr[_>`QNmrdrR1Jn%B*lPb/rbpC3B+0RX`pr@<?fU4/j=G=@1:bGl$=omR.RI>K89Bog/=4n1*kHAW`eVaTfm"_)J2P,YN$kNK#-`M!?9\a-8fl,6uJVR%hbkc#!Y6GQ5O?NXaGuTZr`U1]15$p(TWEY.JrVu<prML$`o;5H+^&n7ZUY_t9JKcZpo/\e_+?LbH?o%DBWOgm:iqq&4m0V22(n<[%/DS?k$/&f9Q3'\O]oc2f2+qX)drbj'cel'1hm5!H9YKSD?h]N^;qtU/m[)(u9E:IJjhJh4KjU$QlBc=X5r&%*Ia4Tg:_hV[\ZiYf%aOL8_f9]F:!*)GPW!6)a*"l6_-f:jMo3P4o!]4'_aD(W0j2jc+!&\Rc"''k@CB+h"@\uI*j#?7;e;>0C!]4'_BV`d?]aE,2NKktR%:-/YLZNfnE+'EIT9tLUkY8B<hA=<+4l(rd]2mQ`T;SLVSE9CQMB2Z)@e2ha?V0iV/ZMb6!ngWn0CL>4sdaNtQ\WdV-IIIHR^\(Jg%p"QdTGq#BNrKS1(asZLQ,PWnI'btA7F:FK>+7Ae8qOhr2hcXSZ.GX657P<I6p\LjcN4[X/)J;FRHi5SC[P`*/T5L7K<UTP/^=CR!%fhaa(qADF8lEYd8KQ9K*Z_9"af2"J>&QWsXj'FreK3]pYka["ujMR8>lDGIt3oaO2m<g7EIR)N3]me[&1Kgo&YMV3T!7AR5:O>@^%.X(?qIYWM:X]*It^Xl7Cj%R!1n]^PKEU!j;Hj#LUB#erf]m`S]D1^8C<0a>-'oC<OW/TU!VsWaj/>Z#.ofGuSq,Y8Zn)M#Hc262g%qJ"jPGKG8\`]$lHCIV(2f2"13$rs*0j'Frf6Ug*;5>_mYV<'-E\,&\e/hXZc:NJ&7XZeD9h<UsM>1cBBnf%9!C#A3"SZ4MEHd&sn%4hcjBp!_d]3iWoXo3OZK>Q$1aO7.`pK!k%,]D*'Nr`6e7grH=.`#GZ;0QaLjp(jn]g\.@gr=nN<6q<,lYZu:RT/^KZpf>-cX3sbe%cTn"JKmWbTpR;OUp9/M?T=,\eb'e[#hpj<hO7*EbW-kZ'H2$j"l:WXuhJdkGhapo>a[+$Ee@FLD5OD\R1b'SC]%?C[4_Ena5A`2H%i3CJnooo&Ak#J$pC6R)ZIV6UqcFDJ%%>r!N)[tThVcPZpSU:=BTqIe$]m>Y9`0r'=>Q%;V4'aInP'd.\ass6=X%2)D]@Tj#$kTUO%f=BL/S!<DKd;.P'a&>YdRWEj/S<98<j*U`"Md)d"YFg!SUr(6;B@K$Q)!tQ+:<FX-\CXO20GNcVMsg8e2@PXi'$n5B:PG%gXaY"H%,H'DaVnHSMZ<l^#5OEi+`Tl/5me'MT(oe:shb,_JKq@uBNjQCkr-SCL(C,4#kIL?`.5)0jTFWUa;Cmg#7[MeN60f(\'\X#O`TDVP%@+Sphg;Pn;GV:XQP_ZW!(`'_ag*C.r=GfIP829]PJtOlM6O?^k*:/u;U9G]_icoP4/RH3j*n=B3mLG3p>D=<03K%[q4SlbB\1R2j%+3K;Smd55K^YVo_$6>,:12hB?2jWaSBuuK5rgWn"3.BJ.\Lh"JX*2BUIrE!YG2mcXR?&<9m/62.gLRG8m9&`6^%2'U`]*Q^qtkBA%ka)2Aqr^8uknjg9DWae[o[@'Rgkj.mrL2Osf!`KA0S)=/c'hu9Xk;HR_YMn&4hG4lHUmr,DV;hFel@i@1@^[Lohbp'Yn6`n_OVMI%ZP\O1dMUY_+gLV*q>i**+2/V)QLQa-n$ILYpH/lC^b&ffAbrms:.68]i07>?fc*t<NXV<B[!%B'S$Zjt`0"AD?;Q&aHFk]AP.:db%b,%SE'p.cFK(f-2P;9BYGd./&^&)BHX71c'je;*3,;iU=a1D<Ah77@Q?L'54=QHTdG.D5bC0+?MR-d*(k)2UC1qf6gObW6.Y_AS%%hN1a@KpdAa@0,O)=B_/P`"up[7'Ni.X:%U9'q,e@]JV>N9iuh^FN?l:ESHofQ<s-scWU:n<<O3e(**2B-)-P+^Y[SJPA]P,<sa@>%\7;43L5aqON=-i9gBniJOmfnT/5N%QnC$D7#M`a-\;MEoSodr3<P7rA:DRQ,+,?&d.ZNT*0dn]g\X+.4`ZE?"rHdE@Ig7bR]^TdB%@&DNH5c/ng6eaI'h0s-0c4K+K"eFj-TNH@H^;f!m.hLj@?gor=j`YnL7,!8W#O[bs065uuX(.@>lnk2F=;]ER]""LVD"Yb3E/>YN%X@)u<8,T$<O%i[SO\bmgR[W^V0[U!k?1n*ai5(7>MO,8@'`XY,e@>G@)kdMX7t0rb+)U!Sr6<P>$)%S4(+_'-9"71&Y655[phAhu%5J#Mp_[Z$f?bO+h\HAqmW$!XP5.8ie>_$c70m%4o5,pHe<t=T\oaOE/$Kgf@DZ>-3*WStt*qY\9L?%:rdZ0C-JiW:o(pRb,<NP8<%3BshVm.jE#P!ETa.M[5ra5/>Eq#Nmu%&+@sjG=h1Ll!86rnD;<h+]T^F>ruVMgUI(X>DqEgD7`B@*EOWDRjY$:"ESJjlK-C0>b7A%cOWBm&MXYjXJDL8pqh&1;1,M*/DCt2bn0V`d3Z:uqmT?Hl9r`c%Cc[+;'Mk\#U73=(qaH(`)e%\;'?,Oi4Pho#Q#kYp6W,+F5&2g%lHNC>r51`)\kCA_$9OOs5F,C@8dj6H;/L2c@hks\?4.TH1F=VM1dIN5PMfBFQM#/T)5M&*H`GUq<&:gaH9%"h/Qp[//-J^)>bEZa%82Ic$9.BN2$^?Cd#?ehC^:nOEF$CQs*:>nT3?>sW8;3aa2o4+%Mq'N29fn/=6QbT[Rsgr<:dI&4p_ptM?p?b0X>&#'8<R!#PA^:m%0a%UNcTB1/r#b\6pXm7Z:g5ouC*^5T@gU]AI$[&_VlHDNklT:S%[bU'cS'0:,jtJecm#TUN]^AM?h<%ifVk9%VhE65-_-]RFMT`*%9pB3(i$FZ#N[U:PBbRKW&#Ykn6-*OH5&SZ*ECA_;Sgl71`$&3uAr0OdZV\:GaPD?c!>Ur(Ck=;^=A$)Dml<5>#A8i)U;,p@9d!O.%P.9,4J_Q\>$m0&h7:Pb0QUbMeODuWT.kY02\YQole]JIOkX_T5T9\<\KRFu=kRH=4*uA(XR+6&*#2.8V\AqH;+RaI6&(m%IJbXPZ%]dQCi<&(ud,m0MFFaPb.gUt]o)u_r&npYM9-pHH%rA+se$.rj6@jTGmPfs5!>4KpBeKir@,)F(`;?Xbf.pRJG!7?WVclA!dd6g;,%.VtS9C#C[p$k5?2./RZA?3;[r2a^!J:"kDtGM<DaUObC%I(LVS'2DS*aAO`R.W"7sY^0`H#24*]F_:tUQuG`u8g)/r,*7Yng_uRF%[s:r^>S*7p!Z<NII'Zm?fAd#oE#`n&%X8cbQn>6"L5?=b_Li)6Y#l.l"0<-9K7<]<:dolV#ECWs1^J?)9R00Aj8)aS_!6/'#F>:*%#%7-<i8&2jX3I8a7jF9MLb^#uFK*6_777:pc8#i.7P=jc83$[Kj%]^#<;p!QH]LL0SDRi7B^8OOd1N^&+9qX(&r2cN!&#-,d6R-#%F=9c?/qFLQ*hRQ?8ZXbMUSV%9_ON>G2I?k`fI.4V/.DI&+dL)<G7bFb6?uFrZ;W+:NH!bI;V5LkW%1RZ++ZYJZI:00UZ^;9+Q0O+%'gPT_0[@7+R^+^s$n-hOUOUk`PleM4:D.?a7N>7+iX<-'5`]Hu'IN/N]T\5o%5g$)![q)?J>%BXrrn2uJ\1)U&hFRMO>c-??Z._%%QfntI[0GqJ6LbcK*;'r[46X\(:E3u%U@"/F%?8V`*thpG>Csu_(!t<XpA-3>$\%BUcHsLL(cZGNYU5L3J;rd4E"Ce-T*!,%61"D7%j0;/<XmTjLJBic.T7eSB%iaOa<pL3e%;862rPqW/#l#k:=,OQ'<\>Z5+-M<BMSMB7D@m03=@Y.s;,K?_8'3"bs7\QSL-AQNTV>=P%an>G)Uom[rBKC04Pe$g,#aFgW,%+n-BXnEMhQI]OYL5ef^sF3ie$so""GR[c#&MW/'NU95i9%lqamC4M%*`n<,.C-rpg/JrenRMU%ET.#bfNuBaDgB<q8Mduso6,c6_dM+..19Z!RlK8,I"9rq5g$.LR",]N(OCI<(`uV\?uRD\!app!K;o*VG"(]>A2Pt@^d-lPJ@&B9%B-KbYI23H_Ic1hp#FePNPm[aJ^2$]ZNDEg^(jRR7<^QC7"3B2TA$pbDIA3GmL<jBF0`HLqAD0p4k8:mbat,a$SL!Ajp_;_RIfhl_%4]_E*!q^:OCGc=g1^,9HaAbRiJj'1UA""N^/<2B]$S6S:4KuZ>+]T:BlrIbh+^ieVHGH$L[KN7m$%/=n[qK^]ZP00G*dAgh7KkdE%)(S`@\tT7(8bSfFZG::`$>En'oIsr7!oLH:+H7<8KJP^pAGLNS88fT?-EFj<<s9(Q3(j\"(:YGJ#N@jm!:G>F>V\e%O:Ro<;'=hg%'K4m!J#7><<T=8WHif@I0MXN7ne\M@2TlM*a-is-gFgqPX:5Z8P)M[JF@-[P^p<'r[CHR1da]=FJSkgRoK/b"PgbquNp?^[`hSKW%$X5mgNKB[aLTf!uPDs#K^>_nq94Mj`,;kYN!MSFQZHd>#UW,]q1COVC7)-RU$h"T+^9#a'?3k")D#O23NTcti&$ik]2%^e%h^k`j%N-%8Ni0I2@EYKVN-49HN@K<)Z.H+h0CS:MNJ7qSOl!rb5JCK\r%(=gqk;"-1iHtl:rg[FOR.'*bUOHM(Dt=o,MSK`iI,o#n#oKf-%LQ.HV0'nA'Z7dg;D2#bG'H!]bXkA[O8*4Y3g.=]AaM=q\MS\m-q'-).i,6pO[p-6'5/<38^^#;P)2/Q/?@%pF^Vh0]alN?Gcb!O-%UlOEidlU=\"Nr-mr/=895V>I0]g^SJZ37XT[_qNt';"V0]+oW:hQ0!j$aCtu#2K,*Rd>m)?O%bXr;mR=J*-<cE7cBjMq^-cJp/pU%p2<Zs"RK9dU<G6N!?qZPNt)C=!jed[9aM-c>E/h+;N#L%Vo`\,#]/HKir6TscLX?`_ft_$28BI$Opg-Ba"hY13Tl2`lu=`l7a69;%5%&/X\:,+?7jUV+'[m9&F/(2jD#c!ZbaghA/r7r&g*Mhf<?C)2W.CUZb3hq!+>>(*b4@mZH[W)K@3>R6"PmQ!k_Oj!L;B`"n1990%rY(^bFKUk#U$<3\jU'?e![-LF!s"WrL-`'@\sI(ILR9a6+H4U#6d1f.!,P,X;D7)R"MRj-ND+`63WO,Uk(9um*Fc`FLT)9I>^;EZ%9b7A5C62>/aV/G_XAWjFq87hdd[!XZq9V.NI(Ko74(CCM0e0)ga%i;/LrZ$#4D'i(SH=ko(duMV>/Ln)`htQtb@=:%O.A-:J]F#M%g^&s$eTf;W*t59m(45TMOTRmc5G]K-"uIE,OYqID');%A5"Jc9F"#u[F/9XBW3=8p<PC;_\.F2^=(J[B%GX<8QN8J:fG#^3H0O%X%OI=+8ieh%Vnj\KmkV5K`K+LZ6iN``8DiDaH@rpd3EX\aVh&MqaBHR5biM?O9JNUeYN/V#e$\TAuCuWV8`eV":!QQj;-j9V4%Y-1Z%H-kt0$F,8T[HM*O=se<OKstO)C2!d-VCE"<:(<+!GIpet36&-i-Idk`N`c<VkRD^Fk>E(0O@=M(jN@;N83q8AT]G0$]@J!.rcjDt%F7&q^XRnPk_,R$:c9"p2`5hj5bAHJ;W?B>PJIa0e1@J]-K4,E>#^DHk#3TRMolEJBp+UmHW&d@5#,+AAGPd&u5W87Rk^1r6cOoa6%(*LS>))mm($0.hU9V'a/+&9Hfc,%5Ure^aq'-9Df+#<eJ=]=3@"Va=t't+pl\b?s#EtnJF04OQ\lS=j=hY-/aX.FrT&5J1Ua.l&m%aUV5c.NUF4R?qk^YSu^#+6!ZYMKfJ_>At:q+c9SUO*_dD*6*j44?:c14s=;HYHtZ*N/$mc9NIPFd=_(O94&rEOTKnpQkX6FS_emW%-@fI\\34$9B/X-J]f`"bQZ<)o%jq\H\5[,8P)A+9r]o4K`BO_fE\PUK#VZd4E/Wj!Wu!/s+2(\,%8*"nQQs5-V/X3c#T*HGF;(6R%301iaPmj1LET!G?*6U^`9[N%=Dsr;1UbFDDK`kqfmDD*CBb>>#T>i;)]4KZW;ZNNsdZa;;'Tt%Moic5?\Jnl"M!l'TGXJ!&>;!_J%ZjJ-4GmJl]g"dt>*dfG*WFVGg#iBGM+8-nFR7R9G3R8f'D."TYCjbRZk%pe\75)-4^u["2^XBRo,2Vr8LbS]L)XaK^Kj<5q=<1;r%g)K*.LDIe4%:,=[NWg(T`9k-"O@HAPeq?#HPug=[ie4(8_^!T*m!sgd5#sP+hMY/&'6Wp5'r[*'n0`&mP-BLt&B9<?TS?UB%Od#!%"Q&Y=),"87KJgZ.oNdn[VTZ^Y.KYT(f#RrY8T=b@C#VLj5\146eWPW1k(TXg%nLWY:]dI%@NtjEr#eFhc6<7P#;$CWoFVLb<8;/&%T5ZFKD7#T//fONC`m$YrL0pNFC`(oB6ua1P,'=#F4-^37Am\-*N^Te9-n-F>9Hb9Q7iifMh$Qi6J85K5KDB#22np%cdRlqFFN+hk%>OU>,9GL>CGL*T5]Y)qUS<bgPMa6r'U(D!qp`_o:OA8,hinA;u8apo,'X/n?if^c$%O(-KOPK<b8)T(I[XS7Xh^%0P4om0gm,(P?%\k)Z_jZ91/:#?k:-pGf%Z1VoMG13,^l18rN:]5SbZGDiIDYU,,,ul>7L(]^kbOYt.MD\D^j[U8*3,qQhcXf!1G7G]f5W655P>0-"%'pBBb/&S"W,'k2^>5&e9e<Ip.(jEcfdAt5U9d;'./a<dp_i&n@7(SioPY2hQZ>QHFn>l%!WGcgJh!,'b*KbhmI<'&3UY^sU5Rr\#%E&3UgT:bH2EcE0/0ZNtKkP(*+0>QQcIRm8-3\j<9STmtejl3G[gT)`D<a*L`R-2s/bo4?0+Ym5)I?F%L&O&0K'g!?cQ/kcS'8+o/%%*YqI*G#eeCScoCGuV5?'TK(9JWfA.;H"oMHPn\D%0?fgA+cRm_=*=&klt[+4*esE3elIGp-HiBTFSVt-e3F6??<.OZo?rZ;"d=2%L:l;>G0#5dMXgd!-nSi4]jVX0k+\?oQDd3_2h)&'2rA]2V)q0h.ZZ"%p53@f+UK%li&uqrR4"JX.I:Kuo5-,`CpTHDVs8KV*1O`s%3IJ#&DbJprPQNi+Wu8F*j)NJYd*Vho?\u:R697.RSPMVNn_V0!H2gI5Oj#L?P'nI-PHgp@kR*n"Iib\BHuO_0)G6W`H>8tHV!>!d%a&A17&'B=.lZd/\VS0REFra?f@aXbsi+X(C1HdTTHG@te-Tj]"0Luj)0D3fp(9+LWRQREW4bD1=@!8IsKcK.i_C=%@18M7)Krs9n%*GY:a95ZY6F0:2YYgSD9`1O\6Fqm(aIR5(.Bt2X`Oe4%&m3P%qEk0ad&%KcdHAJ]Y%GW7%20k@cfBUK\P@e$RfpVs2BadZR=2)M^%@?0T:ADbWo5LbtTL%ZA`FsUq-#'(6>VX/01P:#RBW8\H_)jO#eEr6Fc&NU7j+dE''.eq'50'jA0hl,X(RB2np`S++d2?@t)g8I>@%_Qd4]:XO3#cJt,"8e/#B7&<E`&eGu.Os2:1?]%W\p+Daa"kR"lERP*BKuNZ^e$7[CUGirmNs`dqq411[*bT?B,Y90+f&;E.d<o(Y%h'lCF.1;J2!)u](5HH[^EW+5ZAP)uC<i8c,I;k(;Q#_[D+q'/p0=G*\;X;6[!:?_hW[;2U"k@`-I+p9sX+o^?3T[ng[[TcF&KA-l%VH'F&'*5)FZ;m]2'ChKPL972dYJ_oRk.jXV)F.8'&_KLB-I?8uhCa+j'ktE'XoPNd'm?PuP$(4G2A%thlDdn4O\M'dpla0.s%W$!%rm[gG=[bq@&YdoXXWf'\8<c8^-*'SY-:0R7=1*pMCa-uHYjfFuQ@Vg*ce,!EV2=B!GV=Wj/l7Om\FAMMJ<>D%&_p*j0OSE6Ia-0]%R/s&_$leB&4s2+3Ye>ThDg$h*&KC,"(<K+B4g%lrJ=)M(*',:%($WL1!8dZ'_c*%RB`-(VOjQ]3+19[Y($ulcpE\3YAf*fCULkE9%:7XAh1m/_Gm(.[hdn"'f+e="/dn"'f+e="/dn$oOJ?YPR)PO`i0%2[B/dgke5(:cKq0`FGQ\8H-$2+pEXW#OdiI%pF!O."<,Y]Od%8k)/!Cf'/69uNW=Xf[L6%pbqDgZ!3hih-RRco#.O4M`nhap>UodW3bIg_*8ro,aW6J^2+sWAHGj,"+.QAO,:J.T^'!q.c'Q^dlp:%Gc9+2<(JXis1NSD@E^Z`HTn>VYY8jC\!O,I7tPjdlR`#Nql'<Or#`2YDpU]Es82\[mI)-WQoR<E"=[q!00Fms##O>O=S)igVSY)]%PQH+CT%_-5Fm#%!lsYS2=@q=!Bs1X8^P=0ijtQ<D*d?NrdX,*8Plj"eLQ]Snj@DM$K:9$H"1=h\>o`4!7N+u7Rq\L]]bpRM=40]E%&/M1]gMf@lGLBGJ&ZU2c7Gs^!nVRhb6WF-1Rp2PD#)bqbN5/c:7o/fd`)Dk_5JG>BLmo<_."PuFKG]Z]FfmR'ZDkY<(Y])cVh9sL%:OVq)*I9fVMtAtk4@:*L9*ZL(^94_81kcT/,q!"^?+dSkm3YB5p8(WF.r=ToVeZ.S>PnH9=Z=sdg6Z\a!qd[p`UMHmj7KI%['>[r%\;u"pn]L8.^e3;n<bjQIeYnURb_V0*C.4-7:od@@83:F:YZr>dU`D8NXc*4shKuEGEAQq78&02=Cf+X]2Lpf%UR3?*<4!CAS1MjH%AVFpgok,BD<s;RgR3=F5LO65tIXSnFaX#Nfdu@2&qa$o`<22t`ZrEfd20o)tm]orY4D]DY\`:0m(ZNHg&?UfAP!?>E0nP4]hcjSK%41c!B%++D7SHmcn>?a&+m,tNKT4=+%ni0mL\a.S%'or'jZn]0^I?"nb9&k)SqAc8eW=*^*qA^_nQ]#gBqAc8eW=*^*-qPpN7N@s_%U2,F1Flmr#khX'^CXG$)F,VHC0#TX4F,Wd.RW5o.I?"n.GFZo8!k<P1pZjPq2H-V-8Tr=h7dgg?DuIU3HFN_%qD#/#9[u%5aYB6O%\e*JlcS<ig&CJ!=hN(k67BGs!fC%5as)5%.\(&!qXm`0p^1SWIr0H$MomJnG@VQ`EHg1)!G\6TY8WCahW!;LFjp5&F`?9`JSNGLI%SSX<?>5T:`L[3QQ>Mn?9;IEDM"hVk5&q=@M[YR/8RsD"8chf?W'09lepbTi8@>s4<_c:r3PmoQ;(_?U^"^If-4UfTl>l7Dtf/^7o%RH<daebZYHO"8QF$k%L]R1D*Fd)S=gNS!sF*;\;(pkX:S/g0ek0CWsjl9[fZkLtKJRQGp[ToV"9_f.3laZfg7N".mabLs30)iGg#%oBRi2<BDj=T1s(t@qU"K_T(0Elr]`6ER@Mo8#MEg8SY)T$Xr'rf^pucZTBo=&_OAQpOD#7F@\-caY"F5LX#nSM4_e94%F83k%sq$%rPB/Rre:/<lKcA/WCq`3=ZX^o?&e7Y]P/DX"jCq7g"ZPR10BJX8f-l$s0n4\WmIE"hT]I1[sd'.dQ9D]7IB(^Ib'cD!\n3I9k_:S%DNl^,D*=m`f)"Qee=DpXZej9.k4baZGL%'T(p:"J)db8[0O0[I:`k&>gc4?Jh5DiJn1CPD]/rAVdm/![-3mj;X&L,N9'FG6L7&$]%`G/L-^bZ9ra3%=oa+!EXqs@&$9bOCJDpA>/D;T(9<&9FS?G4+):V3!WmX1C/ftt,FcNio%+A\h=C8ViGp9$^eHB!6rGNW<,/tnR1%D9hPJH1d7sR72Ddj1jKHF,Jif"fdu+X&*;E2S^j>ik\4/0QuC-%C#6GYJFIaH.C7-LSIhTchH:7\bU^k9!NU;Lj3=*p:fmVo="H-%bl=U.)KXiV4BIU3DID(&"n26>)D_3h0`mWS_5gnl8a52`\eXWmjm!\6C16)i427AY#PmH?TBFmnjRYsTLk>_<:j[*3D(^Mm+'pVp%l0bPR%uVJkL[H5T$!l5Oa*@QP\<GG.DN6o!meM'Q+i2Bh^O4m#"(jaokMm<C_7"Ki?_`I18,97lDYi0p[=TWJGQ[s$A)(G5T_ZNa%!BeKA""t<N]Sntcq>617]]AJj(ZZlcPU6.S#kD'7je^4k,6TR)r%S[`LrfmJD&I.%B!E`8r/4dg.Kg^[,[S1;N;;6uTMF2m3222;%+NCK!:Fm/hjt(YT?)5E"1DnZ!Q>q9n?Cu]PB'WBc`V()Tq"`V9\CV4sc*)dN0-2d'LURZBACKlFmRqm6QLE(9\?ZRi$8n;]m)*"M%F8Agd27nne[;h2pb-`VCj.N+,]&36`!>WAf,cr-#[;a=&SsmVE`iJlZhcDLt1O&H:?ET"JMa-X;JfQO4H*OpJp+EQ#?l*1Q_^-Cb%E.rMX<S9HXYRKCY6F=<)[l!QhpjK_1bYsIc&??r8kEiYBek`*5Hn%q^oR:72G'#Q:naq:i#qU604g*[<S2`^(lW?sQoR:7VFN6qD%ip$D0I$Y3MIui&[X,if+r;GHXosL"^`*k0Qi[I&qce@@H-R;_VE?ia`WsL.#9k]O/Q$GG@LUq;?kNRq)l`Ub8`B!Z^S@/\"nT>@9%f_\D'`^XHt661qE=\GO%]T$N?3F%t41,^Xc/6)TGbiLK:@a.YA[;FJ:,?S5bNMC8+G.4>LQYgWT:cB2'UiamQ&#Hj_SWh('8,:o9%eaFS-VFH[4L'`"lP)E1#Rq>TCpmFh3dG*>2I'0X-MckI?QsN]!m]Ks/aG7sl]AFCnTuOLJ-`Yb<7^,YdNLb,671R5R[!5i;L)d?A%qVU/To!%f0T5T/WHhH<!rGTL$M8s:*1Dr>tj0"pJ"%H'e.S^?+E%-8&D@\n_"djV=/`J&:i]4[3_;dQ$C!W=WqepW.oa1E[F<;Q>%*qXO]5V!NEGk!b^()ZobMoQEiBa=COiGjN\XKe1/(`pH!*]@?[DfA>mAmR](7DZ;?)o(:fo35"&[jc'7iVa*CHs]ba?N9Z<niiqK%`l&>`fAg16Y_ulXYbQ+Xs)9pZXTks^SHj0(IP&2%kid>M-:t6WnF\IPelQjJ[=hEQf/D:8-_'mdCUg!M"4*\mq`d.FXmoW@"P9P<%l\VSs_Y'nTHK)#FI4DUiS1:FjlVZ%*bgEj#f;Ct$M,BR7cFnH8pK@E1q;g=h-ZiN-\(:K(jce(-:ZhNj:GeP'dd,gO'k7`f>sNi)%9Q5D0[,uNl2-ca\Xj_a(I5$Q5@,cXY%Yr]<,s9C[gWaY#_=cIBrP_"Y9s(q=Kq2jtZoP,cjGp[jI!RS\U,]Y(pCd*9gjsn.<i_d.%9h*%pD6&5W)#gGnp2+`\^2n(&Vn).8D=!OkO1)eeIe[F@kBiKR=jMN.Q$30S;ZX40Z@0)Ss4:C3O+=:qP(?!dHFQlT*9b<76.^r,%^U.("GCH'2V>-j/iqm_Eq=*enNk=<C<cD"W#i8"WJt)LA9c[jMcQC1/4aDF+Fi33@U)YRY"D81FqtsrW*LZkOY'<_hI(C?]MqiIR%VB!u[_lnE;`uj4*NZ]jl's#g:^)?,CF":[/\]LV%(\9;iq.]?,Xl$RG-ShdiA2fPJQqf/gZaa`WQLW`(7mD,4=2(;U/S1[FCZk3N%%#fmU8ps/`JGXTT6Nre@g(bmn$9^]Q[@T-N^oP6,l1qG?QZlgmc>J4WX=K7oh7n=NS2P?YDlk's5]ob-_r-_&>ZkCfN&m^'"Gbd,%I=lZe\0pg:S0biLSi&4O+Z/Y3'aZpb8tA%,5nBJ4DhD?H*k7bj*q0$3q=M[FO4G,^]j-FbR*ISNbnoo#e*AZ)(&-#o%s'5E*W`Po%L13&efumlaoo&.$9C%'#d]Ik;_]t9#/e2O]T>oS5Bk(0QAaS+Bbq[5lW3_k+lsaF@g@:JKO&]O/)`>(pB=6P__]/6$gp>N)W3ncC%Fe8FN[C/qd4*uC:>2,:"i3`1UkrY?AM#Wf3fFpD&FlKRfC-6j;-`4ls=`L`RSn>7$da?`+<T2oGD[u8NEg?"Po[;`[Di9BHHaBWM%mnmj^`PGm)*d"OOPRVkrlP%abCA[2,Io:^p9Hn%(P2c>XA4V_<,B9"3Jgb!N8BM6!-:;gT)$)gBU>\<11`:'Jk/rUQ-=^nfT7!?]%A?>/A-fp>%R^?ZgAI'0;+Z\,49T7G^*,A$r_OT2=balmmoA6qg%E[Vg]mlqTDmnnPL5VNJ@r4Sm?0jBcCYPF`J#qTm\(Qdblt;(M%gh%M3c&^,2*,A%%?,gDGGb<26E>Gl=N=t![\9N1:G&ac-&Wu/-qsbBBQ#tY+T\BsJpj#"TiLEc8*RHEf-;bbqGK3;i`sNO$mRNl5%c(-:jb7m0Gk5=gHQ`c,0MbalR><]cEI]!$Ye#_ZkNkVak?tfp)fW08Fj(c(4N#R8c^BP<)%c8qU+*u-#<t[1keA948^BRB2FmHaO%8@SOf4lti+%=;fY(9c$%=J>j]EB.9LEGJoFEQGK9iTJ1tqJ?s*[Vmbf-f,re5/*TN=&@LR#O6L0En`6V]f'Ab?<j[fJ!U(ns6p(c%bcLfq/"G9nZa[,]2J@<ormcGk\qdm%0MqE`[,B`NHbFX1PeDEmq)UY%e,+<T;;YfZZaa*-dBakfqXKbbiHk4`;0HGnIEb"T4q4^c%HaE0JK_tL8Q%kF=QCk4^N'.]?jO0)'Y*,*LN+'I!%ncSVP"*-4hR7fQnS"Ef,c\lJ,Mg1Qc;B6iI.T;A+Jek1-j"Hbio5e*1-b+k%g1PEFUAtK?`BHgds7VXLIf$&3OuVq%ZK+P.h&dq`<<l&'NO&[2LW5=dPO#$k3</sB_M?`A='$J+I5l?/HRn.KGo&^.Na)@=-VFDL%nT4-REQ*>ib`0T*2Mdo,nXl36>PAP)`HRNk["$p'ooiSb:et:'BE\q/<p+DtE90t5:7bQ8VCjK.^.tbX-VFDTC)q<CfNd=PRbD>k%WHDfjE+46>#;"THD2LcL5$2iP]l6&flAp@+r?@h>^[5AJIOSsZfR.f^h8+g=cMD!ah9Gu1E$Upmk$`_\p-r3ZN6<V^fNF903]u*h%dhUZ!]`sgN4mN&ZS5[fST*$ljD8(.I#OY*mFEQ4&rgOqHUp"dQfUK"InRA\pR0IDoes<3UY57<W@YgSCBi\Y%5MQAM]@jtnZOJ_8%ma7VQomSN$+Rq%N[P$I%S[.0dI)d6p_cK+2!\&1J]uJB"5`a%<Gh`Yil@]!.(,!kGs#S<Jf!uH:I+;WNVrS?tQ[APOGE!\+B>R.q%W7d"T'ePGA:]@VAG_2O"pn>3E,J3KtkF$ct30kg[E?u<aX"bn\>5EGFP,#O^,40gtAP\#ejX<\CqfYp=^W9`1h,AkZW2nT5pX4aG%+lG@e/'DA][l5s8%M1f^4Eu[iPQ5,L1R+m=mV:HDCVi8)1OirU:2^,.Ac?X]rLa0ZY+BDN@e:LBjA!kcqeRc(<<o`$CtI"7QSkp:%DM+^T0CaLq-`_KrdAEcX8K$::%?\J>DElmnUm%0Ki!;NQ]t>#&=(LbX+)\nrh-E71q26eI('AfUq4$h/J"u2750lPBp9?Ck^f-Xc%Rr/.(#4PUS07D"]%,e,/TB(VfXT:PLq;WINV`'(#R_P3lQfe7q)aIrK3I=s=1qcbr-1G/Y'2q"Sj&`](%mH5kDdtk.EgZ[?#bj*m%^f-Z9!O_)Qra1u^0=:XA\%B2WN-c58T?occ\W<4ai4cnN0S&NjqWcL$3lPrbo-Nh-?,!(\__;)\7_Al_j-lHEH>j>io_&0m*uE_P%:M;]E`-iDHbh;Y#Q(Nc>6NDAIHJ($F$%(@'$LogTE5um\q![VCaX2jcH[R,UP"9*_-efol]h'D[C&ZdDM0!Tu(a6Yjqg@g+&kO6,%`SN9Ya#VZs$2g+!2f,h0d'l^nAe>kU%Y6HprFDD9\Mm+PSbk=:,aSV&,VX#_:U`oc,DX(p(daQEke[K%n_&'oltpAI\.&GNZUt_b%_)"@=:MY_;PPOY'ih,]%GWTb)hY5U]g\>#haO2#FDge`RI4U'M`BXB*MBT8YLR?:G)if?DI:XXoBQ.jQR4QRL6Jd_[R3k8n!_qg6%X)DK(R<J8ji_65/*54CrW>Q192jp%kJ+Zbf1[[r!SRq7k(Ai<Ac#4Z*_3fWg'0ZW%fc$Bm^[b<kbkNb7m48@'\[HiSP<!HWnG#^)%mMQmZB,R/8##*Ln$G=A"g;n(H9NZ3BF44,tj49d7Yjp`Ch3_=Y2ajbBkE!ApE$da%=n__e3D?[$hL9sYP25p4loHcWXgs//hmVLq%LHD$5H$oe$im!q9/K;1MY#Ar:599tes5;#)T=I%1,Jl_</iM[(T3TAuHiY@;IV0*g%fAL[]6ScVJoTL=NpI[*W,SBbV"7p=F4f=T%Fu*;#F(+bJG-em)F"qk0hPH(.F(=o8O?JWJ/^nF]q2C_GAoUc-HlKCnr)W:7%eq_hJVc%@^q&.R*&W3(/=B^]KlH`M,BM$lg=dKR%\A7E'$.QF#[_Y[f\WbT=`6)N5hSsd^bS"mTje'<6an@K7fB`^cB/'e4'jT9r?Upa9P99VHgd[GFDf3hf@)fk^MM!l;>ua!mmXk/^%lAf%(muMlmm@5^Xe(G]WZDU_t\XZte^-/kkdT'"8?/2%*ZUNV4I^""8FB&rj4'KM$1E*qpimXed@B8;L%;Lh"7LrS%:1<kAB_9`p%`>>kY<fJ0^+1mUt[;,>1*Bf,0A"sjh<@+ELjgXYI#k']upk^B1\EOM@\_lcDU,978_OE,>^V.I%fuHNq4;aur'"bpWrc/62bj'.q%nb47mo-PGuQuY8Y`9F_lSn^u3@VXPqbdc88U-^W<7Hn;F`oBk>)!@@3WV7a0Bh`2K9IK;!lms@LO)7bj=M*79mb@@o(8YXKQDAe#%##?h3X"lE9oBuU#$p/hsmPUE>,BXqppOY>^dT:n4=gj.\edU4$j]g\ao,2>kK@f_Qb7.q8PB0c%jRDDpO4T(.R.A,eB'+;NY\UT=%Rj2J4hYW8I3?,_ErEj>-Ip^rLYMR%IMD:RQNCVM;(p:%Q;C7[<\!O7K3IW'SNjmDfm\\`R()F59L0<b*4Sn@TD=X<+Q8(8@0&1Gp%1Yqr!44s0]qj3(MG&FF0`OsJoa(*BGQ\#j"\T2L_i_OS^N@?9\cZ^WTB&#\/I3FH[-h5(%&4Eu>F*(bS:u_M]h6lDV8t;M<3SL+s%O;sICA_o=c$;14:ZRm3bVVLE7Dm&Ne>3J`p<t3XTIP*<D$hNK7ef5bo-BW=<@%<DqeM?OOS<5\Z-U/=_dkl*">Qee\ELZs.0=Uo(%6LJ%7*"RmTGX%c`L1\GqY0g=/d.^Vmd2?h2U6`<TP0W"ZDLQ;L"%mL>(KZXqoUT:WE5(_9A'*js*pnN(]UU'ZoJ"_m'P?fm7W2c$%jB1d=+LA4OT/@).-q:DRs5g.jmu0a)PSpFFB_;:nAtV2KdHf+DeK9]tRLE._,-bKb?FYA#f.2@J[$'6MqJmUHW$aZilue8o]SIh^%qe-4[EFr<(p37d$cBNnFe</DJ9J.9B^%H)__p@tX`oC5q4Hg1T90Qc0cF`tYQ8/27PMNlpFU'$GgMQ-1>6.KKYRUq_(%XIFLVP_s%CZpaBQk&=ChXW=cf6.dj?ho!iZ_V1l`Y43Rj5neCH`C=Ma'"f"k+]^249!a(ETNpP`(/LZ/hRsj^s8/Pa[J'AFWlN&p>r$C'e;jN%Iu[c5?S<FhMi)OtVV,[./ul+A#'*ScQ5HSU[t:$.l7ho-'7)"[`NcRQdOrh.[IitF^VS/Z?eE9JSV*5W[HLtN[;D-_kLCQG&]3@U%gWOrUeGIu^/Pia*R)2',eHVn@?05qe9-8SLpG5S`3eTCS@m!<bflq:Fk)t46mEK[);##1u8";gAonRI7#RHogNS.&'Z:OAd_QX#E%M['^e(UrfSi,MMm\GH5i=&9BUa2%%!>]3reo*90Lr:+e803LOq`aJ0]3uDFlnlWkp-*JAVQZQJHW.#MW31_s+_p9/<pY'YX.u,X/%@n]6YA,h/0:rNiBA&r;'ZH"pZFhpS^`I=(Cr;?@a:<mI7G,Bq4/a+9TgCu_q_.fhnX2]jjTk_h*(RBej@VS%$9X5?'CU@41_X_L#%b54a8I#TMg`^$?BKqtCtCZ6.tL8pM=j205@SVm0fS;,2Q'Y_@><"a=pTkUI0-]^3Yh(UW?9")b2VkNC]24iB8e&dahS;(cfm.p"&%R?;[LSr63.Q$/spcB+P[%ForU[`5SMTsE>i`u<=X1*cQGj3;3qb`'JCCjc'FN_sKMMUeX5;iA=F.^X3^0D5T->+:8hm;BXCo?Z;F%+._q\!.:,111eKo2BueU*gVQGj;gVJ8je;ZGo!"n?>pg_jMMZJS;&MBbPS&m8jbJNKS&i>oI_1qI;,Y8m_P)upNh<ts+E4.iT?]M%&&f$MWg]:A1fR3CDL,q!H=](3>m"\]j205@RB0+!R"d*(9D_T+T8"icMdCK[BrL%#N+MPNU_=XU-(X?QmupO\N3R>336V205;C,^%Sc:80P>>k^Ql=:RhC"rBq#<J:oQa2F`-tPKQEo'OL_1+IK29hcD^i"_^W^r3lXH7H_7[qi0ih^fLQrmlV$uP0YoQk'G?i(Ak(F_l%@:]O2Q-CrJiI&%lEIE<Y<:.TG]UM-1YQd8_fhOX)5W\ilV:UB7#pu^68,.qY`k?\AZj`/YG(n]$G$s<4?hR\gT"KkKcg6$!dn\V*%qn\"8,i_EZd&5Pm>YO^>^?FE>Rlm"t"+Bs[/+6tC51$b\$s.[,+Se90Li5D8EW!o`qM_#ff/MLO/R7.>5O/W8n6'D3^/</3)3(4k%QuVMh*G4qQ?A7ns+6YM,.BgV0Ao@gI2g@[LN'hBkpO:Z=]P.^9UG6@Lbhdf`]8R!WVFc3W$&qBt:QW7oqR"^q6=\nc-`0Yq:H"g#%AAc*pEM(TK.bkmdK',VY:"C,%2595Rg>-9Qk77qA@5f(d+?F4$fmfdI\"B8=#iG4%Y[D[8pc(4a3h(c=Je'Ooh^Z"uAROE[UEtl5%?]C_+T(k:W]Ct$LBTLtD2DI)/9sht/-H#V`A+u2C]"[EA0)r>7LNhA;NW2_?H4t2k(Ye\N#.OR&$&t,D+m/*[_/q\]f.bLQ+DZ:M%IhO%64Z(I?CMjZAGs"L_N(38K4!7#F7!iY,oBj.;)a1TprFW5M,LK7[rFG<Uh=OGuGO2WULt4#<pbDJV\p8CC4Rm/";o;@+*-]&a%S1ZbUUHVVh)TQ'^#KKsJJ*t55dp?a$%P;+$4'7&"q>jN?XPElK_')_45O:0rD+6]^_!VW\Nl+4[X*A#g=T%[Sd].Z-YgQHk">fW-%^$h=/o?AWR90EO?r;@Dij2p&_i9NncU]iX,[nY%pl.[cgA%siiWEo,1R"GtUl>Ck`bjD;q0I)q8ZCCjA2X[j(^3)*?Dbtb$+&)XY%\hYeUjmHWq]Zm[#phU8Nr[$?9n`t+-1[:60bF?"7CceNm%i_h_f.lZ!f!e9Q'ub)5YG+-`qlRJ3UN[,)q>5pNpt-nB]Z768eXU$W%=8`#ED0,-T\D6&gNL_b8NnpNC,Dc2$Z(%cXmgmK`YC8%>A9Ih^9YmL+$hVKTHea$(k?^C+NqPZ@miesGX1:n6[(7Z\o'^p(g[i\6%1KNb#<T1+,`*MLBiRjf)j=jD-a5S-$6/=2d/BiCFER(Ak4)s0@?oDELq2&g-kHEUoc4m=Hg2YTds*6&$(Z,>YJ$=&]-a<_:h;,mu%Oqh/O%)2#O??YAfX(aZ(n,H;$<;lR[Z7kIin*l$t[Vqcc9h7qW41GNU_h3rIA]ECn@Rs8L*3)fCG3t.t=-f1sqB$2KTA8l3I*lhi%g4&l;]]n60bRj?skE+NprmrLLM`]9G^J?H!CHMbrl,=[s3j?$]#nrB$jdJHV^UWt)0Q,$e>'q(_/GO_Q7th&(X2VDS?`q4$K\1_Y%1#p*V6T<nMIlM80^p_)0Is]fP]A^p(DoJ+(?rtreT2dL:A=qbkb/?6U;Si:ne1697INDaI8q"J?\)&\2@D5`H'ck2<6!UWa(O=WY%m$Eti'Z?7;b+tBk^"Rs,-tSb!mp?%+pE&IgfC'3D@s'?TJ`$/6mG/r0ZgQc^>,#`TmFp3+W:;r)O'_dcJbORC]_33+@fl++rS%gp%7lBAl5'5e<)jh>`j-&g?cJdF[..G6P6n'UGg"EU[YJ<rUfVl'TVe'\W5.^l7,._1u><Mgr\j@4o+SB8FCJS43QKMGl1[4YiX"Q)@%4^?d.q<W*YL>&6ZA`+A5A,5DET37f*ltfaDE(ePu5j&9No\qf7\%dqbb?)!=maH<n^&7_%_C&6O$B3F%Xgm1??Q9oLE/<1*G;3m^%h@XA_a>T\p?ee7*pgUee_cJo>\hC&5#.)<eNdY84H#*B(p8AI^A-X$tjZ0*R'6akEmdcmqiPB[tL!+O,LBh\e.9rH#3]ol/S4VZS%B1d;toX[))XMY_GN/[2qSC-;POXd-<4D/b\OMjq<H&B5gIcg*3\H;Nh%ZgKaL+=qF*";[RdH0&n]^ArUc\l"pATBT=\`Bb6%aV;)%]tSH1XMY^t9"T^i-3)[gl)5MBGogj2o#dfmnsn+d_364k\3`_ST.@t%""MArflYh:F4bd;Ht%uhP2$$+#e]oNc+ebCHG')`JfnDa%T9aH;=]2S&D2*7#l!SFi,?:C`i>fA:5_#[XQ-5QZo/g19rCk.lVcFd?X_.29p'k&(k4B0TI$ZcnpeR@eqBqbOCit5)rr>4Ar<E;\%aN5Nqd5p=Ub,goJDl,Wu;7\]91>faV+4oI*lerq,d4kd!pX]rN_d+(.V#[.Bl[&$_.@+T9p.el6S;is/U9_3"EUgrhWu<QdSK`k*%D]^RjaI7l;q"HQAqB4X<QDCe?:Vu,M]oN22ko9oGr>MR:%f84fY\2XroWuRG>Dk/$Y=PV]?`+E0D.T?7qjBSlB=R!#_8R'd_a?ll%If:j19KKNR#!Y7jZ82"9R9sh)4g`e@Q[sX4PK-m(dseqKn$nJ=U)#sW>bm5Ej-,FOHD\CCPo<0f_],iXk"j;UL$-Q(IrY8PPfu_N%[=cE%Sl9k;^L=(lHnRqC:=&0F\X4`=[JCeAf'%+h5:^)MfN.o"\Dt8m7dndt^H?ho(U0g_i7NJe1\,Hkku9!/j-Pta"bZa[4b`ft%rpXb&&":Z&T/`a#%E'Q]Rkr'H!F%UOS/Zq83;.jTrt:*8,T6515$n9dQd7`A'#%p-G;G^mXa]$ZI.;4:ND5j!Y]&8nN7W^H>'q[R%^Q/e_X(Abd)W^C;<[[/`YBn/u*C9f,=hOXln$cYb^4(>,iUc..`3kH@NIBt2I"(\5cI]ODn%\hYhm`T1rSuA]ceg+:-5SW/D=6lE%`R`eqs1EV=3M.(g.iBp[eB\G!_K"jh;PgkZ27jt)I_EAaEpI$)BXN=!?mb6B>Zt7B$CH3TDY<&\V3tPKRnN@&IXjYrGh9PapLEIE%V>8#a>F-,26_DH9/r3Z#:+LCHb>41c(LHJ+;uIcC2ZlfkeDE4I^YHE*I^AjY>44'ChV7khEW4_df0:<h0t(n2ARjhE*.Pt0A,^/%%?_NH42#DCX#AtLVo<3q9k'q`d%1iL9_b8Gd07Uh4]7Kue]<ndSDSo[cH$3oa_r%M](-^XOj3l`K?A#:%lHZ5N3q+-@lSt3[_V<$t%YkF^g87V5Ub+iFa4EFS@1cn0g]`%PDQ@L4*M=-`+aFMdbE5`g/fj7H<BSNJQ^#2)DM=]!aoFh14C">tJgWu1Oq%)f_`lL9Mp1JNG%BDu;i/liM,o\;BM;J;0fk2#\e1T,j]T%WShh9d\8)-#MrYV`rsCa""`1:0&_1n3krn8WKTp)42_c@9B.Dso@#_W^S5ZSYX!+8!u,%RJc1$G;D&^%fUa+^HP?#L%4^o\Mep!Ec6^!rhKGf[(9dQNCQLP<ncNAcXu$Nr`SY/;<Z@E2C[Hf*-T)RWO(K%o_%d^@,8;$*_&fW%Ir[`h?fr_;Cn>0>oUR)C0U)8F2=7I=7@GKcX7c!K%g=%&HJ3u3fiYKHe]4$5b`:o>M+dR4IEkU'j.]=/ZE_SnJ;T1D4u#VhRMi=`%BP@7e$lI<)[&,e/DVdieZZg,4B'oR/1NU+abR@&nP(^?]`$-l77JAfsCZNq_Xs'je?sLFLrYq':O;j3t^N%.5rKG*JrRLR6:T=$7%_T^%'&$^*i5<Sl#j$9N=\[XU5O_LK3i?*$l.<S2W-cS'+mf5P`[4jF<_-uLs^6oJ.Eq9e]^<=biSXE^MqE^D^YAPO7hK6ZbN&XnY%q!7R,kcOcf_%DPZ^';`CGCZiA/*#__4^oPe;4lPc&qiumokb_YFo=iEe!8pb*>>7jb>N/&IePp1r#8o=DHUn.F/Amp@rF+%@CttD%F.8NJ[c<Q?71!&$K20Upm$D'[f64JZ;kLP5IU2b^euDS=<r-B?B1d*)^&=d0m(:6SLUT5'(*BDX8e?+#'JG@2\,F@TKlH/-'9"j)%R`?+$fVK&o;8.S/(upfPT72,.ik3?<!!=ZDc%?ZKhf%2_^B;C5iK(0Lo9lL9EdgT0\G#d_&7\Uf_*:&>FZ6Pp)'Ak(g%F68?U@!P%Ac(eS(FrlZMo3m2%l;[M:S,FUk.C*ff,NA^OkSp;-2c1aW<Mj2:XFq%J,0e,m6gg#YOjr,5Ib8`:->!F9Jq!Ak%=6-@T>VZrUSPB%W2I0HpsS"cKPc"'^U;osdXsQ[KWT1eU_<[2Q13hUO]938<X1[U1KEr*CO!fuYiN.u-DkB5+2<*@Ps>Y4\.WcE*`EAM"gaOi's)9O%qiBQh0tm6;<WVi'qV"mTe0I8^"ABE6R(bCV7j"];r!t`f+5hD&Sfj<&W#bcoV108i;^Hh)rof2>_XsnPGQ0Y"+3[EJ>+Ad1oHHp+%"'t00>Kl`q@Y>]m*@m'rlCIVam2O7Y)\92Z7NE'so4NFTn]+t[/=cGlHH-N]M5_(oA+;\-&2!oUG2?!U:;0"$LcY&Ao.qVMmZYZa%r9VAOH#I\O$St"sbUl<O&b?C;1j8FA>0kQFMr"`a):n7M:Ign5[s5H,e@ro43YgL:]+icIfl#b<W(J'JEU<GW_XfA%?ZgUAqdoNa%B'[%I=hX7okA]fH?+9FI\$)8?WK3VB<f<_TSVa<ZDm=9,I_OGjII(bpIW=EY,(4:c(>3t?_cWIdWO'9m5LhR.51]`JiTHtQ04-`p%S4h2tFgVLW)u+l_UGMJ>2<!^orsX<3Z9N9*o"AHp@UMYhWAXT%c:p-#I:c,bA=nk80Dh>lJd&?ZInTWZ`%7ZJn,>Mq#;Rd+);XK>%m:VT>++@JachH;?O0VuTeck'I<SZ\8jE.?meJO;d@jhV!j&0Zt^6!elqX&-1^T6>ao(!1Jh.Q'B71-Ja3M1_K+b,krBmhm_kN9GU%bQIT/rm8!$Ge`gp#gW:%L!0@CRP:DA1km_M0;Z%`@/m;U>8D*.fKXad_FD0ag>]4cKraX,#M=jAd[h!DlIjZ[9h',8/m\,7Mo2-6%B0eZBbNYN9.-m^&?C..+T0$1tkV8_Sr^sYJrV24ZV/0d>(7QS_m7b&9'm$hFr.,Rah*ea)%NZ\/*J\OUS!Y,ilj`2ck=S$`fl-if%^sc(DSif[3f@r)7T@6U8I=\jUdOh%T?H5,km_q=;\BBej4*ghc0(!q51%Xm1D>hLu<U@]42h1@M50cUiHR8.O3%flCTNA*r20"1n%Q)[huF8a)A<NW+Y$e)0=7'0()Cdbu%g](EI\2H'qMb)1'5JOH28/"p#:ic$lpE,b)EkcjJrU'ImT+>9-fA!JBDDM/DKE'oF<AWle%4m@k+IOVMni75bf]QV`J9HF1i4C?n=qL.\IlgGqpq>BgLIn_P(dDNkS#Q%_h99\VokA]gra_?!gloA;[J""2RX68u*cR6$?%J]sY%rsSh:4-B39,4k<S]s;Cq3lE*qmlgTqA?O/:UVZ'e)99Mi(HhI%q":g^r;>XURWR6DiT-3#g#O*bp"bJ1k`o<5-K2^.e!-&gUnjr9%H'[QU#8?hY>W-Ph'Xb*el0maq/o"Zn%pi<J\^()'l_LJ%>rd.83TRc]G)/j&NKHpfiX-m4,XRd:hd1bX]Dq]Og]%_t4#a]pn,#=V%s,.8f9u&VFTMGN=lMP"Qq;gL&XPl)OjlH'XjMTkNEV!Yl^!Cr,I#Re,A%\-Mj1U2U7I+9X*$IZRL%P7G\e+M(cnp`H?k;7tS0,77%MH\X%&*>o*ZIengi&W<%?'c(.Q^d;1YLN+E4#g4'pfbEMj1X_4hQ%RT]uF2^iTDQHi-LjM@(M9Fd)*Xq-G4jB*rOpBq(=nNI$]mL%hjqX,%.,$HqWmIqG3\CoPCL]1PXVN#1`f*9e9-C.P]^!DIm[A)%f[.sf9C0o&&tudSlh9^n*?QdAMr_PZ3N=j@Iu217+V.U6XeNg%]k_$R6=K(Xn5<@hf<.k[E3IVR@oP/AiE9W`CO./Ml<%/T"Vk'$=(M)GphL>b)@Q-X4Bij7)^!KkSaTRTLF9+.?="Fn.`@Y`n3j\M%AS%I)."a1TiDWi\QJSITZ3M%$4AtQn^95XY(j\nTPd.G!NXB&&X>,*L*Pb:$!Xi;_^s<`2juqUT-5Aj)3;fABQT8-DZD-MfSI2El%%&krQ1ADOtQG(/5U9%FO%)9C="aH,2=P(5AGPI7rr?9]1IO6^Q'aru7>q1NJ.'VFkV?^t/Va:oZ!"Y#ILTZa,=lBOh&DjHY<J6?3%<WtT^"18KDR0njOZ1tgDZt1]q:gFeu;NjJKj`F:sm05WR]PUTr9:#'l=U!.)@%5T0A_F,gGoLF\W_-W)k.Lg[3>j>)Ve7YG<!0MB%cX?1A*>N0_%C$KD>,Cq47Fc0oLU0_=eNQdZ=[6ieck14($@s+t#e^;Z`[!Hk".,fM#@0+*He.uDo^TTY_'CsrrQ0+$jm\rNL'[K8%R&/90o=S.)-%*7U0@*"3akZWJ)EJ+."CiUM>J_4mci??J06<bW4[?V;%6PsGL=0_6MF6(?Z3FQT(cE[I#e,SLJ>9.rRWQT#ItgS2%EEKb&4f*(CnD8D$"](G%#XA.cS\r>eCO/AC9U8&ZGdn,FCFo'?Ci>AA<]+t`ZmQ#>9ISi*9tJ]&7p858qZ'udkNQ2Ug%-M;UCReN%S:[ofHdE#U)0;b=/>O?Ri%++3hARjn2B<QF:]ki^#'.5!?)PQ><rbZX&"tVVo]Xr'/p\/WZ(R;Y_>lg<i:D6Mo6HY9#lBYVn4)'%%9bgk;H=#\84Ah5,2,bA$_Z2h)bK;$Z,kUPea"f#P%n6fN5S;311:lNS0]9`W\6&rf/RAZl\14L>Png9"TFY(4Vgu(iV`k8"-&r$X%Mfjedn9%`0`Fl19oIL`;oIN.4W7+QE6X48,*T+!!dX+qR==*;G:mOtZ<Z[24FpP%6ON(-$^"S/e<a\\?'h2sC<=`Y;(JV3?,rU%K%r3FOV7k@#R8Sk4Q934DbjOb>j0GE*`TWDh"&aJ#aCeeB*Ajr8:6<0nS:nS83nCbTBJVAtm*ki'[!H]OpUl8kuiisH<Gc?TVIKd/9%IMBA$"'.&j_8(Wt+dPFC`nS<s6-WgU(jpRl=9_Q_@2FGXm>LVEfP)?aGC]+:I0RmA'Z1UBJ:Mo$ee<GLGr,s2"q(j[=GF.N)2kf5%8O`,8!IFeT0Ak,E"9p3VnPN\[U?d3[$UmcW'5#p"Q@llh*WTcufo%\nJapPti,LNIR/e/>`ZF'cH8hf3##+FCnN9u*)?qm%?oEpS%*iI4q4CCF-3nfUgaD"mGX^N#r#Cpu9U-%6#;(l<Geeq5(-.I;W>]^//SE7-E5g,g1K*b;]9g1+^Ih00O_8MrZ^JB6K\-&o*WBL!J%HcZ5RhVn&cT^FekM[GGt\Tc9*goOCs3m%dGW?[(96?X1rrK$V`j4$'d35l[u'V`p"ZZ-&Cs7nVqa7++8S2Ke4MPs0uZNaIBnlcf!%(OBkBk*!%U?:f4^V<1*dC7:Y^Vd,Z*ak)</K5Y#X9rV^g8oS%0j6/:d$Xa0%k#-Q"9]c%pQpcRJ75Et-P?pig_,IBbGq8BARhDVK%S5418f.klD+o?k=-+t)hoSpQXP:_Fuq;cY;CLR'5rWBHh09<^\$D@rNHn<#&P\+^p-lJB))X"%*59Db\<]aR93KiAVTQ^*/W#^=D%FoQ,!\hjD,i2M84NPc5hj9kkgh'i%ZrpHi")"PS^QQo-Ea/f/F77gA%LR%CZruS]%_8Ns*b-2]RLu5_NiAiB8U)]^"<:B`P#$>6k%itj97o`#IQ]KI&*S%qUO+::mRhK4T#5aPUnm,6T.27Uh0@"/h^imec(m8*j*8-r@!W3rEs!=Mkjn8B3()rOLP^(Wa@3qW^k^`u*q%bp;0U8mM3ahg;#:L=bBL<W>5OAn,`@s$'I"G<27&aqFST(=7s!%g>]2d-5R)dSXcg<Rb+UIQ4%M2'MKqX@&%-C`JOF"Dk0W''^$^%XUnWphms#`WhNCG5'Oeb%[\H(G#fe8VR;Mc8Y;_\XE/n[Y#d<<22YW.1DN7?A<!lsqujK"SL$EGQGgC81B1?&RD:a_5l<7C0Xc+`%m0R^jddQ[Bg*bf+Qf0<f:[m8G:JaWN'FsLDE;p":QM([`7\':J,UBXlU3AN/Jt<Wk[;<)1^q4jhY&X.KDS7b8XKGM"B64J8*ef5-%`2*[:PTl/Q<%,:B:&:qb$PlTV*W4k!gYopcDfY%VZ(JO*jEogVa6"pOAN>Mm.eSZIq7*NoAM1\\=,kBqeif_*DGj?s2t.CRRD9RT%D0,d^Y1GGVk`:q>$q9ZJVF_;b3`>=_W)ogmEH'Z(Pg%VA4uY$WPV/5obag5I*Xq0)_@-S8=A:,dajYX36N]DO*#^RD\9$26iR<4u%e,a]*5Z\#:U,<X`F4Iu@V95f5_pSsR-9\OM$M79IUmWo[2L'!X)Z4;s-7u4@i.*1Go;W3/HmY'cTmg[Z_Z10@CN.3N0ggTNX;%KO%l6AL-%LoK_LY%bqG@42*duAE^8<4dt_<aWX2\Q,1NWbar>b*fnElbR:U`YI@%YZHd*f!K<E$[,g%/qqkR_Uf6_TZkh-D4;f9lchH%(Fob`WaK/Ia\rjeQ#X:NY+.OSj)O0].iCEXSF_.^/q(S)R;]Y8g^Pc=O\Ad/oST(US/N5*&p>hT.B"D/jZEjrFd[uDFtIUY)OK,U%-Rd&/OU_]R,0'iimDRe&i%HpOEB+B@9=mA?NX%@FpjUj5>l*:,XW[n>3gQ.a8^E5db>%gRmV)lGS\EV_Ii;Y?G$YAXCdhhh#Yp=]%.FL#..H5)b\6>Ef%Z4`=)Z'\=,.^Cg^d3&#ijP:D2ChnjaFO]?q%QJZ95M#D[EpKD(Mtbt,QY8_IZ#9%\FdHE%$"i8Qu&nBmn0cT%Uke9?Y"3`J8W//0>jI1hg$&:*<]C8.JIQGj@o2R<P6ZuZE/OIC/f0ZsYN\CT=1qNuX>eX"a]1`4:"Ne.6^f+FWs3N=Zh3?Zl6Id1%;SD,C65(8=_/m=?br)GW2XJ?%nUM#2U#HS\;)E(U%i--6JOQhao9.-N5"$&K=SHj.fXjmG&p;FNS'i7MGDpi\SsIQm-k6Vd^kc\-%aQ'skZ<(QgE5:Z>pjq_C$2>&89Tm+5GXto$=dh9ZZc=H3!!fg^dP]04FPr?CNfaofY/!5&a#cT%cPen(@A$%YG7*sJfTam:EdF9+%/oB'&M19Us6HDthFJ67NUo>COQ0U7B.P<2bhP5XZnKU/&l873LWi&JfM@G)Gc:Ct[p4k[i129oFAqcfrMUH1R=dD=,9GWAp:_hS=%_QYGW(H,S:-UZDc5Gc)S5If;B(;jue=(<2(EAc6/^m@SD"%@@ta_^,pd"_1A2J!_;'4$@qR:B^e%6f&9P-]j^54gS8AJg4:(M2!Y%"Y,>%&-ikZb:kIp5#AOhnb;ej1g9ZI*p@Y2ij#<KYnbAM`KE!*D)>2dA%F.UE#mr/ddW)o.>n^(SIs&d/@cUJ&ku8!cV*krfH`#C%=YAF$ROWrk2jWQVb,@MF1gu5gZApiDVSNH_aY]jf8CtcmC,Th%BWnGc[X=A'As4it0f<sNP--%%$etb:`[3m@l%JU9:9O.^Z4#*O%q8m-NQ+S+H6l?j>`]CSE?/Z@TX2p?e@AgLA@oI-l;=Dp&MCk(T(`hkpC/p3n8=bDr6";1E/68"?-2Q:m-:@^f."iG\UsE*XqH7hk%N)A'5/Ob0J3[le\U>]9J"&ho@f5Kp%>c=b+-*EK@9/Wm'QWpuDGW)7PbS:S68oZ2!;"[p[F082JdC@fXIqjjF;hHap)jZVU0=+fO%/#Y@N3l<_YM)'A81fM$9p+Uiig=</mAi)'^WK)3q__SAdSC>W*?%E_&T8t?W/5%(\qdKU%!V(TbO2S*@99M?SZIHk(26\@;]JtC0%#KTT0db7gCSK)t`H9><ldc;jj/1sGiR94b[QB=Na4W2GQX(%-.kW5lB1fgi6be&fq/;rp*NE5tJ]Ib#_=@Vj&=U2$&E_iG>al7Z1%9.RFU96fs"A]s<fmdOUXl\bWMWZd`n!aeG]8.;Z&WJioR;j+%Y?lr.gg!m\^FTq:=A&)V@f7BVK@Mq:Ul3`Q,'eV'c58),[E8i?&%FZ5X\%Ba)OW@p5[$XDuBEk3`TKuF5cMQW[S`o+nuCL_<flJaP22]A.%Z15ZLA/F7;$Fs[-@kr<5),q#lN+$^.63@c8\!(<q%NWPF%`@m-\HoDmPN]uc,lX4O/o!.b?qcf$0MGm)!BSE-eO[63&ILp#/)S4#]723(d6W7mRUr`kbL]B1%%D/UNUbOF+Ub_56(e9poG$_Fr%_[sKU2H[u#*>c`[3lg.)o^Y+N=3<$-2!l4M3!D"U&dj0\"UVUi7f0$b'TE52E*In$8gY($2#10PC(TF"_`cBm3-Z*S/$R2cZjdib%R*aDoN,MI&r:4FW]=BbsNMqBYPlQ$L>%p4cO%EXC"GBN8kQHR\:-e"GKMFer"GBN8kQHQ65j/?(:-e"GKMFer"GHeg!J,k9TJl*Q%_B-"_N5@l2.4Red"3]Vg6hJi[$e:=\L'/f1Hqg63J;tHN&CWH<@ge)h'a=0_E7uS,"XC=s)B79o^0[(]`PNI^W#2JU5V?M7OXopJ%S<-`^@'?jc&kb&]N)C7A!P^q="a3gaZ[[T"-JEL*(>-)";b=(l,q5?RU]kpud6"9']&[.tf[+0Ns"r.*\_ANFUe]2V[?2En1mj98%5^n'DV)\d0O)Cu?%5iiZX2)O.fgqaS*WBVCEW@=+k5Z56Qo/j#Z%VSA3*).]C7g*#6uiitJbE\)`_hLlaT3kI_+,Ir2,Su@*LN50%qDnr[bTkhukYMrU(tkUCY*0G<R*WP`P93s_.N@&l!i2pa:spnqZ9q&X]LI'0`MI7K$j)U%6(M>Z+I@_W#7TXMI^_o[d>s8:!_EpM%M2_Z_4[;l<\c^)5d@jXt!K)9TefCtC=`i%3n:T,l<MNJIN2QoDmoQ!8g6$;($;a.9P>"5>!B@unfb[$(8t(iUK!.e<Hc8pH[K<3s%F%A1Pr1S?N?c\$3gf\UJG2NjbNfEnKdP"7+UqOG&;[Zisidme:=B^bki#;?UVjaVYH=?LH"g1L<GjC*@TJf7"ei,"'ZJ>e'%M@R#%1,3dmgL(2U.(47?kQlcmD'VV:Lc]c+pq9FkW'Mb=n>Ocu),:U#Z3e'b7,b)HU^)t;X9#M`VG%A(kj;GHkQ0k.Q7TrCY18(LC$6B<%,G6\?\J)J_ObK%7"S"4.PTEC=^E`gm9;jS1a9;C&aG=O5qo^,3k8G7SQH=diA]u&*FM^R@I@7V<\C%Qr.qM&!@Y1!Dd(;h9MlEnA%]etr))^[H=7\W)j`(%DXe5mr'\OCq3\E6D3Pt^R;GU4kikc86N":_16one`@W)"`]6[a[<U_7!"W1n[+p\O,L]3W6iC]I.c03;<k%kf]fP..iXVClg:Y+CC3G:r$#Z;SWZ,[heH=gB?t-)\[jJT"\.^cAOX#E9@nP<YbN08l/-,@ciC=<7+V#'2tX<2q^M\-dS`qkCflN%p7)P9Kfpf3>/AKUCFIgA4;kAEC^gg*3G*X@Fr?>@"*UWF7>kQh/n82/TNrm<TkKd4<FQifhhkPDHl9!Z#5BtI,8BnaZhUj8I(<oC%$@IY4BbVudjldPYpCP!TPV?hD.Gc4r&X4^#eNu'")58:Zr2%J9$d^<mM2#N=YEEO!lDk%FQ22u=T8)mS@UNf51tiA%.JJ\L2Vb30%VVG6lV`!7"@LSR@3]9f(bSLEVQ2-"U?9o@]5T+R7(QMQ,FDRJ@)QfLJ#T+KEQ\'a][TH(\TD35[J=)Rr,Qu>jh::=[/-KHXg?]A%%*.YFO/M))WfKimMJK4l:&3/?/?jD6'"Ek@/6!sqK*<^Nspcef]AT9C,kWFB=^4\4lX+VPVo2*KH_$mY?U<c^"6[or]3!cj'F:eru%o!F=%p=&p[.+*ge+]$^d#+[_/)$UW#`"*ml)lei`Nt`,HKrEMd@N&Pu*<ek'6`P`"/:&d[F1Vu-_J?Lnb),3K?pSgOI/b75Eft0X%h]o_,QYe.54=a+PSH`HMUaA$b8.JhWpYPXk\kAIfL,'tMH"`K/'X:A8L6W[nlLn(!qiDZS7aL6rSlXrB]K0@DP;PFs=HWrOA(V2K%2Y8Gp7!<[G;R4)GM]Gm'O[Emn,I.ghX[*F@me*at)gMopC_Z?nkni$I4;B,S:9h'a@&;@TF"""3U9K2!faM<-GgiNZCtcUZAYKTE%7OW5(iQ2-K^6GZlOf)majJj^deh.-M$T$?_`'T<ccIfW<1tEqN(b;=L)J,Pgql;TT*D^0S'_.#b)]Ih;o7Hj!7^>K*5j^\`5\`9L%L?cRgU<Ki>iu17J,%#-Ok",*D,?L3oK8U6gI0j3,jKR,kH]$gf8iHq6:2WG:'r\jRn6"(WIh<_(LQQm,%`*mWaRp,d.l4%LiA$]'%a<MAt_T@DB@H&q.=,Km#rkahM9H*oY%oO+9,fo&VHPo)kfT)V5:5XWh&;@!?gWCX:2MammUQLXs6U`6W.l^MXJr\^^-u*]$OJ%QM%]a0A"D$5SCKc5OdEBOGP,Y(IcL2GWR0/-@gnQ$>:au:_J:ro8\&4qicH#gkC6(V=r-Du)UM^aNL3J[;I%*Aag'SHMki$ep8BfCa;%+>1&gO(,1WO3C3#Hb@R?$9j?Zi24H7`);B-OG6[a$n6BK%!`m_#)A^2MrKhn[oFEr=eB\)&R4M?a`B073-%EOI<8^JqhTE,!%8L[%<WL8f(0^f1!5ee5->fpdPU1QA]>.dh6.JRq).u;m7$L:4SJ"dX8481lKSY^LLfT1bTSs;7&eV_(jL#=,+bc_PWUs[K7-Fk)KLn\t%V\X#DqPfmV^!ANCONBnIW0ZmP,-&Uh=!FZ_$W\IOK]85P.LqY#oMZ)1./fAm33fPWpJY6m+t=ni</IQ8Lf#Im6J=te8<bJIU?HDq%@Sn<^8^\/Ii-F/jOd@K4SCTMJa!`5oG.rZf1,b79a(0c@6ShD.n2_3\aKCb9QUFGB5lR+5&fOcaLc<d"QmisQ!qK=oTQ6a/ZJWJQ%8B'PtV<<hBj:rh5KfJ)AF]-0KPmdpdXCr-skJEDGN>c.U!`j1Z3lNfA'\<ODXIkKl[2.@K=3"PdF*5^W0iuD#*HQAIeM1.G>TIm.%bgeH"0]osFV6>,c,hBLd"eBu[:`$l<:'!Nc@aa.a\p/J]\R@2VI$J2;#>[C>D64L!h6@=R5@[Qd!Tc$"N#:A<]o4mt.ZD@7M&&Bc%N-[%m(j=1!/.,n8>AM]=o/-=nOJTYuIO7!!#(g77<Z]/M)@_N)Qum#/(d).oR48onW:STOW/_%($d(S*['<pVdr20L2`/(cJgM3D%Q!k2aG"JqI]<f!:P1%+7>3Z7K?',Q-G+*q!_6D*0f1[&U]/C^r<OZ%U[;-<F[kYu2>sIcRnc.WuHr4+7Z%o-(Cq;Ot,>?Zc8Il,U%>s!1tdWCq"k_SqLmPLd:Ijn4=o^(4A0Y\3D"p-(!Xgrp\H1Fa0s7!2AW>j!n?dN`UYSHQb,t1=l50[B.(8?aN+j+'DVn(dVZu@[H%+gQX_en%Trle8JO6;]:Sa0]o;jc@SkFcH7TW_kG70EeJ_85,nO;l,bU^)1]-0s/Zb</P^LPnYCcZntf]d;E'h\#P^O+jF'A[eqtI%L^M&"WW1YlebB*MlK"[8>H0*?0qN,N@J5kF9$Wg_1ffcSO&&B14FW_//"XluM^XLLUrKGCNl8m'9Q@[uB&AcIGF36,;EB-X>G7It%,fa2S,oJa]b"0%GRDWRI73fX*R(Y+XjisZh['ub9P4l&Pf0ODPa_6T,g.265AFMumDTX#YnoXJdhb[;4VPOb],QJc4\>_JIRr!jF%KdC9:q^G+Q\>RNn@S!TXVW%Nu^'r.<Beb8d?7[5[AmYb#33=W$]NE)qpW7c=H4HoSRCP?D:.b/=-#&P]m\ji,5rWN>Tu3&glllVR%Y>2qd$,K`l0D`]?+RtO^ht4'nS`HJ[k\ciHY)ttf9gr-]"f>7b1_Hj1PFbNQ7T.Xakoj(!D(87+Q:0W+(C&UIB"A+\^l:lDXS4VA%l7?!+D'Y&VbG+-.HDRXW%@n#?Fl4Ufer?2?5+-l'l7cgXoq_Gi3fLTR.CUA&8^\nZ:-MO1Rk1[m@9H#kU<0p3f-Ga3r-F`^.,Ibj%lcIt%7>5hYGnL5d>":j..8!;]l^kaXm9;5NlU!p5!i;dQPA7-:8Z;pES&B0-LejJ5P"9S1XE7'A5n0:6V^)ir2/sqc45;?dga4FC%9-,uG+/K5714VK(6><:]_]43/h*Fk8Znq8Q,R2uhH^#IF4?q%c(pi)`(*Chf(GpU_A]Ea^(O30-eB6"t*i]j?41WM1ilXqRhc(jB%g:Vdf&1&u/lRIYA27&=jkZ41CL9/Y*-YjZcK!2SB;2^13lPPe]eZ<7[]WFZS0hPSkd<1DrY&0t[^oZJXg'4b>kfSWriA2u'"a(ej%f-jbj2JX.`C_kGVN'cAnf._4_j19u-9/qL*@;pf^g]b`64hUchlP^uIb.:&;n"d!&EBQN4_3<r*gk0G64FSnhfAOn@\uMIgqfGg_%cu\K@7aMT"ZDJ3ZX/E+7E(W?#^eeg@$Q)/CigD';IENF\=AH2Z7dQ5i6mDfaCnd&siaK]^>(KhQ1)k$,5iOoPDe6B(GhMecM=\Ar%8(#8#:=r5Rk;bGF-?Yo+Z'm#cEF1V<ng&F[/mdaFPqHD$b*4MXUr<^HKh>D]\m\-q,hTpiRttV>U(H3NQS+/SqjUa":]X+R.2j8(%Asl!WoBA#!/IIOk8_!<Y"kt</*5p#7[I/C(%5YlGBkpD]$OF$mVGu*HiRKKCKTEG"BbEVSP%W)$PDjasb#>V.V/%uX,qkU-VGj)L%=34dHnXaRM;+F+s*HcJRd8<D(*?B9EeBq,`7i`UmFO\]6*O>N=Q_>rX0nXfYELAB($ER8"`c@GKE3UWe:]j(63,/2@*N;iU']cl_%:F=kJmTf=TR4=q,RDK2$$q[[0-o2$eASV(!#'1d@";&Kcd-:>4('Y$an=8/\cFmZf'H_^'89-.g"eV(E&/Z_t/Dr'o'Ug4h6WjGJ%b&g5b","Y#Xcbcc^jnkDmYQ6R(,^+b:.Ut+PMf#`!K/q5>^ZB;%b))$BXh\'1,P0%8W]W;Q"H+DVesG+L/,"qd[rnSL&jRY/>7BQ%V\VOr'c@,dC75qQ&F,LdX9Alm$:Fjpb5usaNk1Bf#f-^]0B+h)L=iHHa!*daQENt-3r[ECjNBrSVSeK;B)33e>s?a50mR&,ibFHJ%:MhC@QM`?dBmHa56kgof_8<K7m0*j"[@"s/(RFm*bLJG<.k)bDc;Kf,"!'@6d%KA1W=E!.8]0[Je%)383+5W1J`uHT22*l)_1ukF%'GB$!aeejQ%;YUC&1FU5+=+*mj+R%YkVQ$N#("3nWuF+dW>n$Lb$7q>KJk0tMCt73+SjSl$jZX#F>Oc.Oh:^l4s[UChA"@nh,d2b%A'mh^%M&k^kGP=;pcW7;7Hd9G$VJ@Fk#Oq2(A\ROjp,=sS.A;VX10O.V<$Q_EUkj%*cKG>3:323PYbPGr'$i3r.(UjV6lb*8"m<*%;1*VU<,rZ^8\q&l7iiP6@Wp4fqqsF9>AZ<W6nGA!0V@;!gc._TI#@,1>Jq^faq]L2Q6^>e@4AUK`@QQd0DWDZ-G`-D5X;Gkm#%=6%9V,#<96$pS!CpRtO_p0e9=7@s%<(`4pelXBjg0h@I="c^S0]I-h?L!U<":(J;WtN1r"."Vb"j>,LPDEn)+'X]R_IgA$CNQ3Si#]$%dZa)5<E:S[*t,DQ+fA":>"[\oXH\Y5:fb_Q&25PIf2bpEq%9l^O@&J3iCWQ6nVI>3%6S?Z3JAhDnk8L%(HZC%M>^5h-d>to!#6b-%9E?X,%MJjka]`<W.PM\G.S1[C"&$5o6"*?[?PSk@p_9%l&6P+%((Dg?hO\=e8^<A`=AkCDr?VMAN-C.T)O%)ojCRM5ifhi$MZf[m%,F+pb'08rhEg$)h:^NhT6^/IR$5.=nPR?*'W1[\lc/j?BVh$aWV]sTW@fiK]D7BTmnLYTC)F5'kV4,m-+W/0m+Y=0K=OPZd'UC5.%-l,pboK!#J;M(?5#t?EANd!L\US*X!3XY.#W2$#GJiX8(.&`o6Ne0;!l6tl23sG0F:]]^U6KlMn]M2gaaJpGfOH@8KBZaaJS?P,/%X/?-?WKl]_A1T,G@8Va/,$<p%$WgKrrGf?3WJJC3d?[a?+Rl>)h\r95&mRE$A:d6H`+P,b"lYL@\eR0d9mS4Sm$!ArK18t-]K>'p%2on9]7*_uT&30?i==>-l7<o8d>WiWIk/^mEi,Q&n<e/64d5h=kGc0%E(jK<1\B)JGU4Z7WK28"(`"MLJ9#?JlD-SC'%5%j;RHdZ%%EKZ;KE<jW'V?D,4,b<;;4&G&i.]JqT8jsb:n\0ZE=I-?=_Q]eS*#bE)d81_R-O(^V\`"BKS5ZddY_/LUQBFdKVF*->3=W9'fP/hg%/!@HP\>Tg8b;1OK<Kb!"^!51E%JD4SPldHA9-Mfm]d>;hpVrFD7Jrrj*rAi;`i4(4DB[Y0cqfiF</Ym8:pE\,'p0kt*#H^\q>Bjo%8oj8"@$siF:f'2#4CUcH0*O@i+:\/\Y:CXAQ$b3Aj&B\*T*t8[[2c?H:a`=eUMP`\S?O?<!@(>V-JkL`<Rr.>l3Drg)GO.`hNi^M%Y\hK212'_9-=)O<E\#A)k?AHo/'%7tBF8ABn?oi&o&?%KNLY"^kq/8oNFCO"NaWQ:FGdtfLlScT'cc$VYblr<BabdSfbidO[6"qc%E?#OE[8^9Jf>NZPC.1N[!'ZpR"b`]T&n9WcQJ$4B77>B=VEgLVemXeTX:^)-$Af\G))u<J6C_GXk/[moc_q"j*9LohY2hE^#203d%fM<$b(Y3&cJlbc>G)9f_ZmgrZEQ"\S8j.&`lI0:9_lQPZl*SgWD1Q\Z=eBM.LdGb$Wu2T]9W#@p@+W\sS1n*J#"Y\oP.3uXZ:_i4%$*7&#6O9cVBK7BC;Ym=IQl]POS,4f!.@6;4%B!I.`u-=mPtGK%AWfh`\;W2%$C;JGOXFC781cQaWKC+7/(,uu!\quVV\iH*D((4^%Z#hQ/j(GbB`a_M)9TL&g&BeYB[t:!OU]I`jj$r'&QaLh]^mQ1jADf#*j)5XXE^__!1QemMT&gm(-[:qp-"Ic:(Q+AYO>o!AZQSKN%Pg"_*1SV*-R/a6!K5ES!8?ee.=HG-1b$gl!/43m<fh=BLbEi1`%3,UafZYj?$(FLQ>!lq/e+a3>3MC=:0rMj8M8W(AUQAS$hADAW%O_LI0P?<qrY#UpLNus]Z/>?K$;%dY(jc+4]1F,Yt*_9$^)M\V=NHmC]K<>]q3p>k%X+RR@f@</g#@/?lFjSZ)<sN"OFEPs,MdPDl%`[*8T_8oaJ6\[[u*&M*J'UkB&b)7E-S@%kKM,lehEI#l/+spNMBRr<%To<BH%uEi1\9smLJIn0oH%iJsXfTs/%<4ZGVcmKfo&Q/F%Dg=0s)+F8HSKrGRi6#,A/4uMF:E1Nl$bGgC'[_qai@Q^\W=*WQQL;glbZe22gihYYR)s^'n<U6^GfpI6$#`+,X>m(/YHW['Pc^iq%rpg]U(^\EQIHM,L#u_!^QoEO5`!'_G&.2(8F4qm3@G#T?_8d8PfqT8doBO7RZ3dD'.#6c$)ru/KLZ&bk*Kujl%e)KfQK+[Z,j&ZG%#`7f68A='Adr7jUd$_m515T#jOU$cVYae=-k-XE-`+!>$Ehcl2\cGUI_Icp$%KLT2q+oCD[?rC>jqO6ebFI%;5WW]#Ju)kCb;=rE%YcNs090AdhMrC67QO7=^Hf'EdQ#,h_ql)/L.[62#_+$E?Z4Db/P`+Fu(s.5.%+=3-^Z]gZkhsBnNpih;_1!5eOZ<t;/3tQW>i`V$%Lh,Bojn^)8'JsSR@]+$U!]1Uj?riK#,CWc?"t,/B,oBU='ORskj;k7`q,<uLr3qD@9Y@h]L`ZhuOB>PGOaK2D;4M5#XCH@3/2\W5%'n,=&C8Za+".ek7agjFQMP$YUC-[;A0otn,l.Khe"QZ]$/i0Y3'OGR3;/3A%Qle\u)M=sSlD1=,WB*%aV_$8[0L[J%At&:@4o),*%T"uIteVJE&A5LCHi&A,Ma\5R^@\f5e.nLJLS1=EBPQ,-k;Alm,2c<*sKQhH3G%%@J\5f;+Pu?)569<'+6Dd)M$#XjA;ClA<3?<7k%c3'5.]j&QW/1a0obG3P=JkQ3aTQ_nHOOHIl^a$g*.j_bmZ7iU-?nbZ(-OjKV$fI^V*'Gb3fVghSPh=>K<m$4-7<g=+ehRPAG\Efs%,u1;V=tPb2URWZ@W3P>Y/45Du;CN\g_QV+;3b__\jOdi%_c"OHn6mb9,1[VR8]=BGbZN$_;._AUb:k`<I+4!]7ZB3*Ah92O%5h%B%@uD8Y=t)<E1`DVs$gGsZN-Z+s11MJV^+s2lgaC<J8-#.M@6o/SPR\'qPTb-NYQe\&YXh!ckV*%5Jt[jA.NRXi(b'Qo929Q)6d`@P%*TfKW7X*MX6*Co20#oOm1$39P%5B@).P^)VW_/41%mWL@9"E*'6/G!)0X)!@I)mJ18r%td6.o(0'f0YSVhtd"H8ZRo%6Y5#cS;np%>_s8FIt!Bob=aT.RT/lPL4tg1#oaXt+@h/Hb3QENkiH$h]-,_1@)mj>$[+)RZ!bV(*=I$AfWei)JfP5B/D.5crra+%Fi(/!%Uh&0%]LrWd0T=FX@HhPD95n1`%JetYV*aAOO_kLJ#$D![.4&Tm)MpW\&"tDYe$*<o-Ym?_"<X+3HnZ't&UEIQ273!2K8?5ZQpH9k-mClH%+>JtM/r1?(IgFLG7aka0',D#<5SB/$Oe4sm:rFNB9S;IWk.u;G"FnXJBt&N'MKpmp>$p:*OQ%f)p]WZ407mP-J4lk<9\hB0C'?@"%@P,&T0Ego:"o:QI81>>qF474JJUp,h'Eb$sP&i>J"jMe[fsbU`@PKQI*2%($YS#(I#pdGY)%8>>f+S@7c(pBqY^MG)#m,O??:,m_%QPT?%IhdeH!klE3L-VAH\7V#].uV/oJ_hoj0aN(QSmY=U_P43[T\'$;)JiM0M<S1g]c#U*)QYfeHC[a3`EOKR-t<T!)T;,LNjs0/%_6u[d)IBO.k^p#V:4G!ge8VQEU@ZekKfk2IXY?Jjf',dd9:4m%8WVl4,,3*%.O%n+iXGN43c#RG'bOG=@7Mk[TTS`H3q%uiAbQT6%<ltQ@'k,d,__P7;fO]t4B%UOMSq%!sjM]$4(9!oA',q7#`CS,MKJJLC)@.d0*1/%$e!aCf!\Cm*NJ="SAL^Q%'ka]^[83@,L2e8q%p2qs3($DdJU!QV\[Dc5F8D]-*:c8jb/,-q+5r<.?EpEj0jiO`[%#V[uP]?Gm2m4MR!reRp:CE7fjHE4>U&>OUQ76%"g"??i\r,HH%+ZbhM<++:P.g-6ai@-<VhuV!1`<A#s=p(?($8"/,.tCOJ)Y5N,>j5l)RO\l:1XKCL]-@.%Pa7%h=.n4l,SFeA+@HVp92DX^X!!t6%kTo(+'SpQ(%R[i0dp@l2^tEEcs+6Hs(]qum]3>1cg?:&k=t%(*\$GKR$laj?Q!qA+Af:3?!jOM^DF0GBK/1c8Y[##@SB<&>f4&3,%Y#6J"%,3\AU'S^r6fMJm<F:Dg2(#f6R'[8:$ea+2%LLl"-u;=Z!,NsiJtZ6:hC-lSm!oJ\&sCmE>>uf40Z$l=$S9.M7U(OWAR,nV%P]<]/>=oE(KIs#d_5mk?%Rt=>gJS[1.+i9<G6Q`!U*(1e949^^gQKi=<idl!.>i_ZCjRpF>Oi3U!aAFe@_e9]OJ1Dqnpi.E'#Y`t%ePiN6D$sc=AQoIE2B46H^'r%3`%/kDI!gh1fRcO]_m/4`(lll6$j,BiRI(F'.\eN7jr,m',b)(J@6q_,`XM&<\%.1_.br/f%=qa&%DM?i<H!q?,MQnlabC%PW907D-`_)sYK<\`<a!erR$+W5G`\LbYHV(PRerEmC8]RnQZZaPbAKA+#bh=dea/g;fG0JYpCWELsZ_!4\%H0M`\JoC/R\cV$K\66-<5<UX4K#8GbdVENhcW*>]3,.V7-QXuZMtmO\IgNCBT'`?cCED-1Y2UESm:m1j&,`S^Ydrg<(1'GuS^+WT%?HjeW5^6:i$l!0q`UOXSbpdjp0P`9]52%D;8p)X$S'0kB(i,!k5J);>aB!44A=Lc)Va@h;_.Y-*)deBY26h#$`'Aj2'dH*cCK#h+%'@,`+VT"La>13n=\@KO2.-0NZF%.92QT`cS[+IAUR*5+YEDU]t*<ofB[jmrpbF"c3HJl/+W81!pP!UdV6jhoT)`#8BcA"rS#^K&.%'+GMFmuS(s2$V(D"LKY)?m9gsH'JL<EeBr=90`kSO?"NL"[rgn"`f53[Lf)@:23#?b\lBG+;Z)]c\KRjK8BbWL"r+1]JJPn%@>%O%'f`Ri:W$e_om0Y_:-"pt]F3^;Hl'`oI)[b*;P2sD(#B+6nH<mXXcr@!DBM=Zb9RKu&@YLaYG/Zt#1OB-CCZc/"0jGT$i.BMoK"u-%Z9*h5AO;?Reoql"L$m90;O75+$KXUgQl:pEP@3qb7t;6N1b9h!V@3.09UQ,]U2Ei=;K&["/(@5("46kAj(+CrR<hLD0C7dDOUFB2%I/8[4H1Lm;K]=Gro.(JS/!%"q(jVY*3I-6Lj5:<VL;KMWl.J:[4AOp;WL!].Oa7[R.uc(RehXhU@r*XZ=\[iDBl/(a+rg'enBVeH%X\:?RAA`]h`J88]IVZh]REPu[lrWI4o2lTE!\mZW^*^R96Y1@sM';QCF_&&BJM8OTOjL^h02-Bp/PVEGSCq3)U"4i!jA"*N)-XG$%aNd9Y"TGLn]@;/oqp2OM]db(t(cY7g,)Ur8EQ*e9'>1=I)CEZ(5UP,/bQ;(;mnRBq-,-Jb<4-[82/nY6+B)9U!ZY&BC(@`gD4m%*%)cRd'&:D]CPdCJRG#\`gPCb7dV:;k%",-qrM_^qD&Z,q-b]!8_ZiP5=NbANG4a8tE_=G9S"00)62P?O"0Gd=A&Bjg<:WsG8#pgAY%("G=#T6$`/aB)1KXEb)KHS(r;)8I&-pDSQ6ORAoEV2!0P@m]_3WAY4D9C#uY2Lh#sZ-51tetBYCrD?7,pacN"l#I8c"nf^6)Apsu%KO']L[8Hu<Hn?Mh9(9589-Su>D#m8u[=gap_6XKG"CJ-;-NpWpWKc<k-$(7)8tJ``^68#f[''7WdX">MV5u;,K4/njkma[pHLAJn%HMX!0F\XW$6!XIq5[@8U)Gi'jiY9m83DDk,^!r-W61n-\>Yr+u_q`)Ec!,dSJbO1Ui3XJVA)P%bbY\`9FJtTnGEt$!ge0OC#2DjC%Lnrs8n4=gUmBY;OYe<kt(Mk`-UQs8c1j'X)(Sh[5kEpH>FH(2d6;L9.E3;LmN9;+NcF^WgC7rqVU$)jN\O[eLmC>X6T+]k!=kOb_%6?>Z\*MI\1*_SO\mg-TOoT%9[6LP2n,P7#C4$rBA]d*00cqdC"ZE+Pd<o_nZOlqG9<6%GK0q1UdSn<f**f@6UL])2?Z?egFbWn8X%c;$o3P']d.CcEIC#lB;8$dY=ifUb!`[pm88OgjR)`qD_&!603+geD=MV-qg&Y`jh%0d_LFSN4EW'5rQ`$].q$N\:Na"kj>F&Ohde%:E^K;a,a*I2tOSO5qICi"STX"7R*9#X^PU5RE@+cVjuhI,QU!pgSZG\7('m94Juq)N$:7%+CCR>^fn9Js3tkBlc<L^(#q@#YFP0@%E?/\2`d0plG.Ea3P)doqe17]R%.K5<GqG-;6W/.Y#ndqWLU*.@MdS\$"b6p'd7B?ll7!@s-n,SjG\W-sB0Aj+%+f_X8(9n*g)sA8%j3-1RSf7[-#V@Q/#cIi^VrnO(\8114`UnnK?SRWIae4CQBLl*!0g[Q7[i;+U3aLN5%g(uljuCMRJNO'MM4A/s.m=65#;6+`EPm<A%%)V1(ZeQLb`V%.joWrMRYe#JV\`]0>d."IH#!m;E(c;+d_E]>"#b:cs!)MP.MkRql3_:>A0aO:r-VeY!V\:R7#b(Wag)$88OpP)]%:gC3s6lLXJ8j6HjamlSJKAa9j1t,I_A$X<%mYpKbQa'PUHk;[f#mBWJ.)n'M43\1fH*U?G^<-`bmI:`7EqLho?H!%9Fq]O(aKA$=%eMMh]0gVMHeA,j?$#Krs*>8]]0nGn6(kAgcDrQ^ojTK`HZ&E6SFrZX>fem^30G#``YVR0gSl*7"ChFSQD'A`e.Oc3JY9ghX*)+!s%?Pff4T`/OJ)PY`?;%qFaD/tO!'/pW&+>Uo<Q=@+YRNSbIj*4me#KAVQ/O>n,XETX-9l?`R&mRuIhWb=A=c!L;Dlr+<PF-9lVC;AB%BtXVgjnF,VFc`B_1Cg0ZjZmSkq^4nEMUEXSd>Y*A>*<V;:5M7nN(iH3U"jOc-`F&-Z!&=I74.!H68MUdCadec,E<%"kbqCk8.8MK%b#!Z'_<;:o?Vi(n98lp%XB::Y;9<cc<C83.FcB!kaJk%oEn\*lgIHAleMM@\<`PoVG\U59$??ST_9h4Zb)i3"2$h_hEnL\kRRRk5%5W'!(oqe+3d3V30:c#;D7OEeIAP$l=>lk+;,6/Te!hIhs/QS2LI3D*Z`:p$ZVMm8R$:Bn"ZrCJ\gn+a!]iL\#e\OoT0NArp^Ij/`%#5BZcM,K@Y_;K`f3hobq/#$@tY;tP-9*[;Qk0QYYWoh[L5u+L71n'k1oS#b5TTQt8kTj^2"W7WB0@YXOHAYn[Tro8L<TR'%U$hU8%;QEeg&A^Yd%i$(!Gute$<";dA_,u2L*,:>g[ZU`8P*Y1Eaj#e*OL?1<FGEIUmR;=2J]6g_Q0J[M4&ciKYI[(I##o`#8rld]h4[`+%6$.l3"hLbQ:so3:!^e8\)H:+CL'S3QfR&l#=MI^iU!eaGOVh'4;2M!pPEJ=E.-7BN'cBWc\u$Z=.2Ap.6Rd<.<+Z[V<b-q_1Sk\=%=s6AS#MnQ/i^5.JY6m\>=[GQ.ODL7QD9tupW\tR^Yc9SqI-TX(eV6E7_g(2B3bb:O(-60'P89<OeO^.>ZsZ&3:0QkWKhbh8UkOFr%>3Mc9:0QkWKhbhH:R2bAO<MrNcsZc<=l_$+U!+u.UD6*r"r%pVFLnaqo#$<8%-Uifeke&H2ef!dnY&P;BSk/6At8'WP_Lq,%=se!%dL@2EKf'\T@WK'TCY9IE8se[)OW@?4=\E<S-%D5Z%&FN!kR=9n*MP?S&hbju6g;.U7;:,L6tsG`@<7@PJDXG8FU!5nN-0k#/!O(3%-oDGHGgdgaPuIaa%&HlK,(58=LK"JJ9^"C116d)!O_P5_`"Y6NG1*N_AS?0-JZ'!b9NIlCT[g1A1^+jSX<;&L.`AVp_E(%-a/c2>%J0TsG,tKC7dNh+F"%FT5hil97)*uu>!Y0!0:+N*tHBr\UAgkmsJ0ZQX:=@AiL3XAA6tXeEguH4U,.-h_?Qq9_i[K__OR!%743HJo%U_T"1nkq4XMQDp*.3s2AgM-H-79I>9YaA9"`YnS?`.hLt9r*JJ@15#jp1=q7(NA[Gk@4k#32hKSM?E:Ni9O"\M5Z#_-k9'#)\?+\%#_f8nd-"Z+N$8m%#SL6EP#>m\'9O;e=*Z"ZrDYchfc_3YX5mdOPQk*3W)]Ffq+*l<8jmo[PHOT3E+5]nFrY&o1t%5:%R-g-(Xhqc%AJ,Rq]I,G7U234u-6^LICS3oO8`#V$<.q4I2]t*M'+iAcq\arQ,_qa#0g.%Ugnmji+W8/Y.PI#;Ei;)E15,7f6B>[`Vfo6ja41MB%,"+EXRG^2^,VZ/fU-_727#94!D:%-ANC6d&;C\gmYIC?ae?!%k(*rT7;'k0daNUPc1b+?,U@I0PjKI!kj0<[<gRun<juCg(5:Dif%!AGumW-j]S?5'B&W#/C25iF/hgrL]!_`!1<lG5@^)cGJTPIs^:P_`Dqj?,!DX+_>J$rV>]A(E#mLo6//#sGQVUUQ1a,2R5i7Q2A.%fsL>q@N!9".[K:2$OJHZI*.f^,P!*;*C-Xn?t9ki!,#gSH2h(!"LRUVDN0+m`ps$4,MG*`]>[g8%#@?QXg'/DM`.!c7MC>"j#mpq%5Nl"M\AOhidYR;A;&<qbdtqcP8X:lK)[G[QJnn3&"=dLYANVKB6;nDdjot0[c0'V66DKDE.l<N-Z;<DJp`^d=(L;%.9N[q7@np$t%OlUMVd$3,JU3n/BXb\ce&?3f,EeIjj3+bSo&SQ3UfL2Ck4anm-"G-M,:iA1RMFo^31K96"j(((KDKcqZ<(+1:3(%$5Y`t<ua=LmU%->kXaM[1V_mOW0f6lD+UKp'+AYdjFg23Kq>>O%+0-=/ejeP1-IXD0"M8/I9(Z2V`PKptm72gjQTd5IYT%TKba%.s[DVQ9F'BsU4-%C=3N\A_2aH`2\Z3YuK8L)5<4+Z;ME/)X/q*P/u8iM569=U_4!+0PCV&&O).=,'pa),dh1/;h:`FUEK\1h/AUR"4o;@HE*YN8#2Ul%EMOAt6cG0k6k;eZQVj'-?rBYo4V^Y*h8pgl8^7*f-mgf%D+6=\P8iB,9^3di8^.UNd7e<3"!X1*bpnT!-8k[N7PPKY0T&G],h@0u%?*28,-mk3QXK%XeUAV'$U2h#"-?;GK;+G.q1TMacCo1'P6k1FVF[Up1<C^"f;KYBO(TBHiEm\UOOXBm"@h--7KTJq7l%G-n#jI!R%l\9OK810(46:`JWF@&MGKQKOO-\QS.810(46HFX0+[goMb,d3l!%FR-b'8_1<Ou#FP9Pl.*[9S/dT=DL+,0oT\<p^MIebA/Y:8`h%EGiYDOurs3/(Pq%5p@Ig)>XrRj:k[KX/4;;J"F*;(kI2K(=2d7FFsXrNQ_uZ!+AH1FEbaT64ZUS>YUi$@MaQk0InGL4`:OK#LJ2A%_KA/r6Goc+;fP`.+_Ade'grj/NK>2S)Y/Rca9>`T<C%<r)c#/K3L?Te\c?JO'0P4e7j'N?/pNi.foBc72GFRl"^*^RVW)<m6:=E(%SJK3K:LSXW&qY1Oo^E<9$_HLlh5)Y>ZPC.W:U+&:U;H-:#Z_/C"]$j9-)2VDKbguu>+p<5_.kZ`VPJeJZNXQc"S8Lc6!Iuj-"7<Y%j<E_b4\?&RBQ$9pE+U",@idOq5>_./\#@gnI(#Lh;D`bQbj&mm<@$.OEJCWQ=M:U`O#7qPB%^@4(!j4f`FGagO36(sYaTK'H*sAb%BNPWrHnD]4dimfU%(\BMl!!l4jmr<Y"n#U/(5)k&/#iLO=.Scf_T`6]NE*\N#i"htKb7`d.O2Yc#b/\8%Dc*#k`Q+tn?jFl68p=>%Tl#Of`ML@*:/8mVM0tk8bWjLddP\WS=N2o:[>93)S!("72KC3QF.6R*YU\&)+_b@g9sCSo>,<fGfVd`FLJ$.WLgXO[H4"X\RY&C[%9Ca_E=Gq+G#X52*dR_Pk=djXG=Gsp,ZUUfFjUG6+XMoso)ce6El*8XV0OPoq,\sYGjS]@dpWCI1Olq7GajlB_\G@sFl?hJmMR9cY%hB2>Onp+YKE<_dn],:[oMYrlk;?1&,F+a7UDFS&!'_=Oe!3l7!:_rm@\tQ*t[h\qP1)j@%.1A)7k?NjqWr=kRF2&f'eWNO!J\G#(%?@Z@VXpriYTX8/(8n6)!h^`K*m#d<fUiBqL<gYNdTqoPQWL,:l?hUB$XG["QS?d3gZ!DWRYs"Eu61O?#52Kn9Vk$J8k4PBCV>6cL%-oA+VX36s4fat[_]]Ti=_t/mu\IHqJRda6f8H\%ra6L=&[*d>(3L1t+<[?;C(,@])*fm[b_]ZM:FY;F0PceTHZCu%e>[*?;C2$t1%gN*N+EI5ecWl49Ms!uR+'5'o$=q@p7L.?Q&SXMVF/phT98f\1#0\2l\CgYBWde-4<c&jV^l?TDXPtSHcM?a0F5L7kB:<JOkg(8IS%F!Y_WNb+$YOT^8.g^S0t'Af%&T8'fo@5B3Ikr"4+)r4dCbhWQE.<@Et;[RS)'!nch9aG1k\l%H&\o.B=AMfS=:uSuo";eF_3!$$F%CY?=0d(81Q1Bt#$SMYTILs]27D?SK)Y:9"RJa5cP*/3^54+i+M7Mo1b\e29mE8??,X)KYgVD;CTG'/GgZM@&<\sBHAMUo'Vae3e$%2T;>s.OYC4rV$l9*E,Wta3>V`GMLtnF2uNG2g='4EHB1F*B/2tgi7DUboJbCLN9^P6!*PMOdEC0jRL$>VJ%F^kIdmDK0T.p[IsQD%f_RBnmRHs"E3q;D(aVeO<i0'0e1;;JbEs/%C7PHm)ZgU=b/0.7,6SQm1ncHsQH2Qe=f@I8*[3H[8/>T,a..)gYW%-j_MX$g+XX:h%\I9d`N"WCW@U[--!f)-3Erf]_\'SKue>`?rPaL's.?nr_IK^:VVJFG^Q5k)N^B03fQL%omNPC0PJO;OKOi`Xjd6OiG@d]&0L^uk2%&!?Ajnd6DS=I8r&Fdh\Kne)rIC5G";os(Zm+W)#`-3CH+@9nK&+:1&JJoLsf/[qb>@3_mX=352[\.q-uR\$a$q!^P&><t_caDl4`%]-f.0^_LNN^h*/5akn;F?mA!U-&>*Ciek9uNJP+bIQRaS'd_*:ClF?5O73`tNX/BG=0^/0_21Itl!V:n'*'a]\t&Lq`8#653s8c%%dS^!899.;sX5$O`):VZTCc(mT-aCL\Y4?*T&\Z>NqJK,q%QuYUX#qg3k?)S8HlLf$WA`1Bhg%bTFu][V*<9hfQ`&_3]B!"3-c%-#%Oh[KJ'sapaF)m5UVCZs!Po>;"RZ/V$L!!$26E4Ng]J=gmV1L&?hO(d5-F$D<iIhQO18?e=K\=J+h?<BoEeZ&r]J@MdZE[#7GoU.)%<(4n],p$"oQC5Lbi']+f%^gjqbc$sQ<A>?5#U((<oj34<Pn->gbELI_Oqu.YTX$ueE:WG)m$NZA).@=2%aV2p[FH29XEo7QDOF*;%5&"",Rb%J2=nQ_U8b1sO`eo7I8N&<r""R4seQG;!,o9RO9$OfBY%LaS+Jur!,rqY5`[aeGAmjDQ9S)_3hI"+2<(G[G;ceAq?:ldu%MG".<KAr^174O0Fo.#V6_QO=,Ka+%TN#-N9SeAS'D(C,1Tm(D#UDjL!<ZKF38ssZ]<sfT`f;t[)j?]/+OZ[;23T7I!ZQoq4!b!3T%U"lutDP16Y(FkY2KlZVVQD=],ZQ[HfC=tk.VpiYgDs=j/:2&lq5$RU2\\cB6"X@r'0YFN8S.D3#LqHI>TS0Ce!u%ulEt+mdgu<6\%AhX,r1UEEH/X;`p[N@61j8=(TO*)h@o!-X`J&96$!q)>77>!CDCj%m[(GE+D67sQuW"'Xq,N=i:V;"C\!+Hh^R1.SCFZp]&V=Y?W%"^&e,+dhJ=hT!F0V9B,])9_5O4#']G-3cdFR]6oYE>S!D[Y2)J/Z(+0b?AKdiG=^S7-q@JY]\P1Scc?QB8SI.:ir+89UX*n=Q]JB%/1f!@Ql4'o/MNsj_T;ltR'DTZp^*<fT2B"91-Xp+TGh@o<KOc8,cI8q),'gg\WhLdMTdRC-o1,NLnVmP5dKERC@2XYZ:![_OZPu!%&@k0h%Zrh@mLZorj:7;67.(Vs6fe:3Lb,UL0U1l9d2:4^B!s?u;,qU]3NpefKs(T%N7[_%0Pk/XD;D\F/-K,<RT%<?di(OgL4gWu%%b=46R>-cV,#.&PY]YY2@3J1u`i[$Y:bZ8c,"c:h%*/L.7B,HD3V#*HObFR%[jC!2i+QfD@:@,A@DCg'3s*@=O+m4mj>lkkYRk>O%oB.#QK?Ol]nKTLo.8n>$i#*FKKZnLlJp8J8\k\*L&2H1f\k",>_ZGoK?p04u<YU4)pf@GNE4gDNE9]!N?bscZ.bZlm>#knEHjmOi%i<G-g<`EUW$n=b(/2\7Q(46N'3lEUX+B[P6]L^<uf2/Id"2P>/^/To0.8u+T?j0/Q@*e7D69RbF`C]M%i;b53]`is%-[d<J0s[6H%BF+_Z`2ki-Q>t>e7KjUi%1BrQP8F]KW.Y5E'n6B?SW"!$jj\dIS)U:9HoD7$V`CcM/?)VRIMFIaX=MRmd6JQ@<Of+8@X>;bf_rck%of.g;qC5fD5K&SDNp/@`bFKlD<GfB:oTdd.cekGcbL9]YdZ)^u:`%1?_D==B(J4/JMSD:P@2Vdq!gelHG>8@]_QVs1/Mi^PV:^ot%q(J!^&Bc?P-p5R5$,\5HL=VlC97^4-:6W5Hk0>;E5:J"7Pm(Wb:E,qG-JIC".[<<W1rJ#KSma@5(GR]m<(Re(1eb5nX_.b+"DmlN%rP=BNV@t%]OC9V9)WlBliEgp>0fD"n'Tuq+d"ee\r><:*R!;Aj6a]pN:";;,C6]<E5&3kfp>HdeBL@;,@o^^W6dc."A,5=2mOFKn%V'Ok*WKhiKn\pSn8HVe(0564lZg30g4=l_"Q/YGV?'XICJ0ALt;Ie+.fh4n.VT`ANW=WMloY`1%p1!M:WJY^I)IbA\3L&/(n^*NQ%$df9Ff\7:o0Nsp+_@e]OPmm4oapn@h>gF/N1QAaOI+"YF\l,fmHHu&@#1ka2V;ce4b#DUVR`\Kp4`Jjh51al5C8j6?BP)E@6-dX>%?A3$$G)b9XAp<T&$aXJNS$BY*N@89eZY+Y@UESA]SNY:]VMne@-;A&frG8G9/6#<2^XBGfXtPPJPHlO@<%\[!R7tT"=""dgiE2sd%%1H;fp3O;Zc'Y=QY,(D1<LArTf:F7`lt,()P-X8<>=6P>]eX#-cU*e'AOhAN8_FQE,$I%4DG&&H6a_W4h;Alc1!+K@$?r$8fl46]%#UN-#0J\tC+mZfVL`NC*1I1:`B;>O45//;H'3ju+[J-f:ZK0SZ^Yo*Ho0n0=jG_/(=[h&:jOaY>9TY%rfL?DX@r!1pd#=-M?sEXp%gon,/G9=Y!E.qChfar6X<S^s",1g.:F$D(1dG$CtiX1L=0SYo>8`L^P/!DfM)5f0kYPmKlCd$JLo)LkH2Wd)t2EhsLmFiD#)p1-C%o(]-;7d+;dii5!;9hihRU*f"s;A8Y1517AF3q[P7)W1,[QG9p,^#e]7IrG.0bMQP'hX^E,^UO-SjmOdNDu'9K>5lNmnE+7]c\'uB%;pU/!47&$/FfBGq2e^ZVj6&Wj3XuWVb_d8.:]t[OQ<*=G)Kp,A7U0+I_qJKq%7;,4%TO,\Atd;>LKtll8TqP:Z-Yh9?\h):B(&RP%6H2JoXsla*($4'gWX@Grb&A>')1%p]d([k\UEJcF1H$mu7J.%"fI&c-6uAcrJ"[8snBWuWZM<a]J>!?t6R;Jbkhr7eTaQ5&YDRAC%hh;>J8mTNV`iT,:)#`f1QSMEA2FW1^,DoMflr#0JYoB0[K;5o!K%Qnr'Nu6D4ek1Wq'Ui).k\Jl=7T-rQSNQ=h2j!A4?,q!699"h%lS8reQRHu"*=l+>&Ue=EhicWGGW\kWRh1HI"N4=oEM)>G`T+7hXFJGAnI+S0c"3W&;=kAk;A\>tSp4Ut[pGfYKq,68VBD[ED6Z]D%b_)]5$6km[PX84j#sEqjMd=EG=r9d<l*qkIp6b7%,_7Bld0N2WRg1HBmSZfWi*Tj<')ZQGUO$pH8.r^H7[0lq"Qil(]IeXYXLgu#%7M<LF>%DG3R2-CM<_(?G?!7)[WKAoRA-FFHIQf@:BDn&CI46EhIa;TcjV2'JkT(`7*"r@:Zm\N$.#BIrA$8\3SX),d9\&.`^f2m.%O&uMm6;4Bqk%g%:ZQGR<(UN\Cr3s/K]'\$bYAS]0gT0(8rI4,K"BTI=<5g`Kr_*7Sa4(CMX%X18[9)T6p\Mp#P&&ck?nu-*pcTDU%EDeI?%MritJFZSNfknPpFG$f.`dmV\+YGPIr"Lj/(bf8(DrG6L9-/j3"3(ka9?m+@o!'D>Ie6T)2-DYaq7p^,SPddh&]dI.ajIeN%]a-<.(kGprh`;T5he'6("S+_rb4Zm`1;:,(Z<,l12.k\J[-o`>T$9f+L"RZ[pVJJVinK?fN8WPj:Ga`UR8"RW]q*@SlsB6BR52Ri%<4;47QM"Y)JG.`T73^S0ZbsLf`IR]/`/$-4'Vl`Oiq&7/'*kXR/aXAd592LOrGNXM,m39Oh5e]c&(nfH3sI3S&DO!2YGK7iHjF=b%i$^.^$H-<Ds&V_]ABS?alBNq';bmMc_[=nWT='(+ABS?_`0SpY$Qt`d%c63,3E\,iJ;Sg=ElRJORC$M/$^KBqZiM[B5gJ(lh=,is%$Ss2DZ3(oDq(:bDah$.heYC1\BF/3V`@R#BC>CGg]lYgDYQ_=Le!Q[4-du[(KlY>X(,-+r*50\CEW\(.m!-<n!M+K)O6jXq2Ld@0%E^Tg8q)@BlOFKXs*rtASpi"PZ2</R)LJ'@Olt;WHlP`.jW+F1uI.5/]`*[E,=qAsi&-4*S2\$jFS'VKRs3;jPaI=CpD#hs:AN5S6%[)O=fOr-_;/S/'M4dD`baGgcr[iPV\AL/i(!UkkiUCl=B-V"pADC#/P)VZ/"JTlNs+2Thj1Yr6)qT3\1"=XuR!I;@%0u(^T86,_P%-Ta-W.C^Gt<U*UF+7L<ofVG=VJ$MR9(ud\DYb<h4^n>lk+l3;*)nS*M;)fkQ5%(V"o6f$NWsne(`l993q7uP61BI:O`aba-b.[m\%5md)_N:9l)o?@[G!?]+e-NX_i!ZI,3!LGQN5aI?/JFTSJO7$Z&fa%Qp&"9f\_tug:#?XThPQ8l,7U8Cj)q-[,Mu^Z!HLhi1Lp]Q)%1]e/P[3Nm):g)gM8$l2d-GY/;4rcFqSUlb"!7/eK,6=$e_-k6BbVT)/4C@D]bHAU?n=;ZA5B*pHqu$LT?h*J=dH);qDkOaoncm6d%cThf"fad=LIpTNEaZNY>hR$OE]G1n>*U76cro55d=e1pmm+dBs-c0r`&K.oXYL-<!+XQX9UrqCaaB\hm>qRssGlT"h\K&Bt4+@Y[%)RZN$(sSS*rug545VO,:CsOMK(iTcu(o\A*AB2<49>EgUl,DNFIUl$c":tiH(6$oqAHGO*5m#9]U*CZZ'0m[1TFKgeb9?taS1C]h%?NT/Z/OIGa^B#JkO<GGSZ-ih7#quAt/IZ?C/Q53UBLc;b]Y%U'9>EusnVd9fjqChu5Rs#C$`M^]/^BsaMIpp_:Bq7V>3O9lNfa3m%:B8I%hoJ'66@u%"a:W\<!/n`&7]ISZk[YLf;;'po[);osR=L<T\6M?jAO_GC-Q"fT1P$=,2827@OI'8O\Z"'g(H5USE:Nr/>_$ec%3pWUr1!Vf']sTef&<=*i;h1XMENK/U+!2)Tr@X_c0QWXPdJt)/_A$-arCNGdiNqL2-if5X-\>`_NteE&V^F_@/9"0t$C@f[nH4AN%IIAH^(*$%(JLXdZH\pErkj9g+<k%m'4'f#a^/2#=6]7eR[YlkBTf"diQqop)#Bk\5rJZuHnrb4:4/"HcDsmhR^a4/3+*<gN)c1"^%'AEbOX&["uCpOdKYWH#"@<j_+4`b+_BET*`]9Y4@^]Z`p+ao,-A1tD(S@q@E(a0*q@=uVL8D5.=C\Dh;dsEn+S)N8@Aq7/]m5Die%<aiob8K.\O*:::R5)gnbX^H3t7X\c,Ksm%^B4-Ihpu`5`s0s_0IP$c'9X0B1`h(!$%^c'Ja.Y.th\2CD]c;bGB!7C?)Zm?,]Y!?^%oDC?iT*oc/\c-I.qY-1=PnL[>mCR:WiYNIZ'?#4@[AT+/1rj-q=\"@PkG!+[%PqCm8%L*Hg,bGVOSBS\LZrgG20E5Oi-*Io:Ub+q%`ar=[OtB5]CWK7_P$d7c3g'L_.bldnYbCtFP7+,o4&Z]SPXDH[6\/:81cCS3Aa1L<;H&H`@giMR.9h[e[UdR9(W2K]`^jehDDnlN%AqDDNQjCj\11?E^_8Od3';hD1*!,M"Wd**Zbh?0%)+h%!MoT_cWI$?UBH(/V,La)p*&TNm3t">!S%#0>p?Ze:bUAK6i/TkZbSD8G%q:'a:Ie0"_6k>^1bMHgUJ<!F.f+R-,MG-rZFe]e[hQ,0^?m[dQ`1s+b1W_.gN0/*ddE7oGl,]l!)=.TKY*nOGEgDh"IfQKAiE5_i%?oEEO6e;3e$t!W5+08.sbl.fZ3KsKlU.17F/ia[\i0Im#JVJIk/5=Kc1][q#&.Vh+T_X]fM]iXN=>Z]pe!S)h!n(2&_%V;rTa%UJ%<8mon#>u_$N[k&[(sr@C/1f1OV]#^efL$j?&`nlU/7-`[.^Hu]B4VM$_0AXU^'5,o8o+pk.LU5Y=Eb^?hhO(OU&u!]D`6c>?c$Tc%N($)cCObUtJ,tR?*H[IpeaaWaZ[_t*/c8i^k;KWTOhHb@D.IQ0HQ1YmaM&MEhcm*!EU'pOr'n`^S.RQC2_W:?_9YmK#U1$VnBZFG%mBWI]7fq6V4"fpY&t_n1'eKgBDIr!rdd6)$B++HP@B1aAhng^^fY8jD$i@Ce],(9&21rgGXXlhqrQ@ZNgqbGP*BUdJmDh@p@F2N>%dhqdt)T+2iDf?e"0HolEMHT(*Y40JP+3.5"GB%oMCXo]`]OM=GLO5=mHFRU_*Z__,!B-!JS1VM1fZM/^%Q?.EN\eD'&ose%P?om)%9$,hWY)4]Ar`,-k@mD(_hJnXtMpDh&G[[/+5$i]X8Fh!\F16Fk5463S-r5:2#j$oW3$aaObCQqlUj>"FO:f-Fd)j+UO._\h`M>aI%,:8RqEhJjEl/Y)O+4A:$&nn4+k&Il#.5)`aEc>*2:(BAgl(n%m9k8:K&/`LL!7`HbN),U/VA>@<P68F_AC@(m;9@=D%>Zs!TKkt'%H;"TjU9r_a8q4"N[2]*`pqPefLAr4ls1mPW"MqA:K?02+IT;.QK4?Qk+lPXss'HGgYXQHPS0.\!OWZWr@WmQhDfk3i!PR075Ebmm%$,Ls#7kLA3C,I"#]\jPc]J6P^d'O%__DJPIRt$W7"^bpK=K<2M^+/CW<Sq>d3,:\E<;_?o9SPAT:Gf/"$*"A0.>-oNnte(J/="^i%[2ub&U\)5/BfbT<O[H5cIGV+A[R:>n17=_l=='pDHCJ_8>,;)EgH=C/Oe0m>:-"fo*gWMkD.4N&.jtY%>3XnYU?blcW'Dl$/lN"f%FK8A,P)#V:'m,?Lg0>[E@0=RC[QIMd#)]PT"eWU$BXZFmfVMi:KK?1H,sRa*fp*1(p.rp>?g,594EY.ZU@B;p:?6F'mKm"0q#*,F%JEN6QZRJSdIE@0;;_;?^<M=ecaWm?dH]-:WfjDoDW0U@[X4Nig+^JUSH@;a1<BVI8GnYO1:fY7\B"'O`=F1=d@;5"Wh7un)i@q/e%Cr]#l+Ur;9*OOfU9n;_=[KeFSqKeeMOUfLn9+tm;X"+@jA2Vn<XG$WG^rb;jnC5b,J$!uW[ToREe@[6A%Lj;COiAq8'GTB"Y<n:c%m#F,?e%TU'bZ-ea0k@JrUD3@m]\M4<5T=dt;=K(7)6ZrQaP:TVG69EX=1.<]1?=HN/<bW#k"GYS1>p^p.o>e2I+]P[pBP_;@f=H2%DmS(*FU[bH>HW)k-r\]4\#W7hQgN*[aIA*9aEuGu.+E71.>4g))%!koi1j?WqY9X:@i=V)X1dqC/4KM[8!Ij^cf=72"*%nr.^d7d%e>IBND]l^:JKqQT:Rr.h>[<:L&k2A-/]pVo[q.:#2S&82[^@M.;%:*ZS"K=RFFf<#O>-ji=J7J_clGd/?EZM!/4^YbMgRP-5d]@'%odF<IN]bmb/>&"LZ.`_>4Pn!9f[DV)5>V;q*$)uHaB1!^GRlPF7DCbh26o1)o8\hg1)=IUl=\:B9N)oBaB2PRoUjuMn[n!M]uNs"%4M"7J_UF)b/AB0A$DF^!5`atS,!OAeQpns(6$5js&CQr<1CUYEjZ.r.2U(=mUVN2U9VJB5LcADu8ONb_g1,-3TN$?5=#HqCYk0?#%(_ghJ]ppSE`L?Whp`sB):)\^$p<!.W5p5n=\k<:QP]VPNUXLYA+cmDG".;_lqh3/oiU%=#+NBuN'0r3Pq^6o-GGb=iNd!_rC&8s0%UIU0BfD"*"DhOe];Ph7"5X67[%g7Q!T;V;gfrd'-&1!FZ(p0[)GD)lZTpXLOBnZs&aWnC=O(9Dn;OhE]Sf9LsPZ=9nboshIK;,o,%mBNg%.OjP,@02*R^;f"Oh<fHm]9J5u1FBhHXD9TD+Z/p\6R!V487C[1:n*$/7,&SEOWCs5D'`l!VW$123N#,fTL:o@OLIYDM\*)`%!>6X2g91S,Z'%LI@mGjW6.UAC9l[aB<tJp\\Vub!_7b4BOJqE2mT/m=))IL"m?98).A2UhRq8kaiUUS9A=4>OWMi\2JRGp@jAi*e%OPb)i8nD83VW3adb<5+_P"j]c=^LO8riI])N*NF+l4=L#il)9INWIsOjT!s"7co8r_:R2,U$uUOl.f3b@!upD'&V2%?^[?O<kGLO%WZ5i*ai"#c&A%2+Q`tHVRn2rFV3[(?$eoWiQ52E!W*Y.'_tLd"6:"kU"9A]C@nW7<#%+Qr(`-A<Bj7AY:Ot]2.Qcq?_'jDVALC3,%KQ\`V$j\sYo/\%kG\"[HijL-)q9NCoqr_u0hl_La'l^bdDHFX@$Fj@B[k$B["l-82gD+\>!cD)Tm0^@/!OjT;&&]355QP#6&f._7%?X*Ze,TTZh!kS9#s8/Q.JLEUD*!:au&l7M122L"9#_1NZ<;NH52./Zq_)4shN$k3TUsLUq-XVFuP/J>#_ic(ol9$1\1/9<;bJ/;J%NCo;n.56^Di:sh%amK=RV!\Xs*HW;)BO.Rk,45kfZK+&s6Xt^ID&h:@Rp?7/@^A>@=4JV=I1R*B*rMU<V;d[@+^f26]d+J1L1&,a%&;if]?8u)f.E^^VfMJLR2Ydso*>_kGGWCch1iZ)3'[$fs1cqlOW$H%*8h?JJZBu;cM4[/5L?RemC3e?()pn-k"ANlboLYhfN>>43%7Z>%pT>g[^_N,6p:[;THJ@\[bA&132_l_kq[B^;d']^<U9NmcuQ/kt*D':3@[CiYg12>1:Hd2>GK#`NK;L3>^327K/3bqImR+jc7%=sIj(oKl?nI!'(U@I[VhP9oEXjqdNMo?i=9XTk(I*+q(N#X!s+1i-N[%Keh07oko-4(F"QGL@ddAt"SPmb[;7<lt$m5D]&+ILZBc%&=Xsjo0Jk!I':3F2#6:6=?6l?-g;G1rX`^<Ca>9=85DmAhUD(ZTPnc\;UrCc,&-mcV)OTaDp\eRl1[ZOJpqY-7>-82#fmGYO)jqj%n8,<L$6C5.T\q8_WR_T5\[;u+Bs+Dn%nn]84PdX!nD8pZM>.FNTnk)q;oDa",t0p5=;'s+fM-t2!%fVO&]0t>3s@>BHh![Id5O'=%0M;*A2ZY5;Do!^W&_K\V0Cm_-'*>l]Yp&'&Z7o"qG7hS#>n^67l:aOWGP:9BU#&#T%IEF:i^-p/Rbnj6qS\kt:nQ-O4pgn=Hq+P:%)%?b=Y6=:],i'j)-`&o/1eIEl8kVO]?a4s@E5,Lm)T&%fgF1i1#(]+:1Q7YErJYA`,5jo3Cir(-"Z1r1)6T&Hg]msBL&576%1%/)%^JVLb4KjuMXA8nd_As*FPAkHDc,4mLGsU+)Kt5qM!gnS.6N2L[VJ*.Yi"5;.+#7H?2i2>VH2Ri>h+cSH@j^:2fQ5/F!Njh)WBB0f%P1^E;;TPh&[QGJG,jl1lRkLqG[C^W8TsTR05Ea5B/ig8nY3md4Zo/0)IVIc").q[0e363J-`MO(iQP3SJc7r;lcX^<ea`XEXDY`V%Z`H@G,u7Zl.,.?$g)ZfZT^>lSIgE$WNsA"O7VgH%h5,U!cnV)sl,.)m=jT`>)\OD&*UdoV8u2?-mrFdpFnZ19,bedoXGXL6>tHAK%*K*Y;7U-4B8("E>I@5!:6j\H[Y;.Qmk(tod=iW^nN?Zf3W04HH>r=.FMrHi;O3/@rG&ci)o-aq2fZ)P9;L%+<r&IPK8Qn2p,:+*I%hENH'm6I3-aS>u8lB9p4XHH8C-^Zt3F.dr`-NtOk.6/H#U+0];":nn*K5JYt^u+`oh#e2C:D3S.*.P-?pfhjtUAG_^\*1OppFWsp%d=$r@>BJbsq\J"ske9L[/\5lJr?Agmm_-*f&@#NeED3Kh[8hEt3;B)Yec*B,+.[fj2b?Sq#>&?`"E55-bi"X6.*m@NOE8=IFAh8;%<q]@GbV6`.=8YkDCJV.S#H<!3.8,7U/Bh+%Vo'oR*PV=FC-S:hHpE,.nU]sV<%#LR\n@56%jEL!-bKuhB2\;ThGR+nQ)&ET]rW7P%lX%JTE>&!5I@*==QgN<Kl]"VWhW-._&6i'8P,pSRT0[7f5>774_;&\@b7"fOKAUb&W_=m,Ud:19H-!a9j1P'sa=?)@5O&)lRLi4T%5LdeAF[L.>4@S_V5V+a1<enVUjaQlL:NAZ&P/utY:_XH;Vr2c-V-TNqi'X`d#r'UQO9E<)Zu'96QZ-*JU[!ugVqE10.@#;b$='n\%1bLu9RX-MS2LV#:@1iGlOeF.<&+UkgD5^qE``;pOqHYALdWW!/1EGb'6Wa__8lakFo<-@KI4EYF))Jf?jIq/,P@DV##OR3Ji<Uh?%58iNP^O8/.C/"0eA,su\\GM8J,:;'7OH`LP`p#!eA'?%N"#A'2UCqk&Qdl?$g.sAA87!<0J8AQKY599=.suWa81a8Wm<p_H-^8sU%>u^6SK2\rYiC>%u.*!Lm.4m"1UN.f;I/O,FU,!ddOs&dF&i)X7'-a$b2FK[@W>+lV_B+<B!'Md`$\TH&H\'g.7?D/5,/.H%:rG0N%RN`fT6n.,LqtY#]L_m>^WtZblU[f$dHq-^R7D*f$Yse[*0<a-+GR/KOn%Lk,f_Y_P6*^m]$t0[g52dESA=pr%TOaZ'@>ANg$t8o,%6$^S,OJa=o;LZL]'N0DVC7p['E47"O0:3R`H*RMZq$ZYZ6N2kZVFel#(kApjKI_nbrHp37ek\[g;Rj'EBrN7*.A/-PftE>RI\9(G%`B6MS.HXbQMIQR;&l2(u;n.&,?QB`U9qb99cP#+Lo*l.[.HVSf'ug(_4A<bBr[>3(jsr7t`I)5V4N)V5n_$(flSsagOSB86$P`6X%[ul['3_f_r,/:[Dr<UrEV)Dla^-$",g'R%ZLX`3bDcD.ip9N2&kc\shoHSecniPV,a,GIF/c=]EhsrhS,e`q-&F<+X)fC7[-.'7g%7Man;X(c/8/IU1I`[SW5Cd"@'kh'r)Gn3\rP2C]+8H]+o^%PT0i4.ff7G0csE4@7`>1l+*n)!%K:uF'V-06Fd]:>tE4kDFsE.9n6%@KM.j#YV0[?M3k14j>,n8b+4=T1P*a)HrD(fW1)]4W`p/Y+W?=+K\iml1%m3)Zd2`rG3kIEShQO3>%ukTZ9Eoa"Ej::\GBUIh_+O%4(jD6/(qij4H_sbn6I]tnO9<++0_8EMY;R`D(:&I`J:D=",&:kX`L:1`OtO$@[rTEE)1;;bA:mtr=G27G^7\8'!QZs$jHJS_&a_I%]&j'WDf(A:Ve/kn1jmpUWGqW3D4dX4@:^^S4cGLSWMJdNQ1jB%8A>o;Xl++$Ik1:u_;>V!<q*SM^D6[Ki,8dK/,3>bh[9?`n@r<6%+/e\aNaGeU<?:D<7*BM9)KXtLq(5pu1-bQoULSQsW10Q1U[l>q6tM7)3F=($^V4q>kk6;3mm9LFQ5;"I'NS0T.D&':B>X(1\1MI(%imGMtZI`iuJqT\Bq-Z4pr^Fb[3C>0Hmc<6@TJ]gU;=3tSkSB"si++1_Rr!>!9G2'!bB&4S<*EsrP8>UqIA3IaJJqsm=\c15=6T9;%`?%(V::/:QG)BE*_=#Ur1;Q`;JRE\FV?+N!Z1/OY.eg3>U0;-p\K2IQ?heK"`-=`am"tI.Jj$B]8?aJ;-OKLBD[?R$j!PMR^/40S%"P\o5U=Z@>PN_[nV]rggi8Pro-5@i?^*#+#YNZE&.ZIQS7&<\h:P)2c9>!Zh;,ITu)H=,i&QFZ=RIp?oglc!9Llj!sVT'pq*pd/8%H9GU3'FA]7et/Pd,:\EoHJJ[<6)7YgW'i=h,.&WI*MePQ\tQq`a`R^=,e7gZ56Q#Op6JVT;FsP+\Kor8W#3X!7?8=Llb^L`2)'\/%Q\;uDmgKK2`6Qa_)n?aD)\o1(<bLD"_VH8JT\-Rsl3e6=a.a@_$$U$c>^rP;LI&`onCF="A"pkX7)hYl?]ss];V2%0');\_QRo'A%Wp\K4(XEM!92Zc&B/0L*Y+RQO#,U4]mbbGmq[t2m.qg[e0gF@-/XtFu7$9u,oEU9/4Hu!C=Y^G.AeRV!Vpmk-*q`)B!Sj\b'Ts)'%ek0!.<t(OVW@m[a$fP(\QABSQ'T,;Cj7Om!#3"';RYe='Q.:-n`CY:=RHf]H*F-W`!%d['=Kni&+J/;UM*K&OT/0`V;EsP/+uM:(%jLRA,CRk0@CcR'i#bP)?8aJIGmnCu?0E2mbF)64Anp:mpQj&2sWn2nuPT&%nYuO_!;cp?#(,+3+;B9_"?.!N21%/R=WcGhXlp/aP%Xe>f0V$4!I<UmqBM.[&Y?d/6N*5@LMD[L8B_(&\)cH=5^9'7d7:Tb&R+(j[cY_QYXErTZ/@d/QdXPY')cZkgJl':FUAQJG.n25p!%(&%+!CU;&/M][]$QB/FDgO:alkb%q(p,Qk\3`D-0XI2gS#<'&U_)a37)\-V'V<X8i?tAR#29:lP7[hS051f<kO=jUc?r:"CWuBh9%3?;`9s118T5gV>G%u--!ST"b9]=c0%LrT[k)GfP[h@h.5FR4\`]9s\TNtnI1>dmfTeP5#ZP!R2g+F1Wn@)RDKoJh`oW3I*c@V50X%&"/AmD^Yq[g*.W(VdX3)2CQO!b6C6q*m)H4G$m8f:d-FkQB$C"Ej6Ek5TN,S==cjoP]F2_r.l^@MM2dM_mS7X:5X-A(*[A<!P=+.%S0qbZ7t3K0$T1m-Dle82&J)gQX@gVM6p5<,P>tDRX\U.C>W?T$iSdF"A_XXsfk[+;5m5c]o8i0J("8"BIE6A-L&$fh&h8!a7(IJ$%mX*)8Og1pD2BS8[^SuTC2OuS`j09JE*-"(F+o]$tlYgKe9D_rIhpVLip:%EDV>W"5DeX\oqche3df,R+?f'61QM1>sUcf4YO3<^N%f-P`lYE_$/_^YSPoB7:on^/dLhT&q*$8p`)R$ISApKN&)kPMAKj-F\o2(DoY:Oub,1>e9-UF"#`+MW0(<+^gXeN+geO,;R^^4O&4%XNO]=(;q[:g)'G?QH([,IfX\<7Du&s6?O=kVMEkG0l0Fn2oIp%B.>@jascn0)KG-SSd>!QE+bm$T;2ED)Xr&RmpPEP]q6iojWUI'%lVZ&.'2m5M:S"!O8a-^FJ"i8?jo"A4T$mR*n2-t'*@6s<-[+W3?NML:S3P]a$$)Vu8jRs@KYj<_a;"7o`&7c^-^]LWFo3ZORFOPg%5N!ZWTHBPP&G-&tJV$(939:!fQ(jr?,X*jE>oY6VhEM9lm?IR@pl^sgja?es9JPGoM\Pb.!u1>9DhVZ7`=jLOIt1$fcGS(&<7FPU%--CLTlq2<4ZA0+SI"c7.S1e%)lOM3<)\RYh'^&Yao*l!@)G,*9Lh[4n2I4HlhJ[EHiq)YO/e9^!jF'+\YZ'>(gD([6<=+d^\UUiU%e'QX,,W<Vj5qqPCH+Tap!r=HL,3`lVs5QGfY!$AMT)-%2fE$:(2H30@>)Pr7XLXmd5%s@tk`usl=1ilVf[[H1f$cM+GuE.30/YVD%M+(1)?0p^[b!&jZLH`:98uh/4I0V'`I;"j!2)]&RUJ+=66!>ff20QXT2&YoMroYQ=@p(?*T1IT"+n.<(e*;5'.3VBZ4-lc9-43W8%plf64/8=JYl/@f'a+mQ96d8AT]sG6p]45?qMji8lUm-97O-m,uUr6b%c]4#VZKZLf>!-aH%lmktBI9OC.&&+WjrpC,%ucs-%m\f!%FB,oY.7jt>>ZMbr`1>hld'FCs!daRW<RXSA-aa&5MaDiV\6%;k'=]F)a.H-9N_:.o.jDG",UQ42*XYMLp?;o/*[XPbk+ecb:@OE#%LjLOd,igOQ59OpK>QZ`&,9@VhQ]_H>GCjm&o1hht#i*LO)=B=W0+*T'W^#^fA4f\&PY&p5W:o=E-3h5QfLd8PP>t#I`TfhPia=U,%"?Ht]?MqWQ,G?;qa"W=5FK0\+etaA)Unt^qW8<4c/0X6U@5ig1VQRn_drpnY1`MYl.C[.(Elg:RX\p#qdU2b.kb^.uYGDG:SLdf)%(!S-VN?@WFLR+pRc]cXr<\:pA7RiWhX3We>U,/QDG5L82]YujU8*%^#\oL^BU,jArk/LIs8>XI^R&I*->2^/j.T=[+*e\.H'lb7L%W,W99`9.k8QmjoYC%@0Ko0plOXomWe-/L++6d`"KDj>RJ`*4PE.e-Pr[n=;5iiNi3Q2#O'`'7@h(h\b<*TIj%=O*s]%I\<XAN\K1%SuYpe,_#aQUZ4d:nDQIi)]^`[Q%\1hF:ZdY\j%Bd%+:7_P`G=V.g\`A!\<M#iJ>+-Yp_cc]lH?UjIrs[U!HLcU3;,En!3%PP[`)&%>)P^O+kC<A>)C*7j[HsbJ%C_[Q$m:S_'YjI8Tt1&.Hq[t6i#<;O!rm(bMYY%23]njJnn1D<,`k>9b#\dbXr>r")+CdZlN)g8?65N%j)_ql=q,o>P?R8\KRm;o\c&>T\c`"lCj#B\c>8sAkrf<>>-5Ur:ogk5:h[6P/1>3ic?Z@rLAaWM`kG`Pf"ak??DBkrc?N*e#AUaN%l]HM\+B<u%X0@F[C_^5pW7[i7'D5PFSI!ME&1f[O2-aS>=_P="1.Kc/%>BQ_3mAj(P&c//'BS9uEmSb<^(\>lU#F_iAPm2Ra-0=u%<,f`t;Y;4N<)-D7^-7^+48;P%$c30hp2;T;.^'ssn;-b-"]_M6j5P2)@j%^.<0$r#V[d'1=ZShj*`Tu]9#QtL5/K!)aXQGp,c;o4%k^8Olp^JgDiP0C-RRn,B<$(/N;'V#Waf0N2WG`ThTI'4D@]%JlkTEW<@9joDo&Z/dG]e`5K>`D@P_B`#hRT`YBP?JsD+S3Ul<,M'%_.c[X=g8Uka9u#c&LCJZi7/[")<:st,@s)A]Id,bCn"E:SdsS^:kV8Z978?6"5T-I7d--EL9[V1[?2pC&F?+N+aA("PVEXtRtnig%j:@BOBu&,,\&gn;)0@4`DYC!HL"Tm&"$$$OTUMRT"QMKE]mR458fai]6fF&(kai=[IZ9*n3T0'D[gRO2Qti"Lab\$B0mb;WI@)3Z%h1<P6W6kdd[YM_8H?rt3R`dCAPH6DgVj.1+&i0'Qcd\F3V)Jg"1W*+GZ<8k^_o6MV!b(b'J[#Z)Y_(&?Y=k=k6'-tHJGTQFOM)2;%T2sO,Jg!hD6Ba(1<nF*W#W!`#-^i/RV:1TD#ii3;9Qnn6Jg;;NY=_*Of[ek>5r^i*gUk^'M2B>&&+TD1mg=KKc$M\:XKD%iY4^2s%Ur)<;!lBbji!b=cBp+)=@9X1rG7"U'ZB]9*2r3"4eLVi'0Ru_[*)b-5l\?9Os1(mmDR"/=Kj-+`@c8(1DmriY`PO2BDR"/=Kj-+@%rAtZ#3,I5?9T+jq^;$T3+&sXP*B%`ll1Oi0O,jbiI%KAA^<q4TN[9cA$]di9@aG%"mR&,E'B;AUaBO"k[Obq>_#TpuI@r%ecJ$+2%PaX0C@U^nqkD3B\/*]W'AUqP)o9I)")1/AOmQHg?(k$bP\CB`Gn[S&Ko/M64?4%AlJkqh*Jm[0Z"U(IVF/8R3!$q?8QDF:higV>[%HejnFf.S1cBD&"?\HTaO??:ed^1-8ghcJ#[q*"=eam\Og]oE0l+MTS$AK1!-;`9^3<(nk=4t8dIn!@]6:;5VQO:6$a:i)QT^7e+T%\U@u:L^g%ac[i,#Hs_3N6pO*.IAr2I#!3ZO@l!LVn[ml3m)>*=35G;N6C"p\8)i3$!0)-i_=jSMFmSZ+'Z%/U!"'I[HEO;T4i9E=%D<QX_ZD,AOc,tZQ6RNkTNFBf%1]+=mTJHDI4dqn)C%!e2fnjE9,8Oe9AD5RJ7V:@3(k,rE\3",k*[=So]fY`M)GT9+cc3:-En]NP%nBS?pYpIp1\GTnbmYr#_)IrAn0-[W=]])gdG!mPQSt_of[B,)G[ocT;'pE1lWId3tkT0eXop*0P[S@$Kod67A4(-GG`o^DLCs-66%d?*"(X1dlF4V[TG2Xri4Deu>T,GK?$$s$qABD"8-=#*n2"5p'cfa:66_:(_p!FT$D`h>#7;`4>F^D7r[mO>A>m^k[bY!/=R<la=P%8:MYlAY+:$2iH4oSRsZSIm&..Q5>"*rE'KF*?Hf&?>%o]Fcr<,H.')ud%Fr4/g#%72H5g%<AcQu(rX9@%Ur+Y8M(3]?46^T0Z0`l%V?,-$aUhmop\mIfZ6Qg0q*5%X5$K`*@UUtOM/@RC2jbd;74jJR\]hCG\KWFo%1_5W7PD)<.IeWhYKR`RW7gA)(uL;@ApcPt],BMN%phn)q1VT@Kh2Lg[0&qT=Dm,P2DSJ>gX$-@]\)5lBID;t8I,t"=FN/%o2c!pZEV.u$2E]'0g_GLGNsDg8R=8dXH?bp=27TBVDe=K$%)aZ?/]o3RehQX#45.(k>%/M5j\fR3CN+$F]Ygqfk+B@f>*Shi<NJS]!<R'h5P#=0'f)huc9)<WhTlibqHU^IZcHN?MZN2;eX.ld=%=]JrILpJR>\oDO!XK%hId<AnCcQ4tAC2e.;#FJL1EH#I$8uR!)V1VkB8?ke"MXMk:_t`rH[+Z=WLZVJ92-P12Qte5`d]CSb+4$83%;Bt^@m6VAf",GYhNZp9E.6'?ug;4W:_qNR2ceIVDWTAs8Jn-HQ7$q,8N0U:SiGo'oOL5e31mtc07Q/><'5G(f$p,D?ohPW)*kecb%GSp/`FdP&f`2BW!P-=rsgXGBohV8=h+Pb.cI0O5po$Uje:b(@JW^A4*4s;fG#c+VaMfJbYcIf@/$RLZ`otj2/fFZL$GWor5_X&7Y%Y!Qu[/QgB-O'B#F2T(8%'s_ChHo3RiHU'l*fE`UpOPg+BUlTW5Ln>@C\HOAr+u[6;N6mPDVgh+I66lP77^#?#H"O_-ftq(,U\\07%WWPR\O@[;YXlhn%5l98Ua\*oG`/EqoA?jQV_P0T`YiCf*P,hn\#A]LiD7Y@KN?6Q>r#.6.n8l-DDC^'<g"X[+<q`u-\!=Y/m&QD*%]F>>I)um/Bs%(8kD+i7[EGfV4HTI&H><6UqV].[lZ@B0upbkD_NrY?7_ZiZpo/]!9XTtnLO+h#]W]i'%?EF-Y%MmqH#:oCNWH#iG%\@3_.HdUJ.#PItsj<Vq*I7X[*%/VFA1dgpAT(-Y1qWTm>pT^&RKP!dj"l0W%q=lbr!M9sq>Uj'6lRZYHVHQ7XK5Z\$Q(f/$=5tn!%]*eu^c(OYa]W@4@7ITZ@G;$YeH0P:ue!GRXl$GYiiV;qMI/B*\^\[WThn?eZ^]3ZdTDn1]*VgD"-`aGb8\L+m@gr1:nht%JbJ4)L%7saE(qr>.=^]!f<++O:qhu2idJ+aDfqUmO9rT_"%^\rutrU#+2numQ<kAPk@B%R$,?i-a>J+S@8f(.jLp&:T_q!C<4li)#+B5`SJ%m/R"N5<C.jQ94--hfU.YJ#`I.?N\N]JMfE:q]GjE]_t7dj1e`6T<ml35:#Z?e@iQ&-I]F$3k!a^^<&q7[G+6C3cN"`f7"<Ms3[S!%b9[s-r:tdnf@\\ITna<'$Mnr=A83/_eS:*B_fCikMDffGD<q0J*-,:9RY%Ii?5M:oGin`EhlLaSLkm$8]>usOd9fu)lRHc==2!jC%P_L[<Sk-r[2>n>e+FP1ik(u>YG$I@0j`Ft>mdtTSj[7(KGuc$A<.-E#+cbT'cDnkVA-a9BJiW_aa]P/[aT$(CI<8h(oQ0fA=`Vqo%S(#m#NV:[j'_AsihjKu0qfTps[)m3(b2Li0JnM/P`h_]-*9LlK8il_?^<VQ%h6^cie`O+!l;lt6UA/kIY7#j8%5i"[baYh=oY(tf%E`O22h5Z*D7W_8tY]R$];n&u1[aHWI)ir9fl=90^5PIg!'0M_M[hoZMSbr,`[:.N:P>dd\_W7tgD181:F8qWQ`&dRGKk_*cd#Cmm%ZO&3]Wbq*ZQ\HX5>6F:NE64n\'$NL]!quNJ^V@fIqX!lPI;J7AHP;=C8S!nJMF`P%Pb$]<n^P/oGt#EeDm]Jjc!7m<Z'=84qsL7^%i,P?;GIDgPKNV(mg69'[GfTp+2>t?`f8oA"Z2-u"`4TV\D#2j\H]'X.?#Y55lLiGYh);Yu[@>G(ZRos2GFXFOK,d5C&O3,(A@9KX%=@l#0#a%9:je]r*kuk-"E;9W04,_cCjPjo4+k=lf-)a3)l'G]r-Gi-O%>N*!\H/k>?,#7jd^-liE'6`T1\Ci,gDF:$%#iEC/EGik%EQFs>+K\A@F2[<EPo+Tl()QW`AK+frdV@#Xd/LIH?F$@KXVR<:)ceM"ko@-Fc98!Y2We+jSaBHLQR[".37"`NkO"A'^LXaCViKs_%s.ndscI:46Ci<\*ErWL3SNO^FWF7BaB4Yo$g6Ku!q/+;$h5gOIe?"t4O1oK&SsVIIL])X"Bu[RS>5C=oYI4JN*`HuR7S_Y-3jM!E%hc5#ghXlHbJ.aDF?+(gKneqSc)UgosA8IiaWTtMeo8J8s14/<D#k6Md?CI3]h+6XXeFqerP0:5Ne3hgNZF(5s?67H55T;^(7/+q"%UR>>%mu42HZujVea@WX@W?S.,7EkP8Xh(;\cXT+S<Jm6[XR+td9U9QIX]mg/[Ps5!g#b5Za14ZUQ`<h3offS.2qmW(5.'dRKgEh#%WeTbWTaKj$e[DdO?e`^B[k?M-ZN(2q(g2,3X#bi)&&J3[Jh#l(glcB9Y`#b<\F2"/H/tcI0&WRRNP+roLiM7*2M%;[M7j),bp"Qa%<nd^7B#O'Nc0kpF'8BOl(,E>jZf`.=P6;k$*KhsaT,"WNkKjrmPVXA_P[SoK5M>;MZ4U6ZaIi\CS#k=:VUhY1MRU_"D=c-*)<eTT%Emq9WC\OgcS(T?N6^><WlT0.SLfoS0oh.B@2BNl*2TDTlBEL]*#1b*VB$D+ZF^Z=5.K8IA\O[OUX6J96lbf(GP"%H3qaC*j"hRk1%<8/=0nk]RQQsb@8eT]#^=([cQfho6F*+mW[@E(`ZheHd"\'_IR5AqAc'S5cS;m@jX#/L=G"HnC[XDmAS0FkR!?n7_7"C%!ROF#Sm%K@Oe0V@]hHf,F<cgCdg?=^BSGDI&"4=rMS=6RQ0.0-t,>P)Pliklf3(Jb$Af7*O5fnit)ZiGbVPkD;R-P/c(3TU8`8XV.qfLQ>0'%i9EtB>LBYu+h$r$BD>T@"25=/bJ9Dp8``M?ei+h\YUAt$m\R"AQekA2P+Dg8oRAD]VnID\o'4+`C_^t?FB[1Ud>L@Ba*"*C'!?AM%W9;mX65[A@j"Ig(TuK4:+%P5GV^(B(s/j#N=2")6TDnh6(L(11eo+Gjj*+=(j0qlis4[_,3LUdSTlZ]W90UrcDO6$(D!!#0@fK=!%;QCo;nLU`X=])p>?U`OGmo!tEDpdlFGgndM0_r<q;VggcNI;>n3q)o;2Jrm+1N*/?BL^^),LYoQ;?1s.f@i,QI1u<d>52BEK?&EW%@P6fIYL>7S)o(IDl'V0mZ=%3s%60=([;`)NX!(nOC22W:C&KnJU($9[VRuG*]//jY/S!s)HqZRhDY#]\*N,@%GM+?j`U;X>+C'#t%^WX>Q71]rK$n/j)>8>Tb'9Yb1g;ksX5L.=iJ!V1N4a3_:k0a+]e<.Fo<=Dd7cVB<=Wr)4[j'/i5M72-*YrR%bjF+5#ICgkPA!3n<%GP.Dp>O74&.V^WoX-VA%0fO28G);/pDl5u\*qgO^?pqYuig-i@&OUY6l,4unFkZ3h-'MqSk8>#8ho2h%Z=31Vn2^EXo@+d42D8rD%I-K?<;3$-jR_Od1fN^s//T*0%A",sr(Qj`7f<AHs&g^bKoKI@ao.K2)OrZ-F%S[SLMm=1H7nCbMAqoX-<(,?,V'\UeKoKoL/VQ[?%R$=b$YA-GA,;.`t[Z-]P3h%RF\*>#]"c,b?H'5tI,oP+ZXL3un6f5oC9grm-lQi"De&gFRp9#aBC;cm]3ZSj9;)Mq9WSkCr0K_0X%<e4GpUh/LnB-0W*mJA/+[#<iqP2nZP:_:;*6,[2lJTnB"k88BhY]%l0:5`PP:!XPhT6Ash\l@uu%'nRD<V'I)j$XFn]-.W:(#r;J%,l-2Zd+7I%#1MJXjpe)q6d@"&].,a4H^.@`LCX`+Xl^TbNNp-s-p<5E<8!8>kE_J>Z*2$+N@_dsEVK,nV+;Ir1#=dpeAlrdM9XdU%9o#UNM0DPH=5be9)g!!qS@r1iOt8s,n%3+`T9lN!5O*Kcdan#q,htOu\f,1?ndj_cYu`EUEI%,n2%A-4BWn5rWf(rPK8Bt6Sl$Q;%)f:)>K#rm91fa(K/P_eG(;3lGq`/N`ku!DNU#,NMT$:l]S@1^YM%:>0+Qg0P*h;4_3\:WkrD;rM#i4">)mCIe8p7kO\IAX%ZsU0)%/;\eH.QZGl>c.BFe]to?&*/uJEL^4Sk$8D8Z9p3&rU8/I?jS\h_/?GVC;^f,P<K8\`'oY%H2U'B:Ku(Afqcck(+/CV8NW&X9E$Qo%hP*QDj0Z-SpKkLJb).3`p+;5FW!LULY5,U:2%BY$Tj2mLCd0F%ZcD]Tl!Gg@m:!9Mm\52t-$*4*p#SFb2Qpf1MrIr:!\k20P])n@%hM.JI58$b?g'6;M6ZftoigSiS,kTqlZ&9^;*.PXp([G5tc4Ur4I_T@8<Vb2_q2uts2Vm'&%q>%kYM]'8VgnX:2kRh_oNshb[m0`L%\%hm2:Z(&WVZ,,ts7358H-4n9s73e*^]*P;J+ANBD"M(AIIm+B^\u:+s0D[\p:u`<oo&9f*<Uffl&uaET6r\Lk:bRjo3_C#htpB#%q`,.GIKTK<YlmZ`qY8K@'JUjLrXRD%IPd%F9BuQV*KAD@_Y`NoZM$;nm.cNHG'qjoX.T",53qoJs6>r!NkM:Z9hO]:*Gb!N1XqJ:%&`$Pep1<\6-$nsY+'s\[<fLV(+7ZXSY0([I@I+pp0r1.1$0UPV=([==r9uaR"df%GKS;>7go<MtV0h'SeCW+u/elJRk5c20Ec1L>%nYP^."\7c#0!rq4[1s.(CVRuD%nNL9HQlaK]kjDuIab^nig3N_33JK!pdg*gn%X8Ce$&f:]<?\Wo<#iYqTH)Al0Gg^^A[aA^\[4s%?iR>.^V'O;]<?^pQd"'"^\l,Zr3M@KO2U/;qqb]XkJ-reIfRO^Yj)~>%AI9_PrivateDataEnd
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: two_env-func_of_duration-param_limit_test-all_five.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Kevin Bullaughey
%%CreationDate: 10/20/11
%%BoundingBox: 0 0 472 268
%%HiResBoundingBox: 0 0 471.4565 268
%%CropBox: 0 0 471.4565 268
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 76 8%%BeginData: 10294 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD6DFF7DA87DA8A8A87D7D7DA8FD057DA87DFFFFFFA8A8FD59FF7D%A8FD0EFFA8A87D7DA8A87DA87D7DA8FD067DA8FFFFFF277DFD59FF5227FD%10FFAFA8FFA8FFAFFFA8FFA8FD08FFA85252FD59FF2752A8FD06FFCAA1C9%A1CAA1C9A1C3A1C39AA0A0A1A1A1A8FFA8A8FD62FFA8A8FD07FFCACAC3CA%CACAC3C9A1CAC3C39AC3C3C9CAFFFFFFA8FD57FFA8A8FD15FFCACAA8FFCA%CAA1FFCACAA8FD05FFA8FD56FFA8FF7DA8FD13FFA8A8A8A1A8A1A8A1A1A8%A8A1A8A1FD05A87DA8A8FD0AFFA8FD21FFA8CAFD24FFCAA1A8FFA8FD13FF%7DFFA1FFA8FFA8FFA8FF7DA8AFCAA8FFA8FFA8A8FFA8A8FD08FF7D527DFF%A8FD1DFFCACACAFD23FFCACAA1FD16FFA8FD09FFA8A8FFCAFD07FFA8FD09%FFA8527DA8A8FD1AFFCACAC3CA7DA8FD06FFA8FD19FFCACAA1A87D7DFD16%FFA8FD09FF7DFD0AFFA8A8FD0CFFA8FD19FFCACAA1A884FD08FFA87DFD17%FFC9CAA1A884FFA8FD13FF7DA8FFA8FD09FFA8A8FD09FFA8FD0DFFA8A8FD%16FFCAA1A77DA8A8FD09FFA87DA8FD13FFCACAA1A17DA8A8FFFFA8FFFFA8%FD10FF7DA8A87DFD09FF7DA8FD09FFA8A8FD0AFFA8FFA8FD15FFCACAA1A8%A8FD0CFFA87DFD13FFCACAA1A8A8FD05FF7DFF7D7D52A8FD0EFFA8FFA8A8%FD09FFA8A8FD09FFA8FD0AFF527DA87DFD13FFCAA1A17DA8A8FD0DFFA8A8%A8FD0FFFCACAA1A17DA8FD07FFA8A87D27527DFD10FFA87DFF93C3FD06FF%7DA8FD09FFA8A8FD09FFA87DFFA8FD11FFCAC9A1A8A8FD10FFA8A8FD0FFF%CAC37DA8A8FD09FFA8FD07FFA8FD0DFFA8A8FFC2C3FD06FFA8A8FD09FFA8%FD04FFA8277DFD05FFA8A8FD0EFFCACAA1A17DA8AFFD11FF7DA8A8FD0BFF%CAC976A17DA9FD0BFFA8A8FD05FF52F87DFD07FFA8FD05FF7DFD09FF7DFD%0AFFA8A8FD04FF27A8FD06FFA8FD0DFFA1A17DA8A8FD14FFA8A8A8FD0AFF%A1A17DA9FD0EFFA8FD06FFA852A8FD06FF277DFFFF52A8A8A8FD09FFA8A8%FD09FFA8FD04FFA8277DFFFFFFA8A8FFA8FD0AFFA1A176A1A8FD17FF7DA8%A8FD05FFCFFFA1A176A8A8FD10FFA8A8FD05FF2752A8FD06FF5252FFFF52%7DA87DFD09FF7DFD0AFFA8A8FFFFFFA8F8A8FFFFFF5252FF52A8A8FFFFFF%A8CAA1A17CA1A8FD19FFA17D7DFFFFFFA8CAA1A17CA8A8FD13FFA8FFA8FF%A8FFFF52F8A8FD06FF277DFD04FFA8A8FD09FFA8A8FD09FFA8FD04FFA827%7DFFFFFF7DA8FF7DA1A87D7D7DA87DA8A8FD1CFFA1FD057DA77DA8A8FD15%FFA87DA85227527DFF7D52A8FD05FFA82752FD04FFA87DFD09FF7DA8FD09%FFA8A8FFFFFFA827A8FD06FFA8CACFCFA1FD21FFC9A87DA1A8FD1BFFA8FF%7D7D7DA8FF7D27FD07FF527DFD04FFA8A8FD09FFA8A8FD09FFA8FD04FF52%F852FD06FFA8A8CAC9CAFD21FFCAA17D52A8FD1BFFA8FD06FF7D277DFD05%FFA82752FFFFA8A8A87DFD06FFA852FF7DA8FD09FFA8A8FFFFFF7D52A8FD%04FFA8FFA8FFCACAFD22FFA1CA847DA7FD1BFFA8FD06FFA852FD06FFA827%7DFFFF52A8A87DFD06FF7D52FFA8A8FD09FFA8FD04FFA8A8A8FFFFFF527D%A87DFD0EFFA8FD0BFFA8FD05FFA8FD04FFA8A1A852CAFD1BFFA8A8FD05FF%7D277DFD05FF7DF852FFFFA8A8FF7DFD07FFA8FF7DFD0AFFA8A8FFFFFFA8%27A8FFFFA87D7DFFA8FD0BFFCACAA8525252A87D527D27527D7D277D5252%527D27A8FD04FFA8C9A8A1CAFD1BFFA8FD06FFA852FD07FF7DFD05FFA8A8%FD09FFA8A8FD07FFA8FFA8FD04FFA82752FD06FFA8FD0CFFCAFF275227A8%527D5252277D52277D27277D5252A8FD04FFA8A1FFA1CAFD1BFFA8FFFD04%A8FF7DF8A8FD05FFA82752FD05FF7DFD09FF7DFD07FF5252FFA8A8FFFFFF%7DF87DFD06FFA8FD1BFFA8FD09FFA8A1A8A8CAFD1BFF7DFF525227A8FFA8%27A8FD06FF2752FD04FFA8A8FD09FFA8A8FD06FFA87DFFA8FD04FF7D27A8%FFFFFFA8FFFFA8A8FD0AFFA8A8FF277D5252A87D527D52527D7DFD045227%7D27FD04FFA8A1A8A1CAFD1AFFA8A8FFA87DA8A8FF7D52A8FD05FFA82727%FFFF52A8A87DFD09FF7DA8FD09FFA8A8FD04FFF87DFFFF7D527DFF7DFD0B%FFA8FFA852272727A8FD0452277D52FD0427525252FD04FFA8A1A8CACAFD%1BFFA8FD06FF7DF8A8FD06FF527DFFFF52A8A8A8FD09FFA8A8FD09FFA8FD%04FFA8277DFFA87D527DFFA8FD10FFA8FD0BFFA8FD08FFA8A1A8A1FD1CFF%A8FD06FF7D2752FD05FFA8527DFD05FF7DFD09FF7DA8FD09FFA8A8FFFFFF%A82752FD06FFA8FD0BFFFD05A8FFA8FFA8A8A8FFFFFD07A8FFA87DFFFFFF%A8C9A8A7CAFD1BFFA8FD06FF7D52FD07FF7DFD05FFA8A8FD09FFA8A8FD09%FFA8FD04FFA8A87DFD05FFA8A8FD0AFFFD04A8F82727F87D522727F82727%7DF8F82727F85227F8F852FFA8A1A8A1FD1CFFA8FD06FF7D52A8FD0DFF7D%FD09FF7DFD0AFFA8A8FD08FFA8A8A8FFA8FD0BFFFD04A87DA87DFFA87D52%A87DA8A8A87DA8A8A87DA87DA8A8FFA8CAA8A7A8FD1BFF7DFF7D7D7DA8FD%0EFF7DFFFFA8FD09FFA8A8FD09FFA8FD08FFA87D277DA87DFD0BFFA8A8FF%A8FD05FFA8FD04FFA8A8FFA8A8FFFFA8FD04FFA8A1CAA1CAFD1BFF7DA87D%52527DFD0EFF27A8A87DFD09FF7DFD0AFFA8A8FD08FFA8A8A8FFA8FFA8FD%09FF527D7D2727277D7DF8522752F87D2727F8FD04277D2727FFFFA8CAA1%A7A8FD1BFFA8FFFFFFA8FD0FFF7DFFA8A8FD09FFA8A8FD09FFA8FD0DFFA8%7D7DA8FD07FFA87D52A87D7D52A87D5227FD057D52527DA8527D7D7D52FF%A8A8A8A17DA8FD1AFFA8A8FD15FFA87DFD09FF7DA8FD09FFA8A8FD0CFF7D%A8A8A8FD22FFA8FFA1C3A8FD1BFFA8FD15FFA8A8FD09FFA8A8FF99CAFD06%FFA8FD09FFA87DFFFFA87DFFA8FD21FFA8A8A8C3A1FD1CFFA8FD16FF7DFD%09FF7DFFCABCA1FD06FFA8A8FD07FFA852F852FF52FD047DFD1CA8FD05FF%7DA87D7D7DFD1BA87DFFA8FD11FF7DA8A8A8FD09FFA8A8FD09FFA8FD08FF%A87D52A8A852275227FD1D52A8FFFFFFA852275227FD1D52A85252FD10FF%527DA87DA87DA8A8A87DA8A8A852FD0AA87DA8FD0CFFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD05FFA8FF%A8FFA8FFA8FF7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%7DFF7DA8FD10FFA8FFFFFFA8FFFFFFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8%FD1FFFA8FD14FFA8FD10FFA8FD07FFA8FD1EFFA82752277D5252522752FF%7D2752277D527D275227A8FD0DFF27FD07FF52FD07FF27A8FD06FF27A8FD%06FF27A8FFFFFFA852FD06FFA852FD07FF52FD06FFA827FD07FF27FD17FF%527D52A8527D525252FF7D5227FD047D522752A8FD0CFFA852A8FD06FFA8%A8FD06FF7DA8FD06FF7DA8FD06FF7DA8FFFFFF7D7DFD06FFA8A8FD06FFA8%7DFD06FFA87DA8FD05FFA87DA8FD22FFA8FD75FF52527D527DFD05FFA852%277D52A8FD17FFA87D7DA87DA87D7DA8527DA87D7D52A87D7DA8FD13FFA8%FD047DA87D7DA8527DA87D7D52A87DA8FD21FF525252277DFD05FFA82752%52527DFD17FFA8F852275227F852A8F8272752F827522727A8FD13FF7DF8%52F82727F87D7DF8275227F8FD0427FD48FFA8A87D277DA87DA8A8A87DFD%05A87DA8A8FD13FFA8A87D27A8A87DA8A8A87DA87DA87DA87DA8A8FD38FF%A8A8FD10FFA8FD57FF7DFD14FFA87D7DFD67FF52527DFD13FFA87DA8A8FD%66FF7D7D7DFD14FF7D7DFD14FFA8A8FD11FFA8FD0DFFA8A8FD0EFFA8A8A8%FD0FFFCAFD0FFF7D7DA8FD18FFA87D7DFD0FFF27A8FD0EFFA87DA8FD0EFF%7D27FD0FFF27A8FD0EFFCAC3CAFD13FFA87DA8FD11FFA8A8A8272727A8FD%04FFA8FD05FFA8A87D52277DFD0AFFA8A87D7DF8527DFD09FFA87D7DA852%5227A8FFFFA8FFFFFFA8FFFD04A87D527DFFFFFFA8FFFFFFA8FFFFFFA8A8%7DA893CAFFFFA8FFFFFFA8FFFFFFA8FD05FFA8A87DA852A8FD08FFA8FFFF%FFA8FD04FF7DA87DFFA852A8FD09FFA87D7DA8A8A87DFD0AFFA87D7DA8FF%7D52FD04FFA8FD04FFA8527D7DFFA87DA8FFFFFFA8FD04FFA87D7D7DA8FD%0EFF7DA8A8C3A8FD0FFFA87D7DA8A8FFFFFFA8FFFFFFA8FD0CFFA8A8FFFF%A8FD0BFFA8A8A8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FF7DFFFFFFA8FD0BFF%A8A8FD04FFA8FFFFFFA8FFFFFFA8FFFFFF7DFFFFFFA8FFFFFFA8FFFFFFA8%FFFFFF7DCA9ACAFD04FFA8FD0BFFA8FFA8A8FD08FFFD04A87DA87DA8FD05%FFA8FD0FFFA8FD10FFA8A8FD0FFFA8FD0FFFA8A8FD0FFFA8A8C3CAFD09FF%CFFD08FFA8A8FD07FF7DA8A8FFA8FFFFFFA8FD04FFA8A8FFFFA8FD0CFFA8%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF7DFFFFFFA8FD0BFFA8A8FD04FFA8%FFFFFFA8FFFFFFA8FFFFFF7DFFFFFFA8FFFFFFA8FFFFFFA8FFFFFF7DC39A%CAAFFFFFFFAFFFC9CAA1CAA1CAA1CAFD04FFA8A8FD06FFA8A8FD0DFF7DFF%FFFFA8FFFFFFA8FFFFFFA8FFFFFF7DFFFFFFA8FFFFFFA8FD08FFA8A8FD0F%FF7DFD0FFFA8A8FD0CFFA8FFFFA89AB5CAFFA8FFFFCAA1CACAFFA8FFFFFF%A8FD05FFA8FD07FFA8FD0CFFA8A8FD0CFFA8FFFFA8A8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFF7DFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8A8FD10FF7DFF%FFFFA8FFFFFF7DA8FFFFA8FFFFFF7DCACAFD05FFA1FD09FFA8FFFFFFA8A8%FFFFA8FFFFFF7DA8FD0DFFA8FD0FFFA8FD10FFA8FD10FF7DFFA8FFA8A8A8%FFA8FFA8FFA8FFFFFFA8A8FD07FFA87DFD06FFA8AFFD05FFC3FD0FFFA8FD%06FFA8FD0DFFA87DFD04A87DFD04A8FFFFFFA8FFFFA87DA8A8A87DFD04A8%FFFFFFA8FFFFFF7DFFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA87DFD0AA87DA8%7DA87D7D7DFFA8FFA8FFFFFD04A8FFA8FFA8FF7DA8A8FFA8FFA1CAAFFFA8%FFFFFFA8FD07FFA8A8FFFFA8FFFFA87DFFFFFFA8FFA8FFA8FD06FF7DFFA8%FFA8FFA8FFA87DA8FD05FF7DA8A8FFA8A8A8FFA87DFD07FFA8A8FFFD06A8%7DA87DA87DA8A87D7DFD0FFFA8A8FD06FF7DFFFF7DFD05FFA8A8FFFFFFA8%C9FD0FFFA8A8FFFFFFA8FF7DFD05FFA8FFFFFFA8FD04FFA8A8FD08FFA87D%A8FD04FFA8A8FD07FF7DA8FFFFA8FFFFFF7D7DFD05A8FFA8FFA8FD05FFA8%A8FD04FFA8FFFFFFA8FFFFFFA8FFFFFF7DFFFFFFA8FF7DA8A8FFA8A8A8FF%A8FF7DFFFFFFA8C3CAFFA8FD0DFFA8A8FD04FFA8A8FD06FFA8FD08FFA8FD%09FFA8A8FD04FFA8FD09FF7DFD06FFA8FD10FFA8FD0FFFA8A8FD04FFA8A8%FD04FFFD05A87DFFFFFFCACAFD10FFA8A8FD04FFA8FD0FFFA8A8FFFFA8FF%FFFFA8FFFFFFA87D7DA8A87DA8FFA8FFA8FFA8FFFFA8A8FFA8FFA8FF7DA8%FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FD04FFA8FFFFFFA8FFFFFFA8FFFF%A87DFFFFFFA87DFFFFA8FFFFFFA8FFFFFF7DFFFFC9A8FFFFFFA8FFFFFFA8%FFFFFFA8FD05FFA8A8FFFFFFA87DFFA8FFA8FFFFFFA8FD08FF7DFFFFFFA8%FFFFFFA8FFFFFFA8FFA8FF7DFD09FFA8A8FD05FFA8A8FD0FFFA8FD0FFFA8%A8FFFFA87DA8FD0AFFA8A8CACAFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD05FF%A8FFFFA87DFD10FFA8A8FD0FFFA8A8FFFFFFA8FFFFFFA8FF7DFD05FF7DFF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8A8FD10FFA8FF7D7DA8FFFFFFA8FFFF%FFA8FFFFFF7DA1CAFD13FFA8A8FFA87DFFFFFFA8FD0EFFA8FD0FFF7DFD0B%FF7DFFFD04A8FD0EFFA8FFA8FD0FFFA87D7DA8FD0DFFA8A8FD15FFA8A87D%FD0FFFA87D7D7DA8FFFFA8FFA8FFA8FFA8FFFFFFFD047DA8FFA8FFA8FFA8%FFA8FFFFA87D7D525252FFFFFFA8FFA8FFA8FFA8FFA8FF7D527DA8FFFFA8%FFA8FFA8FFA8FFFFA87D7D52A87DFFFFFFA8FFA8FFA8FFA8FFA8FFA87D7D%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFFD067DA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFFFFFA8A8FD0FFFA8A8FD0EFFA8FFA8FD0FFFA8FD0DFFA8FF%A8A8A8FD0FFFA8FD13FFA8A8A8FD4FFF7D7DFD04A8FD63FFFD16A8FF52F8%2752F8A8FFFD14A87D27FD4CFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFFFA87DA87D7DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA87DFDFCFFFD29FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2011-10-20T18:14:09-05:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:ModifyDate>2011-10-20T18:14:10-05:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>148</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAlAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7rp/5gT3X5m3/lU2vHS4&#xA;LalrqPCQLJfw8JLmASH923GG4jIVdwVevairNMVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirzb8n/wAydc84yajHq0dqjW0NtcQG0VVoJ3nRo34XV8Ph9FSDIYpDU1iUAFlX&#xA;pOKoS71jS7OX0ru6jt3K8/3rBBx3Famg7ZCU4jmW3HgnMXEEqUnmHQY4vWfULcRcDJz9RSOAp8Wx&#xA;6b4Dlj3sxpcpNCJv3MD816ToN/qEj22u3aC5dm1GG1uIREIyyxOn7ySHg0rKFr8QopqO+Pix7wv5&#xA;TLt6Tv5fFqe58u3TLJ+ltUQQcYHi+v2pQ8HKHmjTHZj9GwPTB48O8MzoM/8AMl8naZ5ZiurG+tbL&#xA;V/MN365hZ7kX1s5jCu0g9JxLxHKvxU75OMxLk05MM4fUKVtL/LSO4aSZde1u3RLiRntZLhAVlJqS&#xA;vpl0pViR3rTfbeTUzDy55cj0OGeNby5vmndXea7f1JPhQIByoOy4qm3BK14ioNRt36VxVTlvLSKR&#xA;YpZ445HKhUZlDEuSFABP7XE0+WKquKuxV2KuxV2KuxV2KuxVSiu7WaWWGGVJJYCBMisCUJ6BqdD7&#xA;YBIFnKEgASNiq4WDsVdirsVdirsVdirsVQGt6vBpOnyXctGZaLFCWVDI7GgVS3fASBzZRhKXIWow&#xA;za+3mBVlhWPRmsFc/ZLreep8Scg249P/ACae+FimuKuxVTht7eEMIYkiDHkwRQtSe5p3xVUxVJNc&#xA;a3bUbW0Okx6lcXEE8nKQxqFjiMaMpLg15fWOmRMAeYbIZpw+kkJQtpql7bsr6Lb/AFdWkgSE/Vyo&#xA;jikaNU3HQBaZX4YI/Y5J1MoHrex+o8yLQs+kX7ajHbtotuY7iGaSaM/VyHKSxMCduzOfvx8EfgKN&#xA;bMEGzt/SKCtLMXGnXmp23l+3HoyXkT81tgGks53hclQN/wB5AaHrT55E4IgE0Pk2w1+SREbl/piy&#xA;y0OoWYZbTQI4FanIRzRKDxFB0GXRiBycGeWU/qJKCg1zVrGy1S9m0k+hbSzzTcZ4ywWNeTUG1TQZ&#xA;JrZVirsVYh5o/LHQ/MfmCz1y8mniu7OSzkRYfTCt9RkmkjViUZ6E3LVow7UxVN9IjMWs6xEJZXj5&#xA;wyKksskoUuhLcBIzcFr+ytBiqcYq7FXYq7FXYqlOpeZtMshMof15bcVnVGUJF7zzOVii/wBmwPgD&#xA;lZyC6G5ciGmkRxS9Me8/oHM/BI/rfmHXh/o8R+qtQghpLWzofGYhbq48R6aRxsNi2DgJ+o/AMvGh&#xA;D6BZ/nS/QOQ+1kOiaTLptu0Ulz63KnGKOJIIIgP2YYkFVUk1+JmPvlgAAoOPOZkbkbKY4WKUaHrc&#xA;uoXupW8kaoLOYpCVrvGHeL4q/tc4XO3amKpvirsVdirsVUL3ULKxh9a7mWGMnipY7sx6Ko6sx7Ab&#xA;5GUgObZjxSmaiLY3e+bbqe4az0yBxOBUxhPVu6HofQqqQA9muXT/AFTkLlLlt+O5u4McPqPFLuHL&#xA;4y/V80Bqeg6v+jri+vZhbt+7+EEXN049RfhluHUJGp7xwRqAf2jkowA36teTPKQrlHuHL9vvNlmk&#xA;17Zws6zTxxNHGZpA7qpWMGhc1Oyjx6ZNpVgQRUbg9DirsVdiqXeZNZTRNA1DWJEEkenwPcyIW4VS&#xA;JeTUID70GwpudsVS6PU0n826XBLFJb3h0u7mkgdH4rWWyLKJeIjcoWoeJxVkKoiCiKFBJJAFN2NS&#xA;fpJrikm2jHGZBIVBkUFVegqAxBIB8DxGKEg8koj6FdI6hkbVNZDKRUEHVboEEHFINbhkOKEo81Rx&#xA;p5V1vgoXlZXTNQAVJhapPviqb4qxrSvzB0DVPOOpeUrUXH6V0pDJdM8LLDRfTqFk8f360BpUbio3&#xA;xVEea/L99rK6V9TvvqLadqMF/IxT1BLHCGDRceSr8XPqa0O9KgHFV+jQyRa7rXOeSfm8DKZAg4Ax&#xA;miLwVPhHatT74qnWKuxVxIAqdgOpxVj+qed9EsiIoZPrty5KxRQfEGYdVVhXmw7rHyb/ACcr8QdN&#xA;3JGmI3meAefP5c/0eaA9PzlrlfUVdMsX/Zk5KSP+MaMkz/N3i94zjwE8z8l8aEPoG/fL9XIfb700&#xA;0zyhpFl6Tyqb2eA8oJJwvCJvGGFAkMXzRAT3JyYAGwaJzlI3I2U7wsXYq7FWH+SpT9dd2+1f2iXB&#xA;J68llZ33+dzvXFWYYq7FUHqOs6Zpy1vLhYmILLHu0jAdSsa1dqewyMpgc23HhnPkNu/p8+THD5s1&#xA;bV6x+XrJ2ibpetx4b7VEhrCB7oZWHePI3I+TZw44czxny2Hz5n4V71e08n3M8v1rWb15Jj1jtmZD&#xA;Q/stc7TEeKx+kh7phjADfqwnnlIVyj3Dl+33ndkNlY2VjbrbWVvHbW61KxRKEUE9TRQBvk2lL/N0&#xA;ay+XbyNiwVwgJRmRt5F6MpDD6DirG/NX5Q6J5h1SXUZr+9tpZtPXS5EjdXBiR/URi8qyScw4Vq8u&#xA;or13xVE+c/PHlf8AK/ylp9zq3rtp0bRaZaLCsbSM6QOyA8mhjFUgO9QK4qynTNSstT0+31CxlWa0&#xA;uo1lhlUggqwr27+OKqtzdW1rA09zKkECU5yyMEQVNBVmoBucVWC9sJLH64J4nsXj9UXPNTCYiK8+&#xA;dePHjvXpiqTXpr590Yqeuk6rQ9R/vRp2KqnlLTPMen2dxHruorqM7zs8Mig/DGe1SB8+NKL0GU4Y&#xA;TiPUbc3XZsOSQOKPAK/H46p5lzhMf8j/APHFuf8Atq6x/wB1W5xVkGKpV5s/5RXWf+YG5/5Mtiqa&#xA;4q8d8i22rf8AK/8AzncSCWTS/q3CCf1pZIBITbcoh/usuvHcGhj+yvJSeKr0Dzlc+cYP0P8A4Zto&#xA;7j1NRhTVfU4/BZGvqsOTL08RU+AOKpcus+YbXzVqlummW0qz+mbZvrjq0hiiLCOht+IkZKsFLU2P&#xA;xZEyo02RxkxMh05/rTG384SXjTDT9D1K7W3KpK/G3twshRZDGVup4JKqHFfhphtHBQBPVZJqPnu6&#xA;BFlo9tp++0moXIkJHf4LYSCv+zyPq9zMeGOdn7P1qLeS9S1E8vMGtTXkda/U7ZVt4Cp/YdfjLU7M&#xA;OLYPDB57svzMh9AEfdz+fP5J7pmhaRpYb6japC7gCSbdpXpsPUlblI/T9pjljjk2jsVdirsVdiqC&#xA;1u/n0/Sbq+ghW4e2jMpidzEpVN3+MJIRRan7ORlKhbPFj45CI6vPfLXmGTTriAXtkzXFraR26W1r&#xA;IsjSm6mtIouJm+rrXm+9TQUO+SYgWy+bXvMrELaeWbgE9Xu7mziQf8iZblj92RJPRnGMep+Q/sQz&#xA;6b581La91G10qAn4obBHmkZSOhmkMRVh4qMHCTzPybBlhH6Y/Pf7Nh87RNh5F8v2rerPG+o3BIZp&#xA;71vWLMv2XMdFi5in2uHL3wxiBya8mWU/qLIOmSa3Yq7FUo83SLF5dvJGDFUCEhFZ22kXoqgsfoGK&#xA;sX82/nFonlvVZ9NubK5lmj01dThoBGZA8vprEEk4yKR9piV+EA13GKsY/PrUfMTeUtC8y+XNdbSU&#xA;nYRnT5pbu3S5+twGWEepYMsyyxtGCo5cT0Y8eSuq9c0n63+irP64Sbv0IvrBNCfU4DnXj8P2vDFW&#xA;Ffn20aflJ5gkkhSdIo4JGikR5FIjuom3EbIy0pUPyAT7R2BxVT8peWrDzN+SekaHdE29rfadAGe2&#xA;BjKlSsisvPlX4lBJ6N16HFU2g0iz03ztoMNvyPpaJf2/quasywTaciFqUWtBvQDFWW4q7FWP+R/+&#xA;OLc/9tXWP+6rc4qyDFUq82f8orrP/MDc/wDJlsVTXFXiP5Q+UtDsfzV8z6/HrOnaprd+lyl0tprU&#xA;WozqjXMbfvLMWcEkFCig/v2Cmi8elFXpPmbz5pOgX2n2M6u9xf3tvZfZkVI/rNeL8+BVtxTiu9Tv&#xA;QAkKugih1XU9aSMyQSwy2xhmeJ42SaJCVdRIqcl7bbMKiuRlGw24cvBK+Y6jvCdaZYvaQyCWUTXE&#xA;8jTXEwXgGdttlq1AqgKNzsOuMI0ubJxnYUAKH4+1F5JqdiqT6f5x8p6iLb6jrNlcNdqjWyR3EReQ&#xA;SKHTinLlurA0piq6783eVrMN9a1ezh4ym3cNPGCsqsqujCuxQyLyr9moriq8eaPLRhWcatZGF5PR&#xA;WUXEXEycQ/ANypy4nlTrTfFUJH5/8jyRxyR69YOJTGI1W4jLN6rBY6IDyoxcU274qjdO8x6BqV1J&#xA;aadqNveXEMUc8sdvKkpWKUsI3PAnZuBpirvMor5c1UeNncf8mmwSFghnjnwyB7i8tKu3mryzIqkQ&#xA;6iLMcgDQC1c3B5Hf7RMfXwyviuIPubzj4cso93F+l7HlriuxV2KuxV2KuxVKvNP/ABwbr/Yf8nFx&#xA;VMpIIJCTJGrkgqeSg/CdiN+2+KvNv+cgNGi1byZaWz6dqOpFNQjlSLS1ZpEK28/xyBLPU24EEptA&#xA;fjZalVqcVZv5VZW8t6aVN0y/V46fXoFtbkAL9mWBIrZY2XpxEaj2xVh/59y6p/yr2W006HUpZr27&#xA;toXbSNPGq3CIknrkm2aa3Vo2MIjfkWB5cStGqFUX5fsPMMv5QWVlpkk9prjaeqQyXtsmmTpJ39S2&#xA;i9VLd6V+Fa08e+Ko6KPVE88aEL+WF3GiagGSFX2lE2nCU+o7sXUt9mqg061xVlmKsZ1PRfN0/nbT&#xA;NUs9XW38vW0LJfaYVJMshLfFSlDWq7kjjTatTiqt5H/44tz/ANtXWP8Auq3OKsgxVKvNn/KK6z/z&#xA;A3P/ACZbFU1xV4V+WcOsN/zkL5wudXurRLtLSaFNOhTUPVMPrWpjuOdwht+DIF+GOU0J2FBXFXr2&#xA;p+avK+n6jBpuo6hbwX8rwCC2lYBy1wzpDQH+donA+WKtaVNDLrus+k6vxNurcSDQiM1Bp3xVOMVd&#xA;iqUs/l39M8TbRnVOQ/ffVmLcuOx9bhT7P+VkeAXdbtnjT4eHiPD3Xs+a9L81f8416TBo+sR+W76C&#xA;a2hjmsoXlklaKG5WVZqgzEMqhJnpvUjszKDJrZL5y/6F00i5u9K1HS7xpEFzq8ixm6SPnM/CdqvI&#xA;hUrzNBxpRiEqTxxVLrV/+cabzRdU0IaFqAtdDZ9S1C1/0gkypJHAVWb1fjLPKvGrDY9umKpXH5l/&#xA;5xql8yjWHsdVkkVI/SRizxzfV0SeG4dTIH9RQknFWNW4n4a8Kqs4/KLzh+UdtrOmWPk/R76xvvMq&#xA;pFKJ/U9GMR2Ul+aGRyr/AGWRjGPtbmgKllXsPmXby7qv/MHcf8mmxVhWlKDJ5eiO4iuxHT/jDDMP&#xA;w4ZQPpiPN2E/7zIe+N/Ov1vRsvde7FXYq7FXYq7FUo83CU+XbwRMqSkJwZ1LKD6i7lQVr9+KsV83&#xA;aL+bdxqt1J5d1a0gtJ9INpEJeUYivyxJuEj4Tb02UlzxruGpuqxz/nJWBX/Kyxg1O9FrdfXbcmVE&#xA;9dZJ47eZyoQyW/IHgSNmIpUJyAIVesaMxbR7FmdZGNvETIjM6sSg+JXf4mB8W3OKsM/PSe/t/wAu&#xA;byfTjfrqCz2qWkmmTSwziWedYFH7m4s3k5+rwVOTfEyng1MVUfKXm+XQfyP0/wAz6+bm7nstNFxe&#xA;KztcXLyVoI2kcli/IhWZzt+0djiqdJqdtfeetDeESUbRdQmDNG6oVln05l4yEcH268Sad8VZXirs&#xA;VY/5H/44tz/21dY/7qtzirIMVYIPJk3l7RvOl4+rXGojWIbi4WKfpDSGTYbmpPKhIA2AFNsVZ3ir&#xA;zPQvy+8zaX+b2rebjb6c+latFLbTMtzIlwkZ9Fo2S3W0CFy0JEvOduVQyleJV1U+1HyB+X0l7Zy3&#xA;dtFFcW0ts9rH67xj1IpJXgHphwHq80mxB5dO2KptpUMUWu6yI0VAxt2YKAKsYzUmnfFU4xV2KsZm&#xA;8yagnmZtMVrYwi4jhWAq3rlHgWQvy9SmzMf2MVeV235wapPDaa5ffldevrFsi2vprayrPH9YQu7I&#xA;8kHwxc42DDqF+I7GhVT/AM3/AJ13OgxyXV55SuhbwWFrfSPcq6BpLhVkFqJRDJGsschC0J+Jq0px&#xA;JCqzTvzi1q8ukg/5V7qdrE1vdz3DSQtQ/V0mb0lrEhrLJGnE0PIMdq0BVSCD85PN19aVuPyuuTcW&#xA;cE95HzgmCfWYGP1f0VaAOeSpUHqTsKYqj1/O/wA2ppNneR/lzqAvxJaLeW0cE5YpOlJfQrDGeUfp&#xA;8Dy2FNzSlVWX6R53vvNPlXWZrzQrvQvQb6siXYdfXR29MvHzjiYqxqBtuCPGgVWaKwTVtKViBx1O&#xA;7BJ8ZIbpl/4mMoHT+sf0uwnykf8Aa4ffAPQsvde7FXYq7FXYq7FUq80/8cG6/wBh/wAnFxVbqfm7&#xA;yzpd1NaahqUFtdQW4vJYZGo4gLiIPTvVyFAG5OKsN/OPyff+evLVha6dYadruleoLz0LmeeElzGU&#xA;hngkt5IhIAkrngZEDbfHSoKrOPLmkWujaBp+lWsXowWVvHCkRJYjioBqWaQk16ku3zPXFVDzZ5bj&#xA;8x6JLpEt5LZ287IZ2hjtpvURWDGJ47uG5hZGp8QKb/KoxVW0rTrDQPL9vp7T1sbCERevcCGMemop&#xA;8QiSGFRTsqKo7DFUDe/8p/o3/bK1X/qJ07FWQYq7FWP+R/8Aji3P/bV1j/uq3OKsgxVKvNn/ACiu&#xA;s/8AMDc/8mWxVNcVcRUUxVheoflZpN5rFnqzajfpeWclpIkvqq7t9TknkRWkdWejfWnVqN9nbucV&#xA;Xzai2ka7qcFihuLy9kilCXE0rKqJHWRqt6hVQWVQq7Dl0pirJ9L1CPULCG8jUoJV+KNuqOp4uh90&#xA;YFTiqKxVhNzb+eT54aSIXI0L6zFxcS23oeh9XQSfuy/q/wB7y/Z6+2KsY0nRf+ckrd9Fiutb0ia1&#xA;hjiGsPIhklkZZAGCEQx15RrVmJruab0xVA67Yf8AOTC+Z7oWF3p0+jX9wY7A0jK2kEczOj3CyR1q&#xA;YX24K5LqtTQUZVHTaH/zkXND5grrOlxy3DImicKoIog0pbl+5ah+KKrUJK8gKHiQqltv5V/5yYaa&#xA;4W88xWX1X00FuYZFWXlE4C7m1IHJOZcty5Hj2FMVTGz0P/nI4reXF7rWl/XqRpYRw1FsOIPJ5EMF&#xA;TyZiSOvGgBB3xVltvF5rg8hQR+a54LnXluIxdT2opEym/HokDjHv6PDl8I+KuKpJBJw8z20Z/YvV&#xA;mA78Xjhhr/wcuUD66+P2B2Ev7i/IR/2Uj9wemZe692KuxV2KuxV2KpR5uijl8u3kUqLJG4RXRgCp&#xA;BkUEEHriqXaz+WnlHVr439xbSQ3Rs/0dztZpbcfVd/3fCJlWm9OnTFWSWtvFbW0VtCKRQIscY8FQ&#xA;cR+AxVUxV2KpP5w8r2Pmny3e6DfO0drehBJJGqMw9ORZFKiRXWvJBvSo6gg0OKpcdPhtPP2i+m0j&#xA;H9DajGecjMtI59OUER19NCe/BRXFWU4q7FWLeWdTsNM8sXt7fzrb2sWq6xzlatBXVrkAUFSST2GR&#xA;nMRFnk2YcMskhGAuRZNBPDPDHPC4khlUPFIpqrKwqrAjsRhBvdjKJiSDzCW+bP8AlFdZ/wCYG5/5&#xA;MthYprirjWm3XtirzXW9A/OK7826deWWs29ro8L251C2jYrFKiykyBYmjdxRPGT4+XVQq4qgfMcX&#xA;5kJ521WbSdKXU7X04EinRIEVRxLFf399Axb7PIhaGg6Yqv0fUvzlsYZoR5bAjeVpY1YWbceYBalN&#xA;UFKvyb5nFUVH5q/N+SeWBfLa+pDx9QGO1A+MVFCdUofoxVV/xF+cn/Utp/wFp/3lcVUl81/m+1zJ&#xA;bDy2vqxIkjj07WnGQsq7/pSh3jO2Kqv+Ivzk/wCpbT/gLT/vK4qpL5q/N9rmS2HltfViRJHHp2tO&#xA;MhZV3/SlDvGdsVVf8RfnJ/1Laf8AAWn/AHlcVT3ybrXnC+vNQtvMmmrp728dvJbcVjXmJmlV94rm&#xA;8Xb0h3BxVW/MKTVo/Ktw2kW31vUfXsxb2/wnkTeQg/bkhX7JJ3cYq86Nt+bZv473/C9LhGi+OtnT&#xA;jFKstKfpPxXI8Iu+rZ4suDg/hu09ufNf5vW0Ykl8uKFZ44gRHan4pXWNOmqfzMMk1qv+Ivzk/wCp&#xA;bT/gLT/vK4qpXHmr837eMSS+W1Cs8cYpHat8UriNdhqh/aYb9sVVf8RfnJ/1Laf8Baf95XFVK481&#xA;fm/bxiSXy2oVnjjFI7VvilcRrsNUP7TDftiqr/iL85P+pbT/AIC0/wC8riqX69r/AObz6XKs/ltR&#xA;CWj9TitoDx9Ra0I1OT/iJxVmMPmXW388poTaPLFpTaaL5tSepCzmTj6DMvKKoHYOT3+zvirJcVdi&#xA;rsVSnzbca3b+XL+bQ4zNqyR1tI1RZCz1GwV3jWtK9Tt1o3QqpPM3mKHXdG1e908TxQ6bPaXLW0sS&#xA;N9avJLNqGK4eIKvOBlXjI56YqnP6Z1H/AKsN9/wdj/2U4qtXXr1nZF0S9LpTmoksCRXcVH1rauKs&#xA;csIC+i3Oia35fuJxc399c/V/Wsa8bu+uLqClLpWDem3bwPhkZwEhR5NuHPPFLigakn1lqs0VpDFZ&#xA;6DeC1iURwrHJYFAqfCAKXXamEAAUGE5mRJO5KH1jUNS1PQ9Qs7XRbsyXUE9sjmWx4CRlaOjFblvs&#xA;ts2FiyTFXYq7FWO6Jp3m2DzZr93qd8k+g3X1f9DWi/ah4IRNUcRxq3+U1eu3TFWRYqllhbatFreq&#xA;zXdyJdPufQbTbeorEEj4zbcV2Z9+p/hiqZkhRUmg8TirH9MsvMkfnLWbq7ui+hTRW4020MiPwdUp&#xA;K3ARoyAsD1Zq7mtOKoqyAkClTSuwr44qx/TNP80Rectavby8Evl65itl0u05hjFJGhExCCNOIZjX&#xA;d2+fRVVZBiqQ2Vn5sXznqV5d3UL+WZbS3i0yzSoljnRnMzyArQl+XUN0CinUlVZ540/zZfaTDD5Y&#xA;vUsL9bmN5ZZNgYRUEfZfo5ViKfEAV74qyHFUr8x2ms3VjAmkXItbpL2xllckAPaxXcT3cZ+F/wC8&#xA;tlkUUpuRuMVTQEMAymoO4I6EYqx7z3aeY73y7Nb+W7v6nqfqRUuBIkfpoGBdqvHMDxX4uNBy6E0J&#xA;xVkOKse882PmfUfLstv5XvBZasZYzFOXEa0RwWVmMc+224C79PYqshxVIvO9n5qvPLV3beVruGy1&#xA;qQKLe5uK8FAYFwCoejMuwPE0xVPRWm/XvirsVdirsVdiqR+dvKNl5u8tXWgXtxcWlvdPBI1xaOI5&#xA;0a2uI7hDG5DcTziG9PlvirxrU/JH5O6NqmuaBqPnbUbbVb2C3hu4PW3tVRI51aMJCYoto1f/ACQR&#xA;7YqitC/J/wDLzzvaTanovmrWbi1ivJxLLFMI6yMsfwc/THNCqrJWp5M3ImpIxVk/5lfktpnma/k8&#xA;wrrVzpWowWqRc2KvacIG58rhDwdxx5A1elGatQSMVYZEfyQk0o29t50uZlsHvr9lhpTlfQxpOoR4&#xA;eLBFUv6f2hyblXfFWU+T/wAgfLWj6ppuvWHmHW7uOCQXsEFzcj05C5eQNKvpo7H98w+LejMD9rFX&#xA;rWKoH9O6H+l/0N+kbb9Men636N9aP6z6f8/o19Tj70piqOxV2KuxV4754/Kfz9d6t5g17RfMUtzP&#xA;qCxppujySz28dupeEyBZo5lZQRDUhONfl8JVVZvyX833V3aSXHnO5NjHLcXF3pr+tPFI9xFEgQtJ&#xA;LUpHJGXTag7KKnFVnmT8k/OGp+adV12w86T6cdSCQiNEuS6W63S3QTmt0ijhw9JeKKOBaoLEnFVB&#xA;/wAhvNMuuXGpTedrmWMR3MWlxSJO72gnMQRkke4L8kW2T4q1J3r0oqy38u/y+13yve3t1qXmGfV1&#xA;va8bWRrlooByDRxwi4nuWCQryRd+RH2iTirOsVdirsVdirFvzF8o6t5p0W20/S9Zl0SaG8huZbmH&#xA;1KvFGGDRH0pIWo3IH7XbsaMFXmGhfkl+Z8Gp3kk3nGeyt7O2FnozxzXcolf1uQuZYPrCRpwt/wDR&#xA;1Rf2aftDkyqan8ivMkvke88uXXm+ae6v9RN7d6g0UqtLCNPjsEicJOjM0foLIpZilQKoaYq1c/kh&#xA;52u7eCK58+XZKy231koLpVkt4BKskPE3TCkwkXmeu1fbFVCz/ITzfa2MdpD55urdY47sxtB9bj4S&#xA;3LTyRAKLriY4ZZlfcc2IILcTxxV7XirsVdirsVdirsVdirsVYt5p0j8sbR31nzVb6RatdkWz6hqY&#xA;t4hIzR8RH6k3EMxjSlK14jwGKproHl7y1o8DNoOn2tjBdBXY2caRpIACUP7sAEUY0xVM5I0kRo5F&#xA;DxuCrowqCDsQQe2KsbH5Z/l4AwHlvTRzNWP1WKpPpGGpPGv92xX5YqyC1tLa0t0t7WJIIIxSOKMB&#xA;VUVrsB0xVVxVidp5O1K28yyXq3ts+kSXz6oYJLQPeC5ktzblRcs7KqAGoKxh6fBy41qqi/MXn/yl&#xA;5ddU1e9MMjuyBI4J7hgUWJmLCCOQqo+sRfE1Fq6itSBiqd2l9ZXsXq2dxHcxAgGSF1kWpAYCqkj7&#xA;LA4qrYq7FWP+cfOumeVtKuL+5t7q/lgNuq6dp8Xr3crXUphiWKOqBizK37XY4qmGha/pOuadBqGm&#xA;XMdxBPGko9OSOQqJF5AN6bOoP04qmGKuxVCarq+m6TaPeajcLbW0ayO8r14hYYnmkJp/LHEzfRiq&#xA;F8ueaNF8x2Ul7pEsksEMzW83qwT2zpKgBZGjuEikBHIV+HFU1xV2KqdxcQW8YkmcIjOkYJ/nlcRo&#xA;PpZgMVYr5Z/NHyx5g1O/02Iy2F1Z3LWtumoenbte8XeP1rNC5kliLwuA3EbgjscVZdirsVdirF9D&#xA;8/6XrHmzU/LltE5m06GC6FyprE8FzDFLG+4UgsZSAo5fZqaVFVWUYq7FXYqlM/mjRob60smmJnvZ&#xA;JIbcKpILwuY5BX/JdSD/AEyuWQAgHmXIxaWc4SmPpjzTbLHHdirsVY95v8v6tqr6LdaTdW9rfaNf&#xA;tfRm7heeFw9lc2bIyRyQt9m75D4u2Kq+iWFl5V8r6ZpLztLDp1vDZxy8CXkMSBRxjjDGrcdlX5DF&#xA;UVoWvaZrumpqWmPJJZyMypJJDNASUYq3wTJG9OQIrTFUwxV2KuxVA65pUeraVcadJI0SXChWkQKx&#xA;ABB6OGXelOmKsctPJnlfVbvV4NY02DVUs9RR7X6+guvTc2FqS0frc+B/1cVTHyd5P0ryxpL6Tpxk&#xA;+rpcSzFmchi87eq32eIoC/FR2UAYqnKQqZZAWegpT437j54qtNurSSR83A4LSjtsSWFdzirCrX8v&#xA;fLdxe3nl/VoDq2nQWWmzGG7ZmjeRLq9kUtECI6cuq8eJ8MVTvyv5K0Pyw17BpSNDFqV1cahPGp4I&#xA;JJSg4oqcQqqooB8z3xVPDCvrovJ6FWJHN+oK+/virnhUSxgM9DWvxv2HzxVimoeVbC21nTnkeS5T&#xA;U9UuGuIZWPpFJdOuQ0bRrRHFFpVwTTauKr7T8tPK+leYtN1XR7WHSorOOeBdPsoYoIWNwOTyH01V&#xA;uX7sDr+s1VZRLCo4UZxVgD8b9PvxV00KqgIZweSD7b9CwB74qwrVPIumaXK+qwXN0011qVkzxtKw&#xA;QGfVLeV/s0Yjl2JI3PjiqYQflp5M02eK/wBMsBY3NrNPeh7d5E9W4nVg8s9GrK9JGCl6lQSBQGmK&#xA;slnhVYJGVnBCkg836gfPFW5IECMQXqAafG/9cVY+PImnSTtcNeXg9W5F60aTFFMhrWpWjH7WxryA&#xA;pQ7DFVnkny/oqaFo2rJaIupy6bbLLeivrMr28IYNJXkaiFP+BGKsighVoI2LOSVBJ5v1I+eKughV&#xA;olJZyTX9t/H54ql+r6Ba61pUthcyzJHJIG5xyNyBhmDpTlUbFB1GKsKgsJDrOjmO3kmii1LUvUuG&#xA;+sSBAdTmC8nXkP8AV5kU9+mYuUfvI7O20cgNPkF8+m3d57/K3oscKl5QWeisAPjfpxU+PvmU6laE&#xA;iX1mkdlRG+00jAAcQetffFIFoZdR0f1HBv46ClP9I9v9bI8ce9s8DJ/NPydIljqdte2UVz6kE8Bh&#xA;keKTmy+qHUkGrUNOmESB5MJQlHmKY7d+U7PSp7CeO5uJXmvrKMhn4ALAjoopGEqKN0P9MLFkdrou&#xA;laXamDTbVLKF5vVeK3HpIZJZAZHKpQcnJJY9TiresXMGnabNfSeq6QAMUjdi7/EBwUMyjk3QVIxV&#xA;Ay3fmCSKRrfSfQAVjW8vfTbbwEC3Qr9OKtyv5oWJ2+oWi0Umo1G4JFB4G1xVPcVSXRolbVPMBJb/&#xA;AHvj6Mw/48LXwIxVMooE5zbv9sftv/IvvirkgT1pN3/Z/bfw+eKuWBPrDir/AGE/bfxb3xVK7WBP&#xA;8X6mKv8A8c/T/wBt/wDf9774qmjQJ9YQVf7D/tv4r74q5oE+sIKv9h/238V98Vc8CetHu/7X7b+H&#xA;zxVK9dgQap5d3ffUJP23/wCrfd++KppLAnOHd/tn9t/5G98VdNAnwbv9sftv/XFXTwJwG7/bT9t/&#xA;5x74qlHnEQQaNHNIziOO/wBOZyGkY0F/BWgBJP0Yq3ceYtB9CSk1xXi1P3V14f6uKuuPMWg+hJSa&#xA;4rxan7q68P8AVxVuTzL5ZEbcr8RkA1EjyoR/rB6U+nFW4/M/lDgo/TdnWg2+up/1UxV3kyGNvJ+h&#xA;Grb6fanZ2p/cJ4HFUxQW8NkJppDHFHEHkdpGCqqrUk77ADFUo8qatNqUU0V7A1pdx8Z4oecgLWlx&#xA;VoHIJ2bZkcfzKe1MVTqCBOB3f7b/ALb/AM598VYbonkfSb+/j1+aa4W8s7/UFiRHAjITUbkjlVS3&#xA;7XZhlEsAlMS6hzsXaE4YZYQBwy+bKbye3soLi4k9R6OqxxI7c5HZVCIoruzMaZbKVC3FxYzOVD+z&#xA;zQll5fhuGa41cfW7wPyEbOzQwkqp4xKdvh6cyOR/DIjHe8ty3T1HD6cfpj9p95/RyRyaZY+rIPSG&#xA;3HufD55PhDR4ku8q1vbwwTyLEvEFUJH0t440xMieaXeZlDDSwa0OoQdCQf2u4woTGeBOA3f7aftv&#xA;/OPfFUn8xRJPd6Xpalj69yl1cDmxpBaOsldz/v8AMI+ROKpxcQILeU1f7Dftv4fPFXXECC3lNX+w&#xA;37b+HzxVEYqxix8vaBf615hnvtMtLuf69GvqzwRyPQWFrQcmUmmKoyLyf5SLy10Sw2cAf6LD/Iv+&#xA;TiqGn8qWdtcG70C3trC9hpWFI1jt7hDuY5lQd/2ZAOSHxHJWVRWj6rpWpSOgRIL2NVW5sJOImhkB&#xA;bkrL+phsw3G2KoN9C0S+84ah9e0+2uvT0+w9P14Y5OPKe8rx5A0rQYqiz5P8pCdANEsKcG2+qw02&#xA;K/5OKpfq+j6ZoclrqtjALeC1flfxIzCJrZ6RSM0deH7rmJa0r8OKsje3t/Wj/dJ+1+yPDFUk802b&#xA;yXvl5LRo7eU6i/7xohIKfULskcar+vFVWXRdXZ4ueqKtWIHpWkK/st15+pXFWpvLUrcBLq97JGXX&#xA;lHxs46/7OG3jcfQ2KtzeUdJ4AtJeO5dAW+u3a9WA+ykqr+GKpf5i8saTbWVtNF9ZLrqGm0El5dyr&#xA;vfwA1SSVlOx7jFWTXFvbi3lIiSvBv2R4Yq64t7cW8pESV4N+yPDFV0ltb+m37pOh/ZHhirktbYxK&#xA;DEhBUVqo8MVSnybb258n6ETEhJ0+1qeI/wB8JiqGvI7fV7iDRIUVreJY5tZlUCgQAMlsTT7U2xcf&#xA;77rX7a4qiNS0iRvqmp6fCjX9kWBhPFVngkI9WEk7A/CGQnowHYtirUF5qRQn9AP9p+sttUfEdjRz&#xA;iql5SNuNBnuLuFLYLfak8ok4EIBfzk8mHw/DgJpMYkmhzVtNs01C+fU7iD04IyV0+2kQKQGQBpnX&#xA;szjZQd1WvdiBXEcRs/BychGOPBHmfqP6B5Dr3n3BNYre35zfuk2cU+EfyLlriuS3t/Wk/dJ+z+yP&#xA;DFV0UaJcSBFCgomwFO7eGKpZ5mVWGlhgCDqEFQdx+1iqPu4rSOEyOkaIjKXchQAoYVJJ7UxVJ9Gg&#xA;jvmn12SEIl60UdgjLQizjf4GII2MzM0n+qVB6YqnVxb24t5SIkrwb9keGKuuLe3FvKREgIRqHiPD&#xA;FULqfmTRNLkeO/uhA8cJuXBVzSMV3qoIqeLUXqaGg2xVLvLt5pV5fa9cRSwzRvfpxeqnpYWopvuC&#xA;D1GKpvH+j+ctfS+2KfZ/lXFXJ+j/AFZP7qm1Ps+GKpbq/wDhH6xCmrQ2kwuGjgthNEkoMjs1B9lu&#xA;NTTc7dMVSnyrP5Pn8w6lPoa2a2UlhYMPq8aRKW9e9UsVAXrx603xVlDfo/10/uqcGr9nxXFVk8Wl&#xA;zN6MqwvDJHIkiHjQhuIIPzGKsbg13T9Bs0s9Xjlkaxb0Y7uO3knWeE0WBzJGrLzIYIwJ5FwaChFV&#xA;UO/nDyvq/mDQrOyP76K+kaQSRemKDT7k9WAr9tcVZfJ+j+cVPS+2a/Z/lbFXTfo/4Kel9sV+zirp&#xA;/wBH8BT0vtp04/zDFWMeYfMnlS5H6Nt7u3e9t9R05ZYwKAEahbBlDkcGI5gEA1xVk9x+j/Qkp6Ve&#xA;DUpx8MVdcfo/0JKelXg1KcfDFVt5caTbWc9xM0KQwxvJI/wmiqpJO2/QYqlUfm/yZ6kMDXkKySBe&#xA;JdGVKmP1aM7KEUhNyCdu+KpN5Vv7rUvKei2+mQpZQ/ULZJtVu0UNtCoP1eBvidvB5AE7jmNsVZRp&#xA;Njo9jp8MEIjpTk7uQzu7bs7sd2Zj1JxVEQfo/wBJa+lXfrx8cVQ1zqGiafYyXd48UcEbtzfjzoGk&#xA;IGyhjTfFUi8rWVjfW8txczwTWUWpai1pbR8eBZb+f95Ka/GVP2V+yOu5oRAws78nIjmEY1Eeo8z+&#xA;gd3n1+DJo/0fzlr6X2xT7P8AKuTcd0f6P5y19L7Yp9n+VcVcn6P9WT+6ptT7PhiqjNqmlWNzGssq&#xA;R/WnighCgkNK7MFHwA0r0qdsVY7r3nHyvdQafKl6rRR39sW5o68ufPiEVlBkJ4mgWuKoi4h/T5T6&#xA;zCtjoiujG1k4rcXfxDaZR/dQ+KH4m6NxFVZVkE36P4Cno/aTpx6chirrj9H+hJT0q8GpTj4Yq64/&#xA;R/oScfSrxalONa0xVu70jS7yT1bq0inl4GLm6Bm4N1Wp7YqiY444o1jjUJGgCoigBQoFAAB0AxVd&#xA;irsVULuwsrwRi7gjnETiSISKG4uOjCvQ4q3aWdpZwLb2kKQQLXjFGoVRU1NAMVVsVdiqldWttdQP&#xA;b3MSzQSCjxuAynvuDiqAdYtLlb9H6NJN64BlktPq0Yqg4qG9WWEmg6UGKtfpnUf+rDff8HY/9lOK&#xA;u/TOo/8AVhvv+Dsf+ynFXfpnUf8Aqw33/B2P/ZTiqDtzFbXs19beVbiG9uP96LmMaesj9PtMLmp+&#xA;yOvhiqNXWNQZgDod6oJALF7Kg9zS5JxVgPn38zPP/lzzg+naV5Uk13SVsTcrLCtyrGRIppmUyxxT&#xA;pU/V/TRAK8mFT0xVMvJHnzzJ5n1vV9D13yhcaRaWMPBr2cs9tdPzMUixc44+SPuVr264qncdvZxX&#xA;Md1H5RmW5hAEUwGnh1CigAb6zXp+oeAxVMP0zqP/AFYb7/g7H/spxV36Z1H/AKsN9/wdj/2U4q79&#xA;M6j/ANWG+/4Ox/7KcVQ99dSX9ube88t3dxAWV/TkaxYckYMp/wB6eoYVGKteXfM95q+p6vY3GhX+&#xA;kjS5Y447q8WMQ3IkjD8oHR358TUNSoG29agKp9irsVdiqhd2FleCMXcEc4icSRCRQ3Fx0YV6HFVH&#xA;TtE0jTXmfT7OK1a4Kmb0UCciootaeAxVG4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2011-10-20T18:14:10-05:00</xmp:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>R 2.13.1</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">R Graphics Output</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>16.933333</stDim:w>
            <stDim:h>9.525000</stDim:h>
            <stDim:unit>Centimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.1d18e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Symbol</stFnt:fontName>
                  <stFnt:fontFamily>Symbol</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.1d7e3</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Symbol.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>AdobePiStd</stFnt:fontName>
                  <stFnt:fontFamily>Adobe Pi Std</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 1.004;PS 001.005;Core 1.0.38;makeotf.lib1.6.5960</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>AdobePiStd.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DerivedFrom rdf:parseType="Resource"/>
         <xmpMM:DocumentID>xmp.did:F87F117407206811AB3CB81C39BF193B</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:F87F117407206811AB3CB81C39BF193B</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:F87F117407206811AB3CB81C39BF193B</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811AB3CB81C39BF193B</stEvt:instanceID>
                  <stEvt:when>2011-10-20T18:14:10-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -268 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 268 li
471.457 268 li
471.457 0 li
cp
clp
[1 0 0 1 0 0 ]ct
48.2737 138.391 mo
48.1768 138.391 li
47.877 138.391 li
47.5766 138.391 li
47.2768 138.391 li
46.9869 138.391 li
46.687 138.391 li
46.3867 138.391 li
46.0869 138.391 li
45.7871 138.391 li
45.497 138.391 li
45.1968 138.391 li
44.897 138.391 li
44.5966 138.391 li
44.3071 138.391 li
44.0069 138.391 li
43.7071 138.391 li
43.4067 138.391 li
43.1069 138.391 li
42.8169 138.391 li
42.517 138.391 li
42.2168 138.391 li
41.917 138.391 li
41.6269 138.391 li
41.3266 138.391 li
41.0269 138.391 li
40.7271 138.391 li
40.4267 138.391 li
40.1367 138.391 li
39.8369 138.391 li
39.5372 138.391 li
39.2368 138.391 li
38.9468 138.391 li
38.647 138.391 li
38.3467 138.391 li
38.0469 138.391 li
37.7471 138.391 li
37.457 138.391 li
37.1567 138.391 li
36.857 138.391 li
36.5572 138.391 li
36.2568 138.391 li
36.1602 138.391 li
36.3312 137.689 li
36.3308 137.691 li
36.62 136.524 li
36.9187 135.41 li
37.2168 134.365 li
37.5151 133.37 li
37.8138 132.426 li
38.1016 131.552 li
38.3979 130.732 li
38.6945 129.97 li
38.9907 129.26 li
39.2865 128.609 li
39.5697 128.023 li
39.861 127.499 li
40.151 127.026 li
40.4383 126.613 li
40.7097 126.267 li
40.985 125.983 li
41.2547 125.749 li
41.5109 125.578 li
41.7624 125.461 li
41.9921 125.389 li
42.2168 125.367 li
42.4437 125.39 li
42.6806 125.461 li
42.9206 125.576 li
43.179 125.749 li
43.4491 125.983 li
43.726 126.269 li
44.0054 126.613 li
44.2811 127.023 li
44.573 127.499 li
44.8651 128.025 li
45.1575 128.61 li
45.4424 129.258 li
45.7391 129.97 li
46.0357 130.732 li
46.3331 131.554 li
46.6299 132.426 li
46.9182 133.369 li
46.9177 133.367 li
47.2169 134.365 li
47.5154 135.41 li
47.8136 136.524 li
48.1028 137.691 li
48.1025 137.69 li
48.2737 138.391 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.136477 .104463 .109041 3.0518e-05 cmyk
f
34.7769 142.86 mo
35.1441 142.936 li
35.4336 141.539 li
35.7327 140.202 li
35.7319 140.205 li
36.0318 138.917 li
36.3312 137.689 li
36.3308 137.691 li
36.62 136.524 li
36.9187 135.41 li
37.2168 134.365 li
37.5151 133.37 li
37.8138 132.426 li
38.1016 131.552 li
38.3979 130.732 li
38.6945 129.97 li
38.9907 129.26 li
39.2865 128.609 li
39.5697 128.023 li
39.861 127.499 li
40.151 127.026 li
40.4383 126.613 li
40.7097 126.267 li
40.985 125.983 li
41.2547 125.749 li
41.5109 125.578 li
41.7624 125.461 li
41.9921 125.389 li
42.2168 125.367 li
42.4437 125.39 li
42.6806 125.461 li
42.9206 125.576 li
43.179 125.749 li
43.4491 125.983 li
43.726 126.269 li
44.0054 126.613 li
44.2811 127.023 li
44.573 127.499 li
44.8651 128.025 li
45.1575 128.61 li
45.4424 129.258 li
45.7391 129.97 li
46.0357 130.732 li
46.3331 131.554 li
46.6299 132.426 li
46.9182 133.369 li
46.9177 133.367 li
47.2169 134.365 li
47.5154 135.41 li
47.8136 136.524 li
48.1028 137.691 li
48.1025 137.69 li
48.4023 138.917 li
48.7016 140.205 li
48.7009 140.202 li
49.0007 141.542 li
49 141.539 li
49.2031 142.485 li
34.7769 142.485 li
34.7769 142.86 li
35.1441 142.936 li
34.7769 142.86 li
34.7769 143.235 li
49.6669 143.235 li
49.7808 143.235 49.8871 143.185 49.9586 143.096 cv
50.0302 143.008 50.0575 142.893 50.0336 142.782 cv
49.7334 141.381 li
49.7327 141.378 li
49.4328 140.038 li
49.4322 140.035 li
49.1323 138.745 li
49.1314 138.741 li
48.8311 137.512 li
48.8307 137.51 li
48.5408 136.34 li
48.539 136.334 li
48.2392 135.214 li
48.2376 135.207 li
47.9372 134.157 li
47.9359 134.152 li
47.6361 133.152 li
47.6355 133.15 li
47.3454 132.201 li
47.3418 132.19 li
47.042 131.309 li
47.0396 131.303 li
46.7394 130.473 li
46.7362 130.464 li
46.4364 129.694 li
46.4331 129.686 li
46.1333 128.966 li
46.1305 128.96 li
45.8404 128.299 li
45.8325 128.282 li
45.5321 127.682 li
45.5247 127.668 li
45.2249 127.128 li
45.2166 127.114 li
44.9164 126.624 li
44.9077 126.611 li
44.6182 126.181 li
44.5983 126.154 li
44.298 125.784 li
44.2764 125.759 li
43.9766 125.449 li
43.9523 125.426 li
43.6521 125.167 li
43.615 125.138 li
43.3151 124.938 li
43.2696 124.912 li
42.9796 124.772 li
42.925 124.751 li
42.6253 124.661 li
42.5541 124.647 li
42.2538 124.617 li
42.1797 124.617 li
41.8799 124.647 li
41.8055 124.662 li
41.5155 124.752 li
41.4689 124.77 li
41.1685 124.91 li
41.1185 124.938 li
40.8186 125.138 li
40.7813 125.167 li
40.4815 125.427 li
40.4576 125.449 li
40.1574 125.759 li
40.1315 125.789 li
39.8415 126.159 li
39.829 126.176 li
39.5293 126.606 li
39.5171 126.625 li
39.2173 127.114 li
39.2094 127.128 li
38.909 127.668 li
38.8991 127.687 li
38.6091 128.287 li
38.6054 128.295 li
38.3056 128.955 li
38.3009 128.966 li
38.0006 129.686 li
37.9972 129.694 li
37.6974 130.464 li
37.6942 130.473 li
37.3943 131.303 li
37.3909 131.313 li
37.1009 132.193 li
37.0995 132.197 li
36.7992 133.147 li
36.7976 133.152 li
36.4977 134.152 li
36.4963 134.157 li
36.1965 135.208 li
36.195 135.213 li
35.8946 136.334 li
35.8928 136.34 li
35.6028 137.51 li
35.6025 137.512 li
35.3027 138.741 li
35.3017 138.745 li
35.0015 140.035 li
35.0008 140.038 li
34.7009 141.378 li
34.6997 141.384 li
34.4096 142.784 li
34.3868 142.895 34.415 143.01 34.4861 143.097 cv
34.5571 143.184 34.6643 143.235 34.7769 143.235 cv
34.7769 142.86 li
.653773 .579889 .56878 .366613 cmyk
f
153.887 142.86 mo
50.0421 142.86 li
50.042 142.834 50.0393 142.808 50.0336 142.782 cv
49.7334 141.381 li
49.7327 141.378 li
49.4328 140.038 li
49.4322 140.035 li
49.1323 138.745 li
49.1314 138.741 li
49.0458 138.391 li
49.0669 138.391 li
49.3667 138.391 li
49.6669 138.391 li
49.9571 138.391 li
50.2568 138.391 li
50.5571 138.391 li
50.857 138.391 li
51.147 138.391 li
51.4468 138.391 li
51.7471 138.391 li
52.0469 138.391 li
52.3467 138.391 li
52.6367 138.391 li
52.937 138.391 li
53.2368 138.391 li
53.5371 138.391 li
53.8267 138.391 li
54.127 138.391 li
54.4267 138.391 li
54.727 138.391 li
55.0269 138.391 li
55.3169 138.391 li
55.6167 138.391 li
55.917 138.391 li
56.2168 138.391 li
56.5068 138.391 li
56.8072 138.391 li
57.107 138.391 li
57.4067 138.391 li
57.707 138.391 li
57.9971 138.391 li
58.2969 138.391 li
58.5967 138.391 li
58.897 138.391 li
59.1968 138.391 li
59.4868 138.391 li
59.787 138.391 li
60.0869 138.391 li
60.3867 138.391 li
60.6767 138.391 li
60.9771 138.391 li
61.2769 138.391 li
61.5767 138.391 li
61.8769 138.391 li
62.167 138.391 li
62.4668 138.391 li
62.767 138.391 li
63.0669 138.391 li
63.3569 138.391 li
63.6567 138.391 li
63.9571 138.391 li
64.2569 138.391 li
64.5571 138.391 li
64.8466 138.391 li
65.147 138.391 li
65.4468 138.391 li
65.747 138.391 li
66.0371 138.391 li
66.3369 138.391 li
66.6367 138.391 li
66.937 138.391 li
67.2369 138.391 li
67.5268 138.391 li
67.8266 138.391 li
68.127 138.391 li
68.4268 138.391 li
68.7168 138.391 li
69.0171 138.391 li
69.3169 138.391 li
69.6167 138.391 li
69.9169 138.391 li
70.2071 138.391 li
70.5068 138.391 li
70.8071 138.391 li
71.107 138.391 li
71.397 138.391 li
71.6968 138.391 li
71.9971 138.391 li
72.2969 138.391 li
72.5967 138.391 li
72.8867 138.391 li
73.187 138.391 li
73.4868 138.391 li
73.7871 138.391 li
74.0767 138.391 li
74.377 138.391 li
74.6768 138.391 li
74.977 138.391 li
75.2769 138.391 li
75.5669 138.391 li
75.8667 138.391 li
76.167 138.391 li
76.4668 138.391 li
76.7568 138.391 li
77.0572 138.391 li
77.357 138.391 li
77.6567 138.391 li
77.957 138.391 li
78.2471 138.391 li
78.5469 138.391 li
78.8467 138.391 li
79.1469 138.391 li
79.4468 138.391 li
79.7368 138.391 li
80.037 138.391 li
80.337 138.391 li
80.6367 138.391 li
80.9267 138.391 li
81.2271 138.391 li
81.5269 138.391 li
81.8267 138.391 li
82.1269 138.391 li
82.417 138.391 li
82.7168 138.391 li
83.017 138.391 li
83.3169 138.391 li
83.6069 138.391 li
83.9067 138.391 li
84.2071 138.391 li
84.5069 138.391 li
84.8071 138.391 li
85.0966 138.391 li
85.397 138.391 li
85.6968 138.391 li
85.997 138.391 li
86.2871 138.391 li
86.5869 138.391 li
86.8867 138.391 li
87.187 138.391 li
87.4869 138.391 li
87.7768 138.391 li
88.0766 138.391 li
88.377 138.391 li
88.6768 138.391 li
88.9668 138.391 li
89.2671 138.391 li
89.5669 138.391 li
89.8667 138.391 li
90.167 138.391 li
90.4571 138.391 li
90.7568 138.391 li
91.0571 138.391 li
91.3569 138.391 li
91.647 138.391 li
91.9468 138.391 li
92.247 138.391 li
92.5469 138.391 li
92.8467 138.391 li
93.1367 138.391 li
93.437 138.391 li
93.7368 138.391 li
94.0371 138.391 li
94.3267 138.391 li
94.627 138.391 li
94.9268 138.391 li
95.227 138.391 li
95.5269 138.391 li
95.8169 138.391 li
96.1167 138.391 li
96.417 138.391 li
96.7168 138.391 li
97.0068 138.391 li
97.3072 138.391 li
97.607 138.391 li
97.9067 138.391 li
98.207 138.391 li
98.4971 138.391 li
98.7969 138.391 li
99.0967 138.391 li
99.3969 138.391 li
99.6968 138.391 li
99.9868 138.391 li
100.287 138.391 li
100.587 138.391 li
100.887 138.391 li
101.177 138.391 li
101.477 138.391 li
101.777 138.391 li
102.077 138.391 li
102.377 138.391 li
102.667 138.391 li
102.967 138.391 li
103.267 138.391 li
103.567 138.391 li
103.857 138.391 li
104.157 138.391 li
104.457 138.391 li
104.757 138.391 li
105.057 138.391 li
105.347 138.391 li
105.647 138.391 li
105.947 138.391 li
106.247 138.391 li
106.537 138.391 li
106.837 138.391 li
107.137 138.391 li
107.437 138.391 li
107.737 138.391 li
108.027 138.391 li
108.327 138.391 li
108.627 138.391 li
108.927 138.391 li
109.217 138.391 li
109.517 138.391 li
109.817 138.391 li
110.117 138.391 li
110.417 138.391 li
110.707 138.391 li
111.007 138.391 li
111.307 138.391 li
111.607 138.391 li
111.897 138.391 li
112.197 138.391 li
112.497 138.391 li
112.797 138.391 li
113.097 138.391 li
113.387 138.391 li
113.687 138.391 li
113.987 138.391 li
114.287 138.391 li
114.577 138.391 li
114.877 138.391 li
115.177 138.391 li
115.477 138.391 li
115.777 138.391 li
116.067 138.391 li
116.367 138.391 li
116.667 138.391 li
116.967 138.391 li
117.257 138.391 li
117.557 138.391 li
117.857 138.391 li
118.157 138.391 li
118.457 138.391 li
118.747 138.391 li
119.047 138.391 li
119.347 138.391 li
119.647 138.391 li
119.947 138.391 li
120.237 138.391 li
120.537 138.391 li
120.837 138.391 li
121.137 138.391 li
121.427 138.391 li
121.727 138.391 li
122.027 138.391 li
122.327 138.391 li
122.627 138.391 li
122.917 138.391 li
123.217 138.391 li
123.517 138.391 li
123.817 138.391 li
124.107 138.391 li
124.407 138.391 li
124.707 138.391 li
125.007 138.391 li
125.307 138.391 li
125.597 138.391 li
125.897 138.391 li
126.197 138.391 li
126.497 138.391 li
126.787 138.391 li
127.087 138.391 li
127.387 138.391 li
127.687 138.391 li
127.987 138.391 li
128.277 138.391 li
128.577 138.391 li
128.877 138.391 li
129.177 138.391 li
129.467 138.391 li
129.767 138.391 li
130.067 138.391 li
130.367 138.391 li
130.667 138.391 li
130.957 138.391 li
131.257 138.391 li
131.557 138.391 li
131.857 138.391 li
132.147 138.391 li
132.447 138.391 li
132.747 138.391 li
133.047 138.391 li
133.347 138.391 li
133.637 138.391 li
133.937 138.391 li
134.237 138.391 li
134.537 138.391 li
134.827 138.391 li
135.127 138.391 li
135.427 138.391 li
135.727 138.391 li
136.027 138.391 li
136.317 138.391 li
136.617 138.391 li
136.917 138.391 li
137.217 138.391 li
137.507 138.391 li
137.807 138.391 li
138.107 138.391 li
138.407 138.391 li
138.707 138.391 li
138.997 138.391 li
139.297 138.391 li
139.597 138.391 li
139.897 138.391 li
140.187 138.391 li
140.487 138.391 li
140.787 138.391 li
141.087 138.391 li
141.387 138.391 li
141.677 138.391 li
141.977 138.391 li
142.277 138.391 li
142.577 138.391 li
142.877 138.391 li
143.167 138.391 li
143.467 138.391 li
143.767 138.391 li
144.067 138.391 li
144.357 138.391 li
144.657 138.391 li
144.957 138.391 li
145.257 138.391 li
145.557 138.391 li
145.847 138.391 li
146.147 138.391 li
146.447 138.391 li
146.747 138.391 li
147.037 138.391 li
147.337 138.391 li
147.637 138.391 li
147.937 138.391 li
148.237 138.391 li
148.527 138.391 li
148.827 138.391 li
149.127 138.391 li
149.427 138.391 li
149.717 138.391 li
150.017 138.391 li
150.317 138.391 li
150.617 138.391 li
150.917 138.391 li
151.207 138.391 li
151.507 138.391 li
151.807 138.391 li
152.107 138.391 li
152.397 138.391 li
152.697 138.391 li
152.997 138.391 li
153.297 138.391 li
153.597 138.391 li
153.887 138.391 li
153.887 142.86 li
34.7769 141.038 mo
34.7769 138.391 li
35.0669 138.391 li
35.3667 138.391 li
35.3882 138.391 li
35.3027 138.741 li
35.3017 138.745 li
35.0015 140.035 li
35.0008 140.038 li
34.7769 141.038 li
.310094 .245731 .251011 3.0518e-05 cmyk
f
49.2031 142.485 mo
35.2375 142.485 li
35.4336 141.539 li
35.7325 140.203 li
36.0318 138.917 li
36.1602 138.391 li
36.2568 138.391 li
36.5572 138.391 li
36.857 138.391 li
37.1567 138.391 li
37.457 138.391 li
37.7471 138.391 li
38.0469 138.391 li
38.3467 138.391 li
38.647 138.391 li
38.9468 138.391 li
39.2368 138.391 li
39.5372 138.391 li
39.8369 138.391 li
40.1367 138.391 li
40.4267 138.391 li
40.7271 138.391 li
41.0269 138.391 li
41.3266 138.391 li
41.6269 138.391 li
41.917 138.391 li
42.2168 138.391 li
42.517 138.391 li
42.8169 138.391 li
43.1069 138.391 li
43.4067 138.391 li
43.7071 138.391 li
44.0069 138.391 li
44.3071 138.391 li
44.5966 138.391 li
44.897 138.391 li
45.1968 138.391 li
45.497 138.391 li
45.7871 138.391 li
46.0869 138.391 li
46.3867 138.391 li
46.687 138.391 li
46.9869 138.391 li
47.2768 138.391 li
47.5766 138.391 li
47.877 138.391 li
48.1768 138.391 li
48.2737 138.391 li
48.4023 138.917 li
48.7016 140.205 li
48.7009 140.202 li
49.0007 141.542 li
49 141.539 li
49.2031 142.485 li
.403967 .328161 .332891 .00479133 cmyk
f
50.0421 142.86 mo
34.7769 142.86 li
34.7769 141.038 li
35.0008 140.038 li
35.0015 140.035 li
35.3017 138.745 li
35.3027 138.741 li
35.3882 138.391 li
35.667 138.391 li
35.9668 138.391 li
36.1602 138.391 li
36.0318 138.917 li
35.7325 140.203 li
35.4336 141.539 li
35.2375 142.485 li
49.2031 142.485 li
49 141.539 li
49.0007 141.542 li
48.7009 140.202 li
48.7016 140.205 li
48.4023 138.917 li
48.2737 138.391 li
48.4668 138.391 li
48.7671 138.391 li
49.0458 138.391 li
49.1314 138.741 li
49.1323 138.745 li
49.4322 140.035 li
49.4328 140.038 li
49.7327 141.378 li
49.7334 141.381 li
50.0336 142.782 li
50.0393 142.808 50.042 142.834 50.0421 142.86 cv
34.7769 142.86 mo
34.7769 142.86 li
.626795 .547021 .537102 .276127 cmyk
f
34.7769 142.86 mo
35.1519 142.86 li
35.1519 138.391 li
34.7769 138.391 li
34.7769 138.766 li
35.0669 138.766 li
35.3667 138.766 li
35.667 138.766 li
35.9668 138.766 li
36.2568 138.766 li
36.5571 138.766 li
36.8569 138.766 li
37.1567 138.766 li
37.457 138.766 li
37.7471 138.766 li
38.0469 138.766 li
38.3467 138.766 li
38.647 138.766 li
38.9468 138.766 li
39.2368 138.766 li
39.5371 138.766 li
39.8369 138.766 li
40.1367 138.766 li
40.4268 138.766 li
40.7271 138.766 li
41.0269 138.766 li
41.3267 138.766 li
41.627 138.766 li
41.917 138.766 li
42.2168 138.766 li
42.5171 138.766 li
42.8169 138.766 li
43.1069 138.766 li
43.4067 138.766 li
43.707 138.766 li
44.0068 138.766 li
44.3071 138.766 li
44.5967 138.766 li
44.897 138.766 li
45.1968 138.766 li
45.4971 138.766 li
45.7871 138.766 li
46.0869 138.766 li
46.3867 138.766 li
46.687 138.766 li
46.9868 138.766 li
47.2769 138.766 li
47.5767 138.766 li
47.877 138.766 li
48.1768 138.766 li
48.4668 138.766 li
48.7671 138.766 li
49.0669 138.766 li
49.3667 138.766 li
49.667 138.766 li
49.957 138.766 li
50.2568 138.766 li
50.5571 138.766 li
50.8569 138.766 li
51.147 138.766 li
51.4468 138.766 li
51.7471 138.766 li
52.0469 138.766 li
52.3467 138.766 li
52.6367 138.766 li
52.937 138.766 li
53.2368 138.766 li
53.5371 138.766 li
53.8267 138.766 li
54.127 138.766 li
54.4268 138.766 li
54.7271 138.766 li
55.0269 138.766 li
55.3169 138.766 li
55.6167 138.766 li
55.917 138.766 li
56.2168 138.766 li
56.5068 138.766 li
56.8071 138.766 li
57.1069 138.766 li
57.4067 138.766 li
57.707 138.766 li
57.9971 138.766 li
58.2969 138.766 li
58.5967 138.766 li
58.897 138.766 li
59.1968 138.766 li
59.4868 138.766 li
59.7871 138.766 li
60.0869 138.766 li
60.3867 138.766 li
60.6768 138.766 li
60.9771 138.766 li
61.2769 138.766 li
61.5767 138.766 li
61.877 138.766 li
62.167 138.766 li
62.4668 138.766 li
62.7671 138.766 li
63.0669 138.766 li
63.3569 138.766 li
63.6567 138.766 li
63.957 138.766 li
64.2568 138.766 li
64.5571 138.766 li
64.8467 138.766 li
65.147 138.766 li
65.4468 138.766 li
65.7471 138.766 li
66.0371 138.766 li
66.3369 138.766 li
66.6367 138.766 li
66.937 138.766 li
67.2368 138.766 li
67.5269 138.766 li
67.8267 138.766 li
68.127 138.766 li
68.4268 138.766 li
68.7168 138.766 li
69.0171 138.766 li
69.3169 138.766 li
69.6167 138.766 li
69.917 138.766 li
70.207 138.766 li
70.5068 138.766 li
70.8071 138.766 li
71.1069 138.766 li
71.397 138.766 li
71.6968 138.766 li
71.9971 138.766 li
72.2969 138.766 li
72.5967 138.766 li
72.8867 138.766 li
73.187 138.766 li
73.4868 138.766 li
73.7871 138.766 li
74.0767 138.766 li
74.377 138.766 li
74.6768 138.766 li
74.9771 138.766 li
75.2769 138.766 li
75.5669 138.766 li
75.8667 138.766 li
76.167 138.766 li
76.4668 138.766 li
76.7568 138.766 li
77.0571 138.766 li
77.3569 138.766 li
77.6567 138.766 li
77.957 138.766 li
78.2471 138.766 li
78.5469 138.766 li
78.8467 138.766 li
79.147 138.766 li
79.4468 138.766 li
79.7368 138.766 li
80.0371 138.766 li
80.3369 138.766 li
80.6367 138.766 li
80.9268 138.766 li
81.2271 138.766 li
81.5269 138.766 li
81.8267 138.766 li
82.127 138.766 li
82.417 138.766 li
82.7168 138.766 li
83.0171 138.766 li
83.3169 138.766 li
83.6069 138.766 li
83.9067 138.766 li
84.207 138.766 li
84.5068 138.766 li
84.8071 138.766 li
85.0967 138.766 li
85.397 138.766 li
85.6968 138.766 li
85.9971 138.766 li
86.2871 138.766 li
86.5869 138.766 li
86.8867 138.766 li
87.187 138.766 li
87.4868 138.766 li
87.7769 138.766 li
88.0767 138.766 li
88.377 138.766 li
88.6768 138.766 li
88.9668 138.766 li
89.2671 138.766 li
89.5669 138.766 li
89.8667 138.766 li
90.167 138.766 li
90.457 138.766 li
90.7568 138.766 li
91.0571 138.766 li
91.3569 138.766 li
91.647 138.766 li
91.9468 138.766 li
92.2471 138.766 li
92.5469 138.766 li
92.8467 138.766 li
93.1367 138.766 li
93.437 138.766 li
93.7368 138.766 li
94.0371 138.766 li
94.3267 138.766 li
94.627 138.766 li
94.9268 138.766 li
95.2271 138.766 li
95.5269 138.766 li
95.8169 138.766 li
96.1167 138.766 li
96.417 138.766 li
96.7168 138.766 li
97.0068 138.766 li
97.3071 138.766 li
97.6069 138.766 li
97.9067 138.766 li
98.207 138.766 li
98.4971 138.766 li
98.7969 138.766 li
99.0967 138.766 li
99.397 138.766 li
99.6968 138.766 li
99.9868 138.766 li
100.287 138.766 li
100.587 138.766 li
100.887 138.766 li
101.177 138.766 li
101.477 138.766 li
101.777 138.766 li
102.077 138.766 li
102.377 138.766 li
102.667 138.766 li
102.967 138.766 li
103.267 138.766 li
103.567 138.766 li
103.857 138.766 li
104.157 138.766 li
104.457 138.766 li
104.757 138.766 li
105.057 138.766 li
105.347 138.766 li
105.647 138.766 li
105.947 138.766 li
106.247 138.766 li
106.537 138.766 li
106.837 138.766 li
107.137 138.766 li
107.437 138.766 li
107.737 138.766 li
108.027 138.766 li
108.327 138.766 li
108.627 138.766 li
108.927 138.766 li
109.217 138.766 li
109.517 138.766 li
109.817 138.766 li
110.117 138.766 li
110.417 138.766 li
110.707 138.766 li
111.007 138.766 li
111.307 138.766 li
111.607 138.766 li
111.897 138.766 li
112.197 138.766 li
112.497 138.766 li
112.797 138.766 li
113.097 138.766 li
113.387 138.766 li
113.687 138.766 li
113.987 138.766 li
114.287 138.766 li
114.577 138.766 li
114.877 138.766 li
115.177 138.766 li
115.477 138.766 li
115.777 138.766 li
116.067 138.766 li
116.367 138.766 li
116.667 138.766 li
116.967 138.766 li
117.257 138.766 li
117.557 138.766 li
117.857 138.766 li
118.157 138.766 li
118.457 138.766 li
118.747 138.766 li
119.047 138.766 li
119.347 138.766 li
119.647 138.766 li
119.947 138.766 li
120.237 138.766 li
120.537 138.766 li
120.837 138.766 li
121.137 138.766 li
121.427 138.766 li
121.727 138.766 li
122.027 138.766 li
122.327 138.766 li
122.627 138.766 li
122.917 138.766 li
123.217 138.766 li
123.517 138.766 li
123.817 138.766 li
124.107 138.766 li
124.407 138.766 li
124.707 138.766 li
125.007 138.766 li
125.307 138.766 li
125.597 138.766 li
125.897 138.766 li
126.197 138.766 li
126.497 138.766 li
126.787 138.766 li
127.087 138.766 li
127.387 138.766 li
127.687 138.766 li
127.987 138.766 li
128.277 138.766 li
128.577 138.766 li
128.877 138.766 li
129.177 138.766 li
129.467 138.766 li
129.767 138.766 li
130.067 138.766 li
130.367 138.766 li
130.667 138.766 li
130.957 138.766 li
131.257 138.766 li
131.557 138.766 li
131.857 138.766 li
132.147 138.766 li
132.447 138.766 li
132.747 138.766 li
133.047 138.766 li
133.347 138.766 li
133.637 138.766 li
133.937 138.766 li
134.237 138.766 li
134.537 138.766 li
134.827 138.766 li
135.127 138.766 li
135.427 138.766 li
135.727 138.766 li
136.027 138.766 li
136.317 138.766 li
136.617 138.766 li
136.917 138.766 li
137.217 138.766 li
137.507 138.766 li
137.807 138.766 li
138.107 138.766 li
138.407 138.766 li
138.707 138.766 li
138.997 138.766 li
139.297 138.766 li
139.597 138.766 li
139.897 138.766 li
140.187 138.766 li
140.487 138.766 li
140.787 138.766 li
141.087 138.766 li
141.387 138.766 li
141.677 138.766 li
141.977 138.766 li
142.277 138.766 li
142.577 138.766 li
142.877 138.766 li
143.167 138.766 li
143.467 138.766 li
143.767 138.766 li
144.067 138.766 li
144.357 138.766 li
144.657 138.766 li
144.957 138.766 li
145.257 138.766 li
145.557 138.766 li
145.847 138.766 li
146.147 138.766 li
146.447 138.766 li
146.747 138.766 li
147.037 138.766 li
147.337 138.766 li
147.637 138.766 li
147.937 138.766 li
148.237 138.766 li
148.527 138.766 li
148.827 138.766 li
149.127 138.766 li
149.427 138.766 li
149.717 138.766 li
150.017 138.766 li
150.317 138.766 li
150.617 138.766 li
150.917 138.766 li
151.207 138.766 li
151.507 138.766 li
151.807 138.766 li
152.107 138.766 li
152.397 138.766 li
152.697 138.766 li
152.997 138.766 li
153.297 138.766 li
153.597 138.766 li
153.887 138.766 li
153.887 138.391 li
153.512 138.391 li
153.512 142.485 li
34.7769 142.485 li
34.7769 142.86 li
35.1519 142.86 li
34.7769 142.86 li
34.7769 143.235 li
153.887 143.235 li
153.985 143.235 154.082 143.195 154.152 143.126 cv
154.222 143.056 154.262 142.959 154.262 142.86 cv
154.262 138.391 li
154.262 138.292 154.222 138.195 154.152 138.125 cv
154.082 138.056 153.985 138.016 153.887 138.016 cv
153.597 138.016 li
153.297 138.016 li
152.997 138.016 li
152.697 138.016 li
152.397 138.016 li
152.107 138.016 li
151.807 138.016 li
151.507 138.016 li
151.207 138.016 li
150.917 138.016 li
150.617 138.016 li
150.317 138.016 li
150.017 138.016 li
149.717 138.016 li
149.427 138.016 li
149.127 138.016 li
148.827 138.016 li
148.527 138.016 li
148.237 138.016 li
147.937 138.016 li
147.637 138.016 li
147.337 138.016 li
147.037 138.016 li
146.747 138.016 li
146.447 138.016 li
146.147 138.016 li
145.847 138.016 li
145.557 138.016 li
145.257 138.016 li
144.957 138.016 li
144.657 138.016 li
144.357 138.016 li
144.067 138.016 li
143.767 138.016 li
143.467 138.016 li
143.167 138.016 li
142.877 138.016 li
142.577 138.016 li
142.277 138.016 li
141.977 138.016 li
141.677 138.016 li
141.387 138.016 li
141.087 138.016 li
140.787 138.016 li
140.487 138.016 li
140.187 138.016 li
139.897 138.016 li
139.597 138.016 li
139.297 138.016 li
138.997 138.016 li
138.707 138.016 li
138.407 138.016 li
138.107 138.016 li
137.807 138.016 li
137.507 138.016 li
137.217 138.016 li
136.917 138.016 li
136.617 138.016 li
136.317 138.016 li
136.027 138.016 li
135.727 138.016 li
135.427 138.016 li
135.127 138.016 li
134.827 138.016 li
134.537 138.016 li
134.237 138.016 li
133.937 138.016 li
133.637 138.016 li
133.347 138.016 li
133.047 138.016 li
132.747 138.016 li
132.447 138.016 li
132.147 138.016 li
131.857 138.016 li
131.557 138.016 li
131.257 138.016 li
130.957 138.016 li
130.667 138.016 li
130.367 138.016 li
130.067 138.016 li
129.767 138.016 li
129.467 138.016 li
129.177 138.016 li
128.877 138.016 li
128.577 138.016 li
128.277 138.016 li
127.987 138.016 li
127.687 138.016 li
127.387 138.016 li
127.087 138.016 li
126.787 138.016 li
126.497 138.016 li
126.197 138.016 li
125.897 138.016 li
125.597 138.016 li
125.307 138.016 li
125.007 138.016 li
124.707 138.016 li
124.407 138.016 li
124.107 138.016 li
123.817 138.016 li
123.517 138.016 li
123.217 138.016 li
122.917 138.016 li
122.627 138.016 li
122.327 138.016 li
122.027 138.016 li
121.727 138.016 li
121.427 138.016 li
121.137 138.016 li
120.837 138.016 li
120.537 138.016 li
120.237 138.016 li
119.947 138.016 li
119.647 138.016 li
119.347 138.016 li
119.047 138.016 li
118.747 138.016 li
118.457 138.016 li
118.157 138.016 li
117.857 138.016 li
117.557 138.016 li
117.257 138.016 li
116.967 138.016 li
116.667 138.016 li
116.367 138.016 li
116.067 138.016 li
115.777 138.016 li
115.477 138.016 li
115.177 138.016 li
114.877 138.016 li
114.577 138.016 li
114.287 138.016 li
113.987 138.016 li
113.687 138.016 li
113.387 138.016 li
113.097 138.016 li
112.797 138.016 li
112.497 138.016 li
112.197 138.016 li
111.897 138.016 li
111.607 138.016 li
111.307 138.016 li
111.007 138.016 li
110.707 138.016 li
110.417 138.016 li
110.117 138.016 li
109.817 138.016 li
109.517 138.016 li
109.217 138.016 li
108.927 138.016 li
108.627 138.016 li
108.327 138.016 li
108.027 138.016 li
107.737 138.016 li
107.437 138.016 li
107.137 138.016 li
106.837 138.016 li
106.537 138.016 li
106.247 138.016 li
105.947 138.016 li
105.647 138.016 li
105.347 138.016 li
105.057 138.016 li
104.757 138.016 li
104.457 138.016 li
104.157 138.016 li
103.857 138.016 li
103.567 138.016 li
103.267 138.016 li
102.967 138.016 li
102.667 138.016 li
102.377 138.016 li
102.077 138.016 li
101.777 138.016 li
101.477 138.016 li
101.177 138.016 li
100.887 138.016 li
100.587 138.016 li
100.287 138.016 li
99.9868 138.016 li
99.6968 138.016 li
99.397 138.016 li
99.0967 138.016 li
98.7969 138.016 li
98.4971 138.016 li
98.207 138.016 li
97.9067 138.016 li
97.6069 138.016 li
97.3071 138.016 li
97.0068 138.016 li
96.7168 138.016 li
96.417 138.016 li
96.1167 138.016 li
95.8169 138.016 li
95.5269 138.016 li
95.2271 138.016 li
94.9268 138.016 li
94.627 138.016 li
94.3267 138.016 li
94.0371 138.016 li
93.7368 138.016 li
93.437 138.016 li
93.1367 138.016 li
92.8467 138.016 li
92.5469 138.016 li
92.2471 138.016 li
91.9468 138.016 li
91.647 138.016 li
91.3569 138.016 li
91.0571 138.016 li
90.7568 138.016 li
90.457 138.016 li
90.167 138.016 li
89.8667 138.016 li
89.5669 138.016 li
89.2671 138.016 li
88.9668 138.016 li
88.6768 138.016 li
88.377 138.016 li
88.0767 138.016 li
87.7769 138.016 li
87.4868 138.016 li
87.187 138.016 li
86.8867 138.016 li
86.5869 138.016 li
86.2871 138.016 li
85.9971 138.016 li
85.6968 138.016 li
85.397 138.016 li
85.0967 138.016 li
84.8071 138.016 li
84.5068 138.016 li
84.207 138.016 li
83.9067 138.016 li
83.6069 138.016 li
83.3169 138.016 li
83.0171 138.016 li
82.7168 138.016 li
82.417 138.016 li
82.127 138.016 li
81.8267 138.016 li
81.5269 138.016 li
81.2271 138.016 li
80.9268 138.016 li
80.6367 138.016 li
80.3369 138.016 li
80.0371 138.016 li
79.7368 138.016 li
79.4468 138.016 li
79.147 138.016 li
78.8467 138.016 li
78.5469 138.016 li
78.2471 138.016 li
77.957 138.016 li
77.6567 138.016 li
77.3569 138.016 li
77.0571 138.016 li
76.7568 138.016 li
76.4668 138.016 li
76.167 138.016 li
75.8667 138.016 li
75.5669 138.016 li
75.2769 138.016 li
74.9771 138.016 li
74.6768 138.016 li
74.377 138.016 li
74.0767 138.016 li
73.7871 138.016 li
73.4868 138.016 li
73.187 138.016 li
72.8867 138.016 li
72.5967 138.016 li
72.2969 138.016 li
71.9971 138.016 li
71.6968 138.016 li
71.397 138.016 li
71.1069 138.016 li
70.8071 138.016 li
70.5068 138.016 li
70.207 138.016 li
69.917 138.016 li
69.6167 138.016 li
69.3169 138.016 li
69.0171 138.016 li
68.7168 138.016 li
68.4268 138.016 li
68.127 138.016 li
67.8267 138.016 li
67.5269 138.016 li
67.2368 138.016 li
66.937 138.016 li
66.6367 138.016 li
66.3369 138.016 li
66.0371 138.016 li
65.7471 138.016 li
65.4468 138.016 li
65.147 138.016 li
64.8467 138.016 li
64.5571 138.016 li
64.2568 138.016 li
63.957 138.016 li
63.6567 138.016 li
63.3569 138.016 li
63.0669 138.016 li
62.7671 138.016 li
62.4668 138.016 li
62.167 138.016 li
61.877 138.016 li
61.5767 138.016 li
61.2769 138.016 li
60.9771 138.016 li
60.6768 138.016 li
60.3867 138.016 li
60.0869 138.016 li
59.7871 138.016 li
59.4868 138.016 li
59.1968 138.016 li
58.897 138.016 li
58.5967 138.016 li
58.2969 138.016 li
57.9971 138.016 li
57.707 138.016 li
57.4067 138.016 li
57.1069 138.016 li
56.8071 138.016 li
56.5068 138.016 li
56.2168 138.016 li
55.917 138.016 li
55.6167 138.016 li
55.3169 138.016 li
55.0269 138.016 li
54.7271 138.016 li
54.4268 138.016 li
54.127 138.016 li
53.8267 138.016 li
53.5371 138.016 li
53.2368 138.016 li
52.937 138.016 li
52.6367 138.016 li
52.3467 138.016 li
52.0469 138.016 li
51.7471 138.016 li
51.4468 138.016 li
51.147 138.016 li
50.8569 138.016 li
50.5571 138.016 li
50.2568 138.016 li
49.957 138.016 li
49.667 138.016 li
49.3667 138.016 li
49.0669 138.016 li
48.7671 138.016 li
48.4668 138.016 li
48.1768 138.016 li
47.877 138.016 li
47.5767 138.016 li
47.2769 138.016 li
46.9868 138.016 li
46.687 138.016 li
46.3867 138.016 li
46.0869 138.016 li
45.7871 138.016 li
45.4971 138.016 li
45.1968 138.016 li
44.897 138.016 li
44.5967 138.016 li
44.3071 138.016 li
44.0068 138.016 li
43.707 138.016 li
43.4067 138.016 li
43.1069 138.016 li
42.8169 138.016 li
42.5171 138.016 li
42.2168 138.016 li
41.917 138.016 li
41.627 138.016 li
41.3267 138.016 li
41.0269 138.016 li
40.7271 138.016 li
40.4268 138.016 li
40.1367 138.016 li
39.8369 138.016 li
39.5371 138.016 li
39.2368 138.016 li
38.9468 138.016 li
38.647 138.016 li
38.3467 138.016 li
38.0469 138.016 li
37.7471 138.016 li
37.457 138.016 li
37.1567 138.016 li
36.8569 138.016 li
36.5571 138.016 li
36.2568 138.016 li
35.9668 138.016 li
35.667 138.016 li
35.3667 138.016 li
35.0669 138.016 li
34.7769 138.016 li
34.6781 138.016 34.5815 138.056 34.5117 138.125 cv
34.4419 138.195 34.4019 138.292 34.4019 138.391 cv
34.4019 142.86 li
34.4019 142.959 34.4419 143.056 34.5117 143.126 cv
34.5815 143.195 34.6781 143.235 34.7769 143.235 cv
34.7769 142.86 li
cp
.710841 .650507 .640253 .693324 cmyk
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 97 /a putdup 98 /b putdup 100 /d putdup 101 /e putdup 102 /f putdup 103 /g putdup 104 /h putdup 105 /i putdup 108 /l putdup 110 /n putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 119 /w putdup 127 /minus putdef/FontBBox {-951 -481 1446 1122} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings20 dict dup begin/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-/space <1C60D8A8C9B854D00D> |-/a <1C60D8A8C9B7EF322B0D17E770BC81022852C5639214CBF49D6EF8BAFB0188062A6BB41F6EB58ADD15E3D1B86AD22624C804FD4A4EBA73D78F7E503599DB65A7EB53D74C4A9A536152BF7A6B13AB96FF2727313FED0263E50A950746CED5AD5E7764E6E353716A8BE8970281B41D9429E56957BD1FCC84205F76AF78E807D18CA1CFFE724AECDDD2D385233E91066015AC7E0906FE359E28D96D9E0BD326B9E6C7D3E486FD1864E3B47A611B1D6D0D080020321300485E65AE9E4C12443E21865F474D46CD791839F25C8FD0A80215E3D2C3A5928427942DF3859AEF6E9035C909FC75082E8FF246F375DDB90EAC248C9121707FE869E161502F320A27113504> |-/b <1C60D8A8C9B7EF3218D573119DA1C11A6AE733DE74B449EE28E952049DF20D24986476D6D2EEF32C9EA9D0ACD1DB597DCDAFEA016C8786CCA065DDF1EE5907C8756872FC8DF20AB863D540CF67DD1EF324B2790688B9E765FC9F6CEBC3C128AB52D1A4FF3B9BAF04627D17E8573C64B9FC053FD7156FF73E6BCD82B1A402A01ECDBBEC20265AC1F5281625> |-/d <1C60D8A8C9B7EF322B197A4CECAEBFA93CFC6ACCC571419BFA5461EED77BFB3D8FE900AE7AE7F3558D5F515A8BFDAAA816E55EE92701787F654353E7BD1A4CD427A1C3D52C079A2D5373BCA2D0E81E97334505A34C6046F7856771303B422A1AED127DFB82533DF581F3B1C10CE7C6EB68EFDC809921DBBDF534E7567CC2D2750B89DE10766FCFB923BB97A09A4C79BB9A> |-/e <1C60D8A8C9B7EF322BB83B593C4F5531F1493EEBEAC6F4C92C25FF10F1FB8EC7E530E4B1F1C9E51F31B44D59539AB4135F310FAB43C5A16AA1F4EA07D67BBB916AB355913EB7D45F3AC7C9CF1FD32728FCA1A2D5BBD257CEF831AE751904AD7F4FBE21E10F3A844E74CF6B850E894017941E45AE6BCDA168BF4979345C67DB13F0C5FE9888EB731B0A06A8D5D1475F60C11332FBE633540E50C86671A26FD83CD870BB68F7A9> |-/f <1C60D8A8C9B854D0E1194BB75B674577C40C65C9DA80CF489EB158487251DB3D0D4CE62FE4588AAD1DAC98153B63C50CB7167E75DAE3557295D61A22E58ED82D181423A4BEB279AE837EE035530BF30960CB0B47037A994CC5880A6489EE> |-/g <1C60D8A8C9B7EF322B9E33783F120324D4831FD54687FCF0A3239094C0D4E3AAB20B4037430546FA4664C0C2EC6F9AF25AB8C7F18077B54094AD8EBB679EA5C6D7AFD732ED61A8DCEA904021433763160B264DB52A614A19F2765FBBC5798DAD5FE93A7CA6F9AD05E8ADF7528A45B919107B69D8844684194FE7F92E944890ACD166034B8B64BAE18E8E65CE4B5414E043D7BFC474CE1F5EA604A5C9DC3A7BA914202197CB4B05F919B47B1EB5B22C18D76DC248F3694EA79BFDDDCC0F068EB1529F2B8631C6> |-/h <1C60D8A8C9B7EF3217E3BC2FA8B1DA462FB5094608F57CE7723860E586F183A8CEF3068A0C010301729338C182E1C8129546DF528AA710511DF02DFE7ACA98F8F6531E02F7C3E3DBAF3320F3D602AE65A66CA41E6984> |-/i <1C60D8A8C9B88C084EE8A68C7FA2A58C433876A9B19799899FEF7A13> |-/l <1C60D8A8C9B88C084B857C39B4185359B4FDA8> |-/n <1C60D8A8C9B7EF3217E3BC2FA8BE5FFDDE7BA6B2BB97B82CAF2D20211744A627BCE3171C7124085EFB87C01551538DC74ADD76A4A469E736F37382A8E68FCF64FCF52E65C49BB3C47B4136748A05BC6A02EABE080CF030B375C809CD67343FEE2448D6> |-/o <1C60D8A8C9B7EF322BB7315D499F0FAA57DF741D86CA9D8DB7E5AD83A05FD148F53EC24E4E6BF5C292C0FC171599978D99E35AB7CAFB8CB65593939725D520CE4A30CDA834D29EB92A082721C79AE18875772ECDD437AD2148D76D23F045CDA1E61619294E456095F14AB8D580008870DAABB6481A0C5B1656CACCDE79F2741F9BB15B> |-/p <1C60D8A8C9B7EF322BA467487181334E955BE246DF5D0EF3A11E2BDC8B674F6546E88A741A6A22FD8101960B985F64CBBE95E02BBF21B77F9A8334BFBA9533492E7CA0F0DECFBF12D8467325B4174F987BBF353C73C5D70057F40D42361649961064C7B7F613D284310CB0B59908DA85F34298558C6B0DF453AED21873A379BC9BBE582E1040BDEC2230FBB52642> |-/r <1C60D8A8C9B81F2C037408F8BF0E381AE4C9649BA754678B3C9CB9B6F5985C2C3DD85532C988309B457CF86E09A953B63981C0C686B55A9B6F57C7F684C3CFA5497AE68C179CE338521D1494441800> |-/s <1C60D8A8C9B7A73DE557A2AA450BB57EE39D611FDE79056DA153DEDE8E0D2C9D756143DA5E614060C362E0813E35369DA2F002330267D2CFA81D3D9AA172C91A8B8E19BB92CE3CFBA62200E9E8175CCCB3A5FA559ECF71DD7F2B47B117C69AC3637EDAE62020C9DAFDDB718C27C76EF62794CF8B187D103B05AC07655F04A6D9D5181CB287F032D98B2512B2A9B281D13745308AC05B350DA95BA0BE14F12630B5B2A718215DC0DE5A544FA267BEF8FD5CF5292808F195D31A5EEC3ADC63> |-/t <1C60D8A8C9B854D0DE8EB299D76AFE3A3E7733E2D967660702D2EB06537F4BAA1F2129056DC9771C91484E3F22B637802F61054AB3D0E9902E08C4E6B9ADDC0E2F51D38CAD652B2A777D9304919B1B524DD7CC56553E03BE971752FD0161CF> |-/u <1C60D8A8C9B7EF3216DE239CB7942A5DFDA331E51AE98893153168B8E02CBA8B703AF815B3549788123453BB74B7299D82AED651A97B215A966DFD3A6E1F3128BBB9E96D3A241ED635729E83FA4EE02FD12FE6F7CB1ABC83B0> |-/w <1C60D8A8C9B6079F005DC3C75B1A77147C8375CCDFD0A24C766DB69E35DE36706983CA4785D8107CB89C2D97982F5548429FD5F71FC913D3> |-/minus <1C60D8A8C9B7F374C6243061E982D378A14DF0A305> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/MCBLKO+Helvetica /Helvetica findfont ct_VMDictPut/MCBLKO+Helvetica*1 [32{/.notdef}rp /space 64{/.notdef}rp /a /b /.notdef /d /e /f /g /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u /.notdef /w 7{/.notdef}rp /minus 128{/.notdef}rp]MCBLKO+Helvetica nfMCBLKO+Helvetica*1 [10 -1.22465e-15 -1.22465e-15 -10 0 0 ]msf61.8667 170.279 mo(signal du)sh101.896 170.279 mo(r)sh105.126 170.279 mo(ation)shMCBLKO+Helvetica*1 [-6.12324e-16 -10 -10 6.12323e-16 0 0 ]msf8.58594 112.959 mo(pa)[-5.56152 0 ]ysh8.58594 101.836 mo(r)sh8.58594 98.1157 mo(tial fitness)[-2.77832 -2.22168 -5.56152 -2.22168 -2.77832 -2.77832 -2.22168 -2.77832 -5.56152 -5.56152 -5 0 ]yshMCBLKO+Helvetica*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf88.377 92.1299 mo(l)sh90.1543 92.1299 mo(o)sh94.4834 92.1299 mo(w\177noise adapted)sh88.377 104.04 mo(high\177noise adapted)sh88.377 115.95 mo(f)sh90.3677 115.95 mo(alse signal dist)sh142.84 115.95 mo(r)sh145.616 115.95 mo(i)sh147.394 115.95 mo(b)sh151.683 115.95 mo(ution)sh88.377 127.87 mo(t)sh90.5996 127.87 mo(r)sh93.3755 127.87 mo(ue signal dist)sh140.071 127.87 mo(r)sh142.847 127.87 mo(i)sh144.625 127.87 mo(b)sh148.914 127.87 mo(ution)sh84.8071 116.66 mo
77.6567 116.66 li
77.6567 109.51 li
84.8071 109.51 li
84.8071 116.66 li
.136477 .104463 .109041 3.0518e-05 cmyk
f
77.6567 116.66 mo
77.6567 117.035 li
84.8071 117.035 li
84.9059 117.035 85.0025 116.995 85.0723 116.925 cv
85.1421 116.855 85.1821 116.759 85.1821 116.66 cv
85.1821 109.51 li
85.1821 109.411 85.1421 109.315 85.0723 109.245 cv
85.0025 109.175 84.9059 109.135 84.8071 109.135 cv
77.6567 109.135 li
77.558 109.135 77.4614 109.175 77.3916 109.245 cv
77.3217 109.315 77.2817 109.411 77.2817 109.51 cv
77.2817 116.66 li
77.2817 116.759 77.3217 116.855 77.3916 116.925 cv
77.4614 116.995 77.558 117.035 77.6567 117.035 cv
77.6567 116.66 li
78.0317 116.66 li
78.0317 109.885 li
84.4321 109.885 li
84.4321 116.285 li
77.6567 116.285 li
77.6567 116.66 li
78.0317 116.66 li
77.6567 116.66 li
cp
.653773 .579889 .56878 .366613 cmyk
f
84.8071 128.57 mo
77.6567 128.57 li
77.6567 121.42 li
84.8071 121.42 li
84.8071 128.57 li
.310094 .245731 .251011 3.0518e-05 cmyk
f
77.6567 128.57 mo
77.6567 128.945 li
84.8071 128.945 li
84.9059 128.945 85.0025 128.905 85.0723 128.835 cv
85.1421 128.766 85.1821 128.669 85.1821 128.57 cv
85.1821 121.42 li
85.1821 121.322 85.1421 121.225 85.0723 121.155 cv
85.0025 121.085 84.9059 121.045 84.8071 121.045 cv
77.6567 121.045 li
77.558 121.045 77.4614 121.085 77.3916 121.155 cv
77.3217 121.225 77.2817 121.322 77.2817 121.42 cv
77.2817 128.57 li
77.2817 128.669 77.3217 128.766 77.3916 128.835 cv
77.4614 128.905 77.558 128.945 77.6567 128.945 cv
77.6567 128.57 li
78.0317 128.57 li
78.0317 121.795 li
84.4321 121.795 li
84.4321 128.195 li
77.6567 128.195 li
77.6567 128.57 li
78.0317 128.57 li
77.6567 128.57 li
cp
.710841 .650507 .640253 .693324 cmyk
f
77.6567 90.0103 mo
84.8071 90.0103 li
85.2213 90.0103 85.5571 89.6745 85.5571 89.2603 cv
85.5571 88.846 85.2213 88.5103 84.8071 88.5103 cv
77.6567 88.5103 li
77.2425 88.5103 76.9067 88.846 76.9067 89.2603 cv
76.9067 89.6745 77.2425 90.0103 77.6567 90.0103 cv
.146181 .770871 .77734 .0289006 cmyk
f
77.6567 101.92 mo
84.8071 101.92 li
85.2213 101.92 85.5571 101.585 85.5571 101.17 cv
85.5571 100.756 85.2213 100.42 84.8071 100.42 cv
77.6567 100.42 li
77.2425 100.42 76.9067 100.756 76.9067 101.17 cv
76.9067 101.585 77.2425 101.92 77.6567 101.92 cv
.653773 .579889 .56878 .366613 cmyk
f
34.7769 68.0903 mo
35.0669 68.0903 li
35.3667 68.0903 li
35.4692 68.0903 li
35.5203 68.1193 li
35.7274 68.312 li
35.9952 68.5973 li
36.2682 68.9251 li
36.5465 69.2966 li
36.8279 69.709 li
37.1063 70.1598 li
37.4003 70.6501 li
37.6941 71.1598 li
37.9886 71.6893 li
38.2818 72.2371 li
38.5684 72.8002 li
38.5708 72.8048 li
38.8711 73.3848 li
38.8708 73.3844 li
39.1706 73.9645 li
39.1683 73.9599 li
39.4681 74.5498 li
39.4659 74.5454 li
39.7559 75.1254 li
39.7631 75.1395 li
40.0634 75.7098 li
40.0658 75.7143 li
40.3656 76.2744 li
40.3684 76.2795 li
40.6682 76.8293 li
40.6742 76.84 li
40.9745 77.3698 li
40.9782 77.3763 li
41.2682 77.8763 li
41.2809 77.8973 li
41.5807 78.3773 li
41.5971 78.4025 li
41.8974 78.8429 li
41.9118 78.8633 li
42.2117 79.273 li
42.2266 79.2927 li
42.5166 79.6628 li
42.5518 79.7045 li
42.8516 80.0345 li
42.8955 80.079 li
43.1958 80.3588 li
43.2505 80.4051 li
43.5503 80.6351 li
43.6375 80.6928 li
43.9378 80.8627 li
44.0197 80.9027 li
44.3093 81.0228 li
44.4728 81.0698 li
44.7731 81.1201 li
44.9469 81.1287 li
45.2467 81.1087 li
45.39 81.085 li
45.6903 81.0049 li
45.8596 80.9368 li
46.1497 80.7767 li
46.2555 80.7059 li
46.5553 80.4661 li
46.6421 80.3846 li
46.9419 80.0546 li
46.9919 79.9933 li
47.2922 79.5832 li
47.3302 79.5258 li
47.63 79.0258 li
47.6598 78.9711 li
47.9499 78.3812 li
47.9663 78.3455 li
48.2661 77.6453 li
48.2777 77.6166 li
48.578 76.8265 li
48.5885 76.7971 li
48.8883 75.8972 li
48.8982 75.8653 li
49.1882 74.8453 li
49.1916 74.8328 li
49.4919 73.7029 li
49.4961 73.6865 li
49.7959 72.4462 li
49.7995 72.4304 li
50.0993 71.0608 li
50.1021 71.0476 li
50.4024 69.5476 li
49.667 69.4004 li
49.667 70.1504 li
49.957 70.1504 li
49.9827 70.1499 li
50.2825 70.1397 li
50.2812 70.1397 li
50.5815 70.13 li
50.5828 70.1299 li
50.8826 70.1197 li
50.9086 70.1183 li
51.185 70.0993 li
51.4712 70.0899 li
51.4967 70.0887 li
51.797 70.0686 li
52.0968 70.0486 li
52.3966 70.0286 li
52.3983 70.0285 li
52.6884 70.0085 li
52.6866 70.0086 li
52.9869 69.9886 li
53.0124 69.9864 li
53.2989 69.9575 li
53.5858 69.9388 li
53.6151 69.9364 li
53.9046 69.9061 li
53.9007 69.9065 li
54.201 69.8767 li
54.2023 69.8766 li
54.5021 69.8463 li
54.5008 69.8464 li
54.8011 69.8166 li
54.8263 69.8137 li
55.1153 69.7751 li
55.3948 69.7459 li
55.4162 69.7434 li
55.716 69.7034 li
55.7146 69.7035 li
56.0037 69.6655 li
56.2921 69.6363 li
56.3194 69.6331 li
56.6094 69.593 li
56.6295 69.59 li
56.9184 69.5421 li
57.2062 69.5036 li
57.506 69.4636 li
57.5294 69.4601 li
57.8297 69.4103 li
57.8352 69.4094 li
58.1252 69.3591 li
58.12 69.36 li
58.4081 69.3121 li
58.696 69.2737 li
58.7438 69.2657 li
59.032 69.208 li
59.3197 69.1603 li
59.3249 69.1594 li
59.615 69.1091 li
59.6339 69.1056 li
59.9222 69.0479 li
60.2098 69.0001 li
60.2342 68.9956 li
60.534 68.9356 li
60.5388 68.9346 li
60.8142 68.8776 li
61.0998 68.8302 li
61.1244 68.8257 li
61.4242 68.7657 li
61.4481 68.7605 li
61.7351 68.6932 li
62.0229 68.6361 li
62.029 68.6348 li
62.3191 68.5747 li
62.3382 68.5705 li
62.6261 68.503 li
62.9142 68.4454 li
62.9372 68.4404 li
63.237 68.3706 li
63.2424 68.3693 li
63.5185 68.3028 li
63.8041 68.2456 li
63.8266 68.2408 li
64.1269 68.1709 li
64.1283 68.1706 li
64.4281 68.1003 li
64.4501 68.0948 li
64.7419 68.017 li
65.0225 67.9493 li
65.0165 67.9507 li
65.3168 67.8809 li
65.3405 67.875 li
65.6289 67.7979 li
65.9181 67.7302 li
65.9455 67.7233 li
66.2356 67.6437 li
66.2306 67.645 li
66.5193 67.5679 li
66.808 67.5002 li
66.8289 67.495 li
67.1292 67.4154 li
67.1305 67.415 li
67.4304 67.3349 li
67.4364 67.3333 li
67.7265 67.2532 li
67.7421 67.2487 li
68.031 67.1621 li
68.3202 67.085 li
68.3205 67.0849 li
68.6203 67.0049 li
68.6487 66.9967 li
68.9244 66.9113 li
69.2103 66.835 li
69.2335 66.8285 li
69.5215 66.7417 li
69.8091 66.6653 li
69.8327 66.6586 li
70.133 66.5683 li
70.1389 66.5665 li
70.4289 66.4767 li
70.4223 66.4787 li
70.7221 66.3888 li
70.7229 66.3886 li
71.0232 66.2983 li
71.0224 66.2985 li
71.3222 66.2087 li
71.3288 66.2066 li
71.6189 66.1168 li
71.6133 66.1185 li
71.9131 66.0282 li
71.9339 66.0216 li
72.2233 65.9251 li
72.5122 65.8385 li
72.812 65.7487 li
72.8414 65.7392 li
73.1165 65.6443 li
73.402 65.5589 li
73.4245 65.5517 li
73.7243 65.4516 li
73.724 65.4517 li
74.0166 65.3542 li
74.2989 65.2666 li
74.3138 65.2618 li
74.6141 65.1617 li
74.6145 65.1616 li
74.9143 65.0615 li
74.9139 65.0616 li
75.2142 64.9615 li
75.2135 64.9617 li
75.5133 64.8621 li
75.5215 64.8594 li
75.8076 64.7606 li
76.1042 64.6616 li
76.1244 64.6545 li
76.4145 64.5484 li
76.7043 64.4516 li
76.7115 64.4492 li
77.0015 64.3491 li
77.0145 64.3445 li
77.3046 64.2383 li
77.5945 64.1416 li
77.615 64.1344 li
77.9042 64.0284 li
78.1942 63.9317 li
78.2227 63.9216 li
78.5127 63.8117 li
78.5061 63.8142 li
78.7948 63.708 li
79.0832 63.6121 li
79.1054 63.6044 li
79.4057 63.494 li
79.405 63.4942 li
79.7048 63.3844 li
79.7124 63.3815 li
80.0025 63.2717 li
79.9955 63.2743 li
80.2958 63.1639 li
80.2952 63.1642 li
80.595 63.0543 li
80.8948 62.9444 li
80.9024 62.9416 li
81.1924 62.8317 li
81.1854 62.8343 li
81.4857 62.724 li
81.505 62.7166 li
81.7953 62.6008 li
82.0857 62.4939 li
82.0843 62.4944 li
82.3846 62.3845 li
82.4139 62.3731 li
82.6896 62.2589 li
82.9748 62.1544 li
82.9745 62.1545 li
83.2748 62.0447 li
83.296 62.0365 li
83.5958 61.9164 li
83.6039 61.9131 li
83.8796 61.7989 li
84.1648 61.6944 li
84.1853 61.6866 li
84.4753 61.5706 li
84.7649 61.4645 li
84.7854 61.4566 li
85.0857 61.3365 li
85.0945 61.3329 li
85.3787 61.215 li
85.6745 61.0971 li
85.6759 61.0966 li
85.9757 60.9765 li
85.9753 60.9766 li
86.2756 60.8565 li
86.284 60.8531 li
86.5694 60.7349 li
86.8649 60.617 li
86.8658 60.6166 li
87.1656 60.4965 li
87.1653 60.4966 li
87.4656 60.3765 li
87.4659 60.3764 li
87.7657 60.2563 li
87.7728 60.2534 li
88.0591 60.1353 li
88.3556 60.0165 li
88.3552 60.0167 li
88.6555 59.8965 li
88.6751 59.8884 li
88.9694 59.7609 li
89.2493 59.645 li
89.5456 59.5264 li
89.5652 59.5183 li
89.8557 59.3924 li
90.1456 59.2763 li
90.1644 59.2684 li
90.4594 59.1409 li
90.744 59.023 li
90.7552 59.0183 li
91.0454 58.8925 li
91.3357 58.7764 li
91.3553 58.7683 li
91.6496 58.6408 li
91.9339 58.523 li
91.9451 58.5183 li
92.2449 58.3884 li
92.2445 58.3886 li
92.5354 58.2627 li
92.8258 58.1464 li
92.845 58.1384 li
93.1448 58.0085 li
93.1532 58.0048 li
93.4391 57.8768 li
93.7357 57.748 li
93.7352 57.7482 li
94.0252 57.6226 li
94.3157 57.5064 li
94.3441 57.4944 li
94.6292 57.3664 li
94.9247 57.2387 li
94.9251 57.2385 li
95.2249 57.1086 li
95.2254 57.1084 li
95.5257 56.978 li
95.5252 56.9782 li
95.825 56.8483 li
95.8334 56.8447 li
96.1191 56.7167 li
96.4148 56.5886 li
96.4339 56.58 li
96.7246 56.4443 li
97.0149 56.3186 li
97.0243 56.3144 li
97.3095 56.1862 li
97.6049 56.0585 li
97.6053 56.0583 li
97.9051 55.9284 li
97.9245 55.9197 li
98.2143 55.7842 li
98.5048 55.6586 li
98.5136 55.6547 li
98.7997 55.5266 li
99.096 55.3977 li
99.1135 55.3898 li
99.404 55.2545 li
99.6947 55.1288 li
99.7146 55.1199 li
100.009 54.9824 li
100.289 54.8568 li
100.586 54.728 li
100.604 54.7199 li
100.895 54.5843 li
101.186 54.4578 li
101.212 54.4458 li
101.489 54.3125 li
101.776 54.188 li
101.794 54.1799 li
102.094 54.0402 li
102.094 54.0398 li
102.384 53.9043 li
102.675 53.7787 li
102.703 53.7656 li
102.979 53.6323 li
103.265 53.5085 li
103.284 53.4999 li
103.584 53.3598 li
103.585 53.3596 li
103.884 53.2195 li
103.892 53.2158 li
104.169 53.0824 li
104.456 52.9578 li
104.473 52.9501 li
104.773 52.8104 li
104.775 52.8098 li
105.074 52.6697 li
105.074 52.6699 li
105.369 52.5321 li
105.654 52.4045 li
105.664 52.3998 li
105.964 52.2597 li
105.964 52.2599 li
106.263 52.1203 li
106.264 52.1201 li
106.564 51.9799 li
106.573 51.9756 li
106.859 51.8374 li
107.154 51.6995 li
107.154 51.6999 li
107.453 51.5602 li
107.454 51.56 li
107.754 51.4199 li
107.755 51.4197 li
108.054 51.2795 li
108.063 51.2754 li
108.348 51.1376 li
108.643 51.0002 li
108.644 50.9999 li
108.944 50.8598 li
108.945 50.8596 li
109.244 50.7195 li
109.252 50.7158 li
109.538 50.578 li
109.834 50.4399 li
109.835 50.4397 li
110.134 50.2996 li
110.434 50.1594 li
110.433 50.16 li
110.733 50.0204 li
110.743 50.0156 li
111.029 49.8774 li
111.324 49.7395 li
111.323 49.7401 li
111.623 49.6005 li
111.643 49.5908 li
111.938 49.4432 li
112.218 49.3081 li
112.514 49.1697 li
112.514 49.1699 li
112.814 49.0297 li
112.815 49.0295 li
113.114 48.8894 li
113.132 48.8808 li
113.427 48.7334 li
113.709 48.5978 li
114.004 48.4599 li
114.005 48.4597 li
114.304 48.3196 li
114.322 48.3112 li
114.618 48.1632 li
114.899 48.0273 li
115.194 47.8896 li
115.212 47.8808 li
115.503 47.7356 li
115.793 47.6005 li
115.795 47.5998 li
116.094 47.4597 li
116.121 47.4465 li
116.398 47.3034 li
116.684 47.1697 li
116.702 47.1613 li
116.993 47.0157 li
117.284 46.8796 li
117.293 46.8755 li
117.583 46.7354 li
117.592 46.7311 li
117.884 46.5854 li
118.175 46.4495 li
118.192 46.4408 li
118.483 46.2955 li
118.774 46.1596 li
118.801 46.1463 li
119.078 46.0034 li
119.364 45.8703 li
119.383 45.8608 li
119.673 45.7155 li
119.963 45.5804 li
119.983 45.5708 li
120.278 45.4232 li
120.562 45.2861 li
120.573 45.281 li
120.873 45.1306 li
120.873 45.1308 li
121.163 44.9855 li
121.453 44.8503 li
121.482 44.8362 li
121.758 44.6933 li
122.043 44.5604 li
122.063 44.5508 li
122.354 44.4052 li
122.643 44.2702 li
122.662 44.2614 li
122.962 44.1115 li
122.972 44.1062 li
123.248 43.9632 li
123.533 43.8303 li
123.553 43.821 li
123.853 43.6706 li
123.852 43.6708 li
124.148 43.5233 li
124.433 43.3853 li
124.442 43.3808 li
124.742 43.2309 li
124.742 43.2311 li
125.033 43.0855 li
125.324 42.9495 li
125.342 42.9411 li
125.642 42.7912 li
125.652 42.7862 li
125.937 42.6387 li
126.224 42.4955 li
126.514 42.3596 li
126.532 42.3512 li
126.832 42.2013 li
126.841 42.1965 li
127.127 42.0488 li
127.413 41.9053 li
127.703 41.7702 li
127.722 41.7614 li
128.022 41.6115 li
128.023 41.6108 li
128.323 41.4604 li
128.331 41.4563 li
128.617 41.3088 li
128.903 41.1655 li
129.194 41.0297 li
129.212 41.0209 li
129.512 40.871 li
129.521 40.8665 li
129.807 40.7188 li
130.102 40.5714 li
130.103 40.5708 li
130.393 40.4253 li
130.683 40.2902 li
130.703 40.281 li
131.003 40.1306 li
131.011 40.1262 li
131.296 39.9789 li
131.592 39.831 li
131.592 39.8312 li
131.892 39.6813 li
131.893 39.6811 li
132.192 39.5312 li
132.202 39.5262 li
132.487 39.3783 li
132.773 39.2356 li
133.063 39.1005 li
133.083 39.0908 li
133.383 38.9404 li
133.382 38.9408 li
133.682 38.7909 li
133.691 38.7864 li
133.976 38.6389 li
134.272 38.4913 li
134.272 38.4911 li
134.572 38.3412 li
134.573 38.341 li
134.873 38.1906 li
134.882 38.1861 li
135.166 38.0388 li
135.462 37.8913 li
135.462 37.891 li
135.762 37.7411 li
135.762 37.7413 li
136.062 37.5914 li
136.063 37.5908 li
136.363 37.4404 li
136.371 37.4363 li
136.657 37.2887 li
136.952 37.141 li
136.952 37.1413 li
137.252 36.9913 li
137.252 36.9911 li
137.552 36.8412 li
137.562 36.8362 li
137.847 36.6884 li
138.142 36.5412 li
138.143 36.5409 li
138.442 36.391 li
138.742 36.2411 li
138.742 36.2413 li
139.042 36.0914 li
139.052 36.0862 li
139.337 35.9383 li
139.632 35.7909 li
139.932 35.641 li
139.932 35.6413 li
140.232 35.4913 li
140.241 35.4866 li
140.528 35.3386 li
140.823 35.1904 li
140.822 35.1911 li
141.122 35.0412 li
141.123 35.0409 li
141.422 34.891 li
141.722 34.7411 li
141.731 34.7366 li
142.017 34.5889 li
142.313 34.4406 li
142.312 34.4408 li
142.612 34.2909 li
142.912 34.141 li
142.93 34.132 li
143.225 33.9742 li
143.507 33.8286 li
143.802 33.6811 li
143.802 33.6813 li
144.102 33.5314 li
144.103 33.5307 li
144.403 33.3803 li
144.411 33.3762 li
144.696 33.2289 li
144.992 33.081 li
144.992 33.0812 li
145.292 32.9313 li
145.292 32.9311 li
145.592 32.7812 li
145.593 32.781 li
145.893 32.6306 li
145.919 32.6167 li
146.195 32.4644 li
146.482 32.3214 li
146.483 32.3208 li
146.783 32.1704 li
146.782 32.171 li
147.082 32.0211 li
147.091 32.0164 li
147.377 31.8688 li
147.672 31.7211 li
147.972 31.5712 li
147.99 31.5622 li
148.281 31.4067 li
148.572 31.2612 li
148.581 31.2566 li
148.867 31.1086 li
149.163 30.9604 li
149.162 30.9611 li
149.462 30.8112 li
149.462 30.811 li
149.762 30.6611 li
149.789 30.6468 li
150.066 30.4941 li
150.352 30.3512 li
150.352 30.351 li
150.652 30.2011 li
150.952 30.0512 li
150.953 30.051 li
151.253 29.9006 li
151.261 29.8963 li
151.551 29.7464 li
151.56 29.7421 li
151.851 29.5867 li
152.143 29.4406 li
152.143 29.4408 li
152.442 29.2909 li
152.451 29.2864 li
152.737 29.1388 li
153.032 28.9911 li
153.05 28.9821 li
153.341 28.8266 li
153.632 28.6811 li
153.932 28.5312 li
153.942 28.5262 li
154.232 28.3758 li
154.6 28.1851 154.743 27.7325 154.553 27.3647 cv
154.362 26.997 153.909 26.8535 153.541 27.0441 cv
153.256 27.192 li
152.961 27.3394 li
152.662 27.4893 li
152.644 27.4984 li
152.352 27.654 li
152.062 27.7994 li
152.053 27.8039 li
151.767 27.9513 li
151.472 28.0992 li
151.471 28.0994 li
151.171 28.2498 li
151.154 28.2584 li
150.859 28.4159 li
150.577 28.5617 li
150.281 28.7098 li
150.281 28.7095 li
149.981 28.8595 li
149.682 29.0094 li
149.682 29.0091 li
149.382 29.159 li
149.354 29.1735 li
149.078 29.3262 li
148.792 29.4693 li
148.792 29.4691 li
148.492 29.619 li
148.49 29.6197 li
148.191 29.77 li
148.182 29.7742 li
147.897 29.9219 li
147.602 30.0694 li
147.584 30.0785 li
147.292 30.234 li
147.001 30.3795 li
146.702 30.5294 li
146.693 30.5339 li
146.407 30.6814 li
146.112 30.829 li
146.11 30.8296 li
145.811 30.98 li
145.812 30.9794 li
145.512 31.1293 li
145.485 31.1435 li
145.208 31.2959 li
144.921 31.4397 li
144.921 31.4395 li
144.622 31.5894 li
144.622 31.5892 li
144.322 31.7391 li
144.321 31.7393 li
144.022 31.8892 li
144.013 31.8938 li
143.727 32.0415 li
143.431 32.19 li
143.432 32.1893 li
143.132 32.3392 li
143.131 32.3394 li
142.832 32.4893 li
142.823 32.4939 li
142.533 32.6438 li
142.524 32.6483 li
142.232 32.8038 li
141.941 32.9493 li
141.642 33.0992 li
141.641 33.0994 li
141.341 33.2498 li
141.332 33.2541 li
141.047 33.4015 li
140.751 33.5494 li
140.452 33.6993 li
140.452 33.6991 li
140.152 33.849 li
140.151 33.8496 li
139.851 34 li
139.843 34.0041 li
139.557 34.1518 li
139.262 34.2992 li
139.261 34.2994 li
138.961 34.4493 li
138.662 34.5992 li
138.652 34.6042 li
138.367 34.7519 li
138.072 34.8993 li
138.071 34.8995 li
137.772 35.0494 li
137.472 35.1993 li
137.472 35.1991 li
137.172 35.349 li
137.162 35.3542 li
136.876 35.5023 li
136.582 35.6495 li
136.582 35.6493 li
136.282 35.7992 li
136.281 35.7994 li
135.981 35.9493 li
135.973 35.9538 li
135.686 36.1018 li
135.391 36.25 li
135.392 36.2494 li
135.092 36.3993 li
135.091 36.3995 li
134.792 36.5494 li
134.792 36.5492 li
134.492 36.6991 li
134.482 36.7041 li
134.197 36.8516 li
133.901 36.9998 li
133.901 36.9996 li
133.602 37.1495 li
133.602 37.1493 li
133.302 37.2992 li
133.292 37.3039 li
133.007 37.4515 li
132.711 37.5992 li
132.711 37.5996 li
132.421 37.745 li
132.131 37.88 li
132.111 37.8892 li
131.812 38.0391 li
131.802 38.0441 li
131.517 38.1919 li
131.222 38.3394 li
131.222 38.3392 li
130.922 38.4891 li
130.921 38.4893 li
130.622 38.6392 li
130.613 38.6438 li
130.327 38.7916 li
130.04 38.9351 li
129.75 39.0701 li
129.731 39.0796 li
129.431 39.23 li
129.432 39.2294 li
129.132 39.3793 li
129.122 39.384 li
128.837 39.5316 li
128.55 39.6748 li
128.259 39.8106 li
128.241 39.8194 li
127.941 39.9693 li
127.932 39.9739 li
127.647 40.1216 li
127.351 40.27 li
127.352 40.2694 li
127.061 40.4146 li
126.77 40.5501 li
126.751 40.5596 li
126.451 40.71 li
126.443 40.7141 li
126.157 40.8618 li
125.871 41.0047 li
125.579 41.1409 li
125.562 41.1493 li
125.262 41.2992 li
125.252 41.3042 li
124.967 41.4516 li
124.68 41.5947 li
124.389 41.7307 li
124.372 41.7391 li
124.072 41.889 li
124.071 41.8892 li
123.776 42.0368 li
123.491 42.1748 li
123.481 42.1793 li
123.182 42.3292 li
123.181 42.3294 li
122.891 42.475 li
122.6 42.6102 li
122.572 42.6242 li
122.286 42.7722 li
122.001 42.9146 li
121.71 43.0501 li
121.691 43.0596 li
121.401 43.2049 li
121.11 43.34 li
121.082 43.3542 li
120.806 43.4973 li
120.52 43.6302 li
120.502 43.6392 li
120.202 43.7891 li
120.201 43.7894 li
119.906 43.9372 li
119.621 44.0742 li
119.61 44.0796 li
119.321 44.225 li
119.03 44.36 li
119.01 44.3697 li
118.72 44.5151 li
118.43 44.6502 li
118.403 44.6638 li
118.126 44.8067 li
117.84 44.9405 li
117.821 44.9493 li
117.53 45.0947 li
117.24 45.2307 li
117.222 45.2391 li
116.926 45.387 li
116.645 45.5229 li
116.349 45.6609 li
116.332 45.6693 li
116.04 45.8149 li
115.749 45.9509 li
115.723 45.9641 li
115.446 46.1072 li
115.159 46.241 li
115.161 46.2403 li
114.86 46.38 li
114.841 46.3892 li
114.551 46.5346 li
114.259 46.6705 li
114.25 46.675 li
113.96 46.8151 li
113.952 46.8192 li
113.661 46.9647 li
113.369 47.1008 li
113.37 47.1006 li
113.07 47.2408 li
113.061 47.2447 li
112.771 47.3843 li
112.761 47.3892 li
112.47 47.5347 li
112.179 47.6707 li
112.18 47.6705 li
111.88 47.8106 li
111.879 47.8108 li
111.579 47.9509 li
111.572 47.9546 li
111.282 48.0943 li
111.271 48.0996 li
110.981 48.2451 li
110.691 48.38 li
110.689 48.3806 li
110.389 48.5208 li
110.381 48.5249 li
110.096 48.6627 li
109.8 48.7999 li
109.799 48.8005 li
109.499 48.9407 li
109.2 49.0808 li
109.2 49.0806 li
108.9 49.2208 li
108.891 49.2246 li
108.605 49.3625 li
108.309 49.5007 li
108.31 49.5005 li
108.009 49.6407 li
108.01 49.6404 li
107.71 49.7801 li
107.701 49.7847 li
107.415 49.9228 li
107.119 50.0608 li
107.12 50.0606 li
106.82 50.2007 li
106.82 50.2005 li
106.52 50.3402 li
106.519 50.3406 li
106.22 50.4807 li
106.211 50.4848 li
105.925 50.6227 li
105.63 50.7608 li
105.63 50.7606 li
105.33 50.9002 li
105.33 50.9004 li
105.035 51.0382 li
104.75 51.1658 li
104.74 51.1705 li
104.44 51.3106 li
104.439 51.3108 li
104.139 51.4509 li
104.141 51.4503 li
103.849 51.586 li
103.558 51.7126 li
103.532 51.7246 li
103.245 51.8625 li
102.95 52.0007 li
102.95 52.0005 li
102.659 52.1362 li
102.369 52.262 li
102.341 52.2749 li
102.065 52.4082 li
101.779 52.5318 li
101.759 52.5408 li
101.459 52.6809 li
101.46 52.6805 li
101.169 52.8159 li
100.878 52.9424 li
100.851 52.9546 li
100.574 53.088 li
100.288 53.2126 li
100.27 53.2205 li
99.9795 53.356 li
99.6881 53.4824 li
99.6803 53.4859 li
99.3902 53.6158 li
99.3792 53.6209 li
99.0894 53.7563 li
98.7989 53.8819 li
98.78 53.8904 li
98.489 54.026 li
98.198 54.1525 li
98.1905 54.1558 li
97.9046 54.2839 li
97.609 54.4117 li
97.5891 54.4207 li
97.2992 54.5562 li
97.009 54.6819 li
97.0094 54.6817 li
96.7091 54.8116 li
96.6993 54.8159 li
96.414 54.9442 li
96.1188 55.0721 li
96.0998 55.0806 li
95.809 55.2163 li
95.5187 55.3421 li
95.5104 55.3458 li
95.2251 55.4735 li
94.9289 55.6018 li
94.9284 55.6021 li
94.6281 55.7324 li
94.6286 55.7322 li
94.3288 55.8621 li
94.3292 55.8619 li
94.0289 55.9918 li
94.0197 55.9959 li
93.744 56.1195 li
93.4583 56.2338 li
93.4387 56.242 li
93.1389 56.3719 li
93.1383 56.3721 li
92.838 56.5025 li
92.8302 56.5059 li
92.5445 56.6339 li
92.2583 56.7579 li
91.9681 56.8741 li
91.9493 56.8819 li
91.649 57.0118 li
91.6486 57.012 li
91.3543 57.1395 li
91.07 57.2573 li
91.0588 57.262 li
90.7689 57.3876 li
90.4783 57.5038 li
90.4587 57.512 li
90.1644 57.6395 li
89.88 57.7573 li
89.8693 57.7618 li
89.5781 57.8877 li
89.288 58.004 li
89.2687 58.012 li
88.9789 58.1376 li
88.6882 58.2538 li
88.6798 58.2573 li
88.3898 58.3774 li
88.3786 58.3821 li
88.0884 58.5079 li
87.7981 58.624 li
87.7977 58.6241 li
87.4979 58.7442 li
87.4909 58.7471 li
87.2041 58.8654 li
86.9081 58.984 li
86.9085 58.9838 li
86.6082 59.1039 li
86.6078 59.1041 li
86.308 59.2242 li
86.309 59.2238 li
86.0091 59.3434 li
86.0001 59.3471 li
85.7146 59.4654 li
85.4182 59.5839 li
85.4178 59.5841 li
85.118 59.7042 li
85.1194 59.7036 li
84.8191 59.8233 li
84.8093 59.8273 li
84.5245 59.9454 li
84.2385 60.0598 li
83.949 60.1659 li
83.9285 60.1738 li
83.6382 60.2899 li
83.3489 60.3959 li
83.32 60.4072 li
83.0342 60.5255 li
82.7487 60.6399 li
82.4591 60.7458 li
82.4587 60.746 li
82.1589 60.8559 li
82.13 60.8671 li
81.8546 60.9812 li
81.569 61.0857 li
81.5676 61.0862 li
81.2678 61.1966 li
81.2489 61.2038 li
80.9587 61.3196 li
80.6681 61.4264 li
80.6611 61.429 li
80.3752 61.5373 li
80.0789 61.6459 li
79.7791 61.7558 li
79.7784 61.756 li
79.4781 61.8663 li
79.4711 61.8689 li
79.1847 61.9774 li
78.8889 62.0858 li
78.8883 62.0861 li
78.599 62.1924 li
78.3104 62.2883 li
78.2878 62.2962 li
77.988 62.4065 li
77.9814 62.409 li
77.7055 62.5135 li
77.4196 62.6088 li
77.3987 62.6161 li
77.1092 62.7222 li
76.8196 62.8189 li
76.7994 62.8259 li
76.5058 62.9334 li
76.2255 63.0301 li
75.9295 63.1289 li
75.9093 63.136 li
75.619 63.2422 li
75.3294 63.3389 li
75.3222 63.3413 li
75.0366 63.4399 li
74.7406 63.5383 li
74.7399 63.5385 li
74.4396 63.6386 li
74.4392 63.6387 li
74.1394 63.7388 li
74.1398 63.7387 li
73.8472 63.8362 li
73.5648 63.9238 li
73.5499 63.9286 li
73.2496 64.0287 li
73.2493 64.0288 li
72.9607 64.1252 li
72.6717 64.2116 li
72.642 64.2212 li
72.3666 64.3163 li
72.0816 64.4017 li
71.7818 64.4915 li
71.7599 64.4984 li
71.4699 64.5951 li
71.1806 64.6823 li
71.175 64.684 li
70.885 64.7738 li
70.8916 64.7718 li
70.5918 64.8616 li
70.5911 64.8619 li
70.2908 64.9522 li
70.2915 64.952 li
69.9917 65.0418 li
69.9851 65.0438 li
69.6951 65.1337 li
69.7009 65.1319 li
69.4122 65.2187 li
69.1245 65.2951 li
69.1005 65.3019 li
68.8123 65.3887 li
68.5235 65.4658 li
68.4949 65.474 li
68.2188 65.5595 li
67.9334 65.6357 li
67.9337 65.6357 li
67.6334 65.7158 li
67.6114 65.722 li
67.3194 65.8095 li
67.0372 65.8874 li
67.0433 65.8857 li
66.7435 65.9658 li
66.7449 65.9655 li
66.455 66.0423 li
66.1657 66.1101 li
66.1434 66.1157 li
65.8436 66.1958 li
65.8386 66.1971 li
65.5623 66.273 li
65.2758 66.3401 li
65.2532 66.3457 li
64.9652 66.4226 li
64.6768 66.4897 li
64.6709 66.4911 li
64.3813 66.5609 li
64.3639 66.5654 li
64.0745 66.6425 li
63.7858 66.7102 li
63.7872 66.7099 li
63.4979 66.7772 li
63.2096 66.8349 li
63.1814 66.8411 li
62.8914 66.911 li
62.8968 66.9097 li
62.6085 66.9768 li
62.3197 67.0346 li
62.2955 67.0398 li
62.0051 67.1079 li
61.7249 67.166 li
61.731 67.1647 li
61.4307 67.2243 li
61.4054 67.2298 li
61.1173 67.2973 li
60.8421 67.3525 li
60.554 67.4002 li
60.5247 67.4057 li
60.2346 67.4658 li
60.2394 67.4648 li
59.9517 67.5224 li
59.6642 67.5702 li
59.64 67.5746 li
59.3491 67.6328 li
59.0686 67.6814 li
59.0739 67.6805 li
58.7741 67.7304 li
58.7499 67.7348 li
58.4732 67.7901 li
58.1976 67.8269 li
58.174 67.8305 li
57.8742 67.8803 li
57.8689 67.8811 li
57.5789 67.9314 li
57.5843 67.9305 li
57.2956 67.9784 li
57.0076 68.0169 li
56.7078 68.0569 li
56.6844 68.0604 li
56.3941 68.1086 li
56.1278 68.1453 li
55.8416 68.1742 li
55.8191 68.1768 li
55.5188 68.2164 li
55.5174 68.2166 li
55.2282 68.2552 li
54.949 68.2843 li
54.9276 68.2869 li
54.6405 68.3252 li
54.3527 68.3538 li
54.3514 68.3539 li
54.0516 68.3842 li
54.0529 68.384 li
53.7526 68.4138 li
53.7487 68.4142 li
53.4737 68.443 li
53.1881 68.4615 li
53.1615 68.4638 li
52.8742 68.4928 li
52.5868 68.5119 li
52.5851 68.512 li
52.295 68.5321 li
52.2967 68.5319 li
51.9969 68.552 li
51.6971 68.572 li
51.4094 68.5911 li
51.1226 68.6005 li
51.0953 68.6019 li
50.8183 68.621 li
50.5315 68.6308 li
50.5327 68.6308 li
50.2325 68.6405 li
50.2312 68.6406 li
49.9443 68.6504 li
49.667 68.6504 li
49.3092 68.6504 49.0018 68.9024 48.9316 69.2532 cv
48.6327 70.7463 li
48.3359 72.1018 li
48.0401 73.3259 li
47.7436 74.4414 li
47.4599 75.4389 li
47.1703 76.3082 li
46.8811 77.0691 li
46.5951 77.7371 li
46.3275 78.2812 li
46.0615 78.7249 li
45.805 79.0752 li
45.5718 79.3319 li
45.3686 79.4945 li
45.215 79.5793 li
45.0741 79.6169 li
44.9344 79.6262 li
44.805 79.6045 li
44.6367 79.5347 li
44.4218 79.4131 li
44.192 79.2368 li
43.9409 79.0029 li
43.6804 78.7161 li
43.4148 78.3771 li
43.1297 77.9876 li
42.8449 77.5698 li
42.5596 77.113 li
42.2757 76.6237 li
42.2794 76.6302 li
41.9821 76.1055 li
41.6853 75.5613 li
41.6881 75.5665 li
41.3883 75.0064 li
41.3907 75.0109 li
41.094 74.4475 li
40.8075 73.8745 li
40.8053 73.8701 li
40.5055 73.2803 li
40.5032 73.2758 li
40.2034 72.6957 li
40.2032 72.6952 li
39.9029 72.1152 li
39.9052 72.1197 li
39.6152 71.5499 li
39.608 71.5362 li
39.3082 70.9761 li
39.3024 70.9656 li
39.0022 70.4256 li
38.9964 70.4154 li
38.6966 69.8954 li
38.6901 69.8843 li
38.3903 69.3843 li
38.3852 69.376 li
38.0952 68.9063 li
38.0765 68.8775 li
37.7762 68.4375 li
37.7571 68.4108 li
37.4573 68.0104 li
37.4332 67.9799 li
37.1334 67.62 li
37.1039 67.5867 li
36.8036 67.2669 li
36.7679 67.2313 li
36.4778 66.9613 li
36.3366 66.8578 li
36.0368 66.6878 li
35.9228 66.6232 35.798 66.5903 35.667 66.5903 cv
35.3667 66.5903 li
35.0669 66.5903 li
34.7769 66.5903 li
34.3626 66.5903 34.0269 66.9261 34.0269 67.3403 cv
34.0269 67.7545 34.3626 68.0903 34.7769 68.0903 cv
cp
.146181 .770871 .77734 .0289006 cmyk
f
34.7769 68.0903 mo
35.0669 68.0903 li
35.3667 68.0903 li
35.667 68.0903 li
35.9541 68.0903 li
36.2316 68.0997 li
36.2568 68.1001 li
36.5571 68.1001 li
36.8569 68.1001 li
37.1567 68.1001 li
37.457 68.1001 li
37.7341 68.1001 li
38.0212 68.1099 li
38.0469 68.1103 li
38.3467 68.1103 li
38.647 68.1103 li
38.9341 68.1103 li
39.2116 68.1197 li
39.2368 68.1201 li
39.5371 68.1201 li
39.8369 68.1201 li
40.1235 68.1201 li
40.4003 68.1299 li
40.4268 68.1304 li
40.7271 68.1304 li
41.0269 68.1304 li
41.3267 68.1304 li
41.6143 68.1304 li
41.8918 68.1397 li
41.917 68.1401 li
42.2168 68.1401 li
42.5171 68.1401 li
42.8169 68.1401 li
42.8169 67.3901 li
42.2208 67.8453 li
42.4962 68.2059 li
42.7825 68.6359 li
42.7828 68.6364 li
43.0831 69.0866 li
43.0966 69.1062 li
43.3964 69.5261 li
43.4019 69.5337 li
43.7022 69.9434 li
43.7164 69.9621 li
44.006 70.3322 li
44.0274 70.3584 li
44.3277 70.7085 li
44.3498 70.7331 li
44.6496 71.053 li
44.6953 71.0977 li
44.9956 71.3678 li
45.0187 71.3876 li
45.3087 71.6279 li
45.3713 71.6745 li
45.6711 71.8742 li
45.7693 71.9294 li
46.0691 72.0696 li
46.1495 72.1016 li
46.4498 72.2017 li
46.5877 72.2336 li
46.8875 72.2737 li
47.0385 72.2785 li
47.3285 72.2585 li
47.4704 72.2348 li
47.7702 72.1548 li
47.9116 72.1012 li
48.2119 71.9513 li
48.3209 71.8847 li
48.6207 71.6645 li
48.6975 71.5998 li
48.9875 71.3201 li
49.0492 71.2528 li
49.3495 70.8827 li
49.3913 70.8259 li
49.6911 70.3757 li
49.7196 70.3293 li
50.0194 69.7996 li
50.0396 69.7615 li
50.3398 69.1516 li
49.667 68.8203 li
49.5904 69.5664 li
49.8691 69.595 li
50.1576 69.6335 li
50.1816 69.6364 li
50.4819 69.6666 li
50.5072 69.6687 li
50.7936 69.6879 li
51.0704 69.7163 li
51.0728 69.7165 li
51.3726 69.7463 li
51.3969 69.7483 li
51.6972 69.7684 li
51.9969 69.7884 li
52.2967 69.8084 li
52.3202 69.8096 li
52.5985 69.8194 li
52.8871 69.8387 li
52.9126 69.8399 li
53.2124 69.8497 li
53.2112 69.8497 li
53.5115 69.8599 li
53.5118 69.8599 li
53.8014 69.8697 li
53.8267 69.8701 li
54.1141 69.8701 li
54.4011 69.8799 li
54.4268 69.8804 li
54.7271 69.8804 li
55.0269 69.8804 li
55.3169 69.8804 li
55.6167 69.8804 li
55.6423 69.8799 li
55.9297 69.8701 li
56.2168 69.8701 li
56.242 69.8697 li
56.5321 69.8599 li
56.5324 69.8599 li
56.8327 69.8497 li
56.8315 69.8497 li
57.1313 69.8399 li
57.1326 69.8399 li
57.4324 69.8296 li
57.4566 69.8284 li
57.7446 69.8092 li
58.0223 69.7999 li
58.047 69.7986 li
58.3468 69.7786 li
58.6466 69.7586 li
58.9469 69.7386 li
59.2467 69.7185 li
59.2734 69.7163 li
59.5499 69.6879 li
59.837 69.6687 li
59.8625 69.6666 li
60.1623 69.6363 li
60.1611 69.6365 li
60.4496 69.6078 li
60.7284 69.5885 li
60.7759 69.5837 li
61.0644 69.5453 li
61.3522 69.5162 li
61.351 69.5163 li
61.6508 69.4866 li
61.6758 69.4837 li
61.9649 69.4451 li
62.2436 69.4165 li
62.2663 69.4138 li
62.5661 69.3738 li
62.8662 69.3337 li
63.1662 69.2937 li
63.1695 69.2932 li
63.4595 69.2532 li
63.4562 69.2536 li
63.756 69.2136 li
63.7794 69.2101 li
64.0679 69.1623 li
64.3561 69.1238 li
64.3807 69.1201 li
64.681 69.0698 li
64.6843 69.0692 li
64.9599 69.0218 li
65.2461 68.9837 li
65.2699 68.9801 li
65.5697 68.9303 li
65.5939 68.9259 li
65.885 68.8676 li
66.1652 68.819 li
66.16 68.8199 li
66.4598 68.7701 li
66.461 68.7699 li
66.7608 68.7196 li
66.7827 68.7156 li
67.0829 68.6561 li
67.0843 68.6558 li
67.3744 68.5977 li
67.655 68.549 li
67.6742 68.5454 li
67.974 68.4854 li
67.9726 68.4857 li
68.2729 68.4261 li
68.2743 68.4258 li
68.5741 68.3658 li
68.6035 68.3593 li
68.8787 68.2925 li
69.1642 68.2354 li
69.1633 68.2356 li
69.4631 68.176 li
69.4881 68.1706 li
69.7756 68.1032 li
70.0641 68.0455 li
70.0925 68.0392 li
70.3826 67.9694 li
70.3772 67.9707 li
70.677 67.9009 li
70.6778 67.9007 li
70.9663 67.8331 li
71.2542 67.7754 li
71.3065 67.763 li
71.582 67.6869 li
71.8669 67.6206 li
72.1669 67.5508 li
72.1683 67.5505 li
72.4681 67.4802 li
72.4893 67.4749 li
72.7814 67.3973 li
73.0634 67.329 li
73.08 67.3248 li
73.3688 67.2477 li
73.6569 67.1806 li
73.6801 67.1749 li
73.9804 67.0948 li
73.987 67.093 li
74.2766 67.0129 li
74.2699 67.0147 li
74.5702 66.9346 li
74.5694 66.9348 li
74.8692 66.8553 li
74.87 66.855 li
75.1703 66.775 li
75.1706 66.7749 li
75.4704 66.6948 li
75.4765 66.6932 li
75.7665 66.6131 li
75.7604 66.6147 li
76.0602 66.5347 li
76.3602 66.4547 li
76.3823 66.4484 li
76.6743 66.3609 li
76.9564 66.283 li
76.9718 66.2786 li
77.2721 66.1887 li
77.2724 66.1886 li
77.5615 66.102 li
77.8503 66.0249 li
77.8728 66.0185 li
78.1731 65.9282 li
78.1789 65.9264 li
78.469 65.8365 li
78.4624 65.8385 li
78.7622 65.7487 li
79.062 65.6589 li
79.0627 65.6586 li
79.363 65.5683 li
79.3623 65.5685 li
79.6621 65.4787 li
79.6687 65.4767 li
79.9587 65.3868 li
79.9529 65.3886 li
80.2532 65.2983 li
80.2524 65.2985 li
80.5522 65.2087 li
80.5744 65.2016 li
80.8666 65.1041 li
81.1487 65.0167 li
81.1639 65.0118 li
81.4533 64.9154 li
81.7421 64.8288 li
81.7644 64.8217 li
82.053 64.7254 li
82.3419 64.6389 li
82.3716 64.6294 li
82.6583 64.5304 li
82.9543 64.4316 li
82.954 64.4317 li
83.2543 64.3316 li
83.2546 64.3315 li
83.5465 64.234 li
83.8288 64.1466 li
83.8445 64.1416 li
84.1443 64.0415 li
84.1439 64.0416 li
84.4442 63.9415 li
84.4651 63.9342 li
84.7545 63.8281 li
85.0443 63.7315 li
85.0511 63.7292 li
85.3407 63.6296 li
85.3338 63.6319 li
85.6341 63.5318 li
85.6345 63.5317 li
85.9343 63.4316 li
85.9545 63.4246 li
86.2484 63.317 li
86.5318 63.2192 li
86.5452 63.2145 li
86.8346 63.1084 li
87.1242 63.0117 li
87.1239 63.0118 li
87.4242 62.9117 li
87.4451 62.9044 li
87.7449 62.7945 li
87.7535 62.7913 li
88.0285 62.6867 li
88.3131 62.5921 li
88.3354 62.5843 li
88.6356 62.474 li
88.635 62.4742 li
88.9348 62.3644 li
88.9424 62.3615 li
89.2182 62.2571 li
89.5043 62.1617 li
89.5251 62.1544 li
89.8249 62.0445 li
89.826 62.0442 li
90.1258 61.9338 li
90.1244 61.9343 li
90.4247 61.8245 li
90.4327 61.8215 li
90.7191 61.713 li
91.0149 61.6046 li
91.0155 61.6044 li
91.3158 61.494 li
91.3152 61.4942 li
91.615 61.3844 li
91.6226 61.3815 li
91.9126 61.2717 li
91.9259 61.2665 li
92.2151 61.1506 li
92.5048 61.0447 li
92.5061 61.0442 li
92.8059 60.9338 li
92.8049 60.9342 li
93.1047 60.8243 li
93.1336 60.813 li
93.4092 60.6989 li
93.6947 60.5945 li
93.7159 60.5863 li
94.0051 60.4705 li
94.2948 60.3645 li
94.3032 60.3614 li
94.5927 60.2515 li
94.6052 60.2466 li
94.8952 60.1306 li
95.1848 60.0245 li
95.2053 60.0167 li
95.5056 59.8965 li
95.506 59.8964 li
95.7992 59.7789 li
96.0826 59.6716 li
96.0958 59.6664 li
96.3956 59.5463 li
96.3952 59.5465 li
96.6853 59.4304 li
96.9748 59.3243 li
97.0038 59.313 li
97.2894 59.1948 li
97.5847 59.0771 li
97.5861 59.0766 li
97.8859 58.9565 li
98.1857 58.8363 li
98.1853 58.8365 li
98.4791 58.719 li
98.7627 58.6115 li
98.776 58.6064 li
99.0758 58.4862 li
99.0748 58.4866 li
99.3746 58.367 li
99.3752 58.3668 li
99.6755 58.2466 li
99.6759 58.2465 li
99.9757 58.1264 li
99.9837 58.1231 li
100.274 58.003 li
100.285 57.9984 li
100.576 57.8725 li
100.866 57.7563 li
100.865 57.7566 li
101.165 57.637 li
101.174 57.6334 li
101.46 57.5147 li
101.756 57.3965 li
101.756 57.3964 li
102.056 57.2763 li
102.075 57.2683 li
102.365 57.1426 li
102.655 57.0264 li
102.664 57.023 li
102.949 56.9048 li
103.245 56.7869 li
103.265 56.7783 li
103.555 56.6524 li
103.845 56.5369 li
103.854 56.5333 li
104.144 56.4131 li
104.155 56.4084 li
104.445 56.2827 li
104.736 56.1666 li
104.755 56.1584 li
105.045 56.0327 li
105.336 55.9166 li
105.364 55.9045 li
105.64 55.7809 li
105.926 55.6666 li
105.945 55.6584 li
106.235 55.5327 li
106.526 55.4166 li
106.554 55.4047 li
106.83 55.2809 li
107.116 55.1664 li
107.135 55.1584 li
107.435 55.0285 li
107.435 55.0283 li
107.726 54.9023 li
108.015 54.7869 li
108.044 54.7744 li
108.329 54.6463 li
108.615 54.5225 li
108.905 54.4063 li
108.925 54.3982 li
109.225 54.2683 li
109.233 54.2646 li
109.519 54.1366 li
109.805 54.0127 li
110.096 53.8964 li
110.115 53.8884 li
110.415 53.7585 li
110.715 53.6288 li
110.724 53.6245 li
111.01 53.4962 li
111.295 53.3725 li
111.586 53.2564 li
111.605 53.2482 li
111.905 53.1184 li
111.913 53.1147 li
112.2 52.9865 li
112.495 52.8586 li
112.495 52.8584 li
112.796 52.728 li
112.795 52.7282 li
113.095 52.5983 li
113.395 52.4685 li
113.403 52.4648 li
113.689 52.3368 li
113.986 52.208 li
113.985 52.2082 li
114.285 52.0783 li
114.585 51.9486 li
114.594 51.9446 li
114.88 51.8165 li
115.176 51.688 li
115.175 51.6882 li
115.475 51.5583 li
115.775 51.4286 li
116.075 51.2985 li
116.084 51.2944 li
116.374 51.164 li
116.384 51.1598 li
116.674 51.0244 li
116.966 50.8979 li
116.965 50.8982 li
117.265 50.7683 li
117.273 50.7646 li
117.559 50.6367 li
117.855 50.5087 li
118.155 50.3786 li
118.175 50.3699 li
118.464 50.2344 li
118.755 50.1088 li
118.765 50.1045 li
119.05 49.9762 li
119.345 49.8483 li
119.364 49.8396 li
119.654 49.7041 li
119.945 49.5785 li
120.245 49.4484 li
120.253 49.4448 li
120.543 49.3149 li
120.554 49.31 li
120.845 49.1743 li
121.135 49.0485 li
121.136 49.0481 li
121.436 48.9178 li
121.462 48.9057 li
121.739 48.7725 li
122.026 48.6479 li
122.025 48.6482 li
122.325 48.5183 li
122.344 48.5099 li
122.634 48.3745 li
122.926 48.248 li
122.933 48.2446 li
123.224 48.1147 li
123.235 48.1096 li
123.525 47.9741 li
123.815 47.8485 li
123.835 47.8396 li
124.129 47.7021 li
124.41 47.5764 li
124.705 47.4484 li
124.724 47.4399 li
125.015 47.3042 li
125.305 47.1784 li
125.324 47.1699 li
125.619 47.0321 li
125.904 46.9045 li
125.914 46.8998 li
126.205 46.7642 li
126.495 46.6384 li
126.514 46.6298 li
126.809 46.4923 li
127.094 46.3647 li
127.105 46.3596 li
127.395 46.2241 li
127.685 46.0983 li
127.704 46.0898 li
127.995 45.9541 li
128.285 45.8283 li
128.313 45.8154 li
128.589 45.682 li
128.875 45.5583 li
128.894 45.5498 li
129.194 45.4096 li
129.194 45.4098 li
129.489 45.2724 li
129.774 45.144 li
129.783 45.14 li
130.075 45.0045 li
130.365 44.8786 li
130.384 44.8699 li
130.674 44.7344 li
130.965 44.6088 li
130.993 44.5957 li
131.279 44.4575 li
131.564 44.3243 li
131.855 44.1986 li
131.875 44.1897 li
132.175 44.0496 li
132.183 44.0454 li
132.459 43.912 li
132.745 43.7883 li
132.764 43.7797 li
133.064 43.6396 li
133.064 43.6398 li
133.354 43.5045 li
133.645 43.3786 li
133.673 43.3657 li
133.959 43.2275 li
134.245 43.0942 li
134.535 42.9685 li
134.554 42.9599 li
134.854 42.8198 li
134.864 42.8152 li
135.139 42.6821 li
135.425 42.5585 li
135.445 42.5496 li
135.744 42.4094 li
135.743 42.41 li
136.043 42.2704 li
136.045 42.2698 li
136.339 42.1321 li
136.623 42.0048 li
136.634 41.9997 li
136.934 41.8596 li
136.934 41.8598 li
137.234 41.7197 li
137.234 41.7199 li
137.529 41.5823 li
137.814 41.4541 li
137.823 41.4501 li
138.123 41.3104 li
138.125 41.3098 li
138.425 41.1697 li
138.714 41.0342 li
139.005 40.9086 li
139.033 40.8955 li
139.319 40.7575 li
139.614 40.6203 li
139.614 40.6199 li
139.914 40.4797 li
139.914 40.4799 li
140.209 40.3422 li
140.494 40.2148 li
140.505 40.2097 li
140.804 40.0696 li
140.804 40.0698 li
141.104 39.9296 li
141.104 39.9299 li
141.404 39.7902 li
141.404 39.7898 li
141.699 39.6522 li
141.983 39.5248 li
141.994 39.52 li
142.294 39.3798 li
142.295 39.3796 li
142.594 39.2395 li
142.594 39.2399 li
142.893 39.1003 li
142.894 39.1 li
143.194 38.9599 li
143.203 38.9556 li
143.479 38.8221 li
143.765 38.6984 li
143.784 38.6899 li
144.084 38.5498 li
144.085 38.5496 li
144.384 38.4094 li
144.392 38.4057 li
144.678 38.268 li
144.974 38.1296 li
144.974 38.1298 li
145.274 37.9897 li
145.274 37.9899 li
145.574 37.8503 li
145.574 37.85 li
145.869 37.7125 li
146.154 37.5847 li
146.164 37.58 li
146.464 37.4399 li
146.465 37.4397 li
146.764 37.2996 li
146.764 37.2998 li
147.064 37.1596 li
147.072 37.1557 li
147.358 37.018 li
147.654 36.8796 li
147.954 36.7395 li
147.953 36.7401 li
148.253 36.6005 li
148.255 36.5998 li
148.554 36.4597 li
148.563 36.4556 li
148.839 36.3221 li
149.125 36.1984 li
149.144 36.1899 li
149.444 36.0498 li
149.445 36.0496 li
149.744 35.9094 li
149.752 35.9057 li
150.038 35.7679 li
150.334 35.6298 li
150.335 35.6296 li
150.634 35.4895 li
150.634 35.4899 li
150.933 35.3503 li
150.934 35.35 li
151.234 35.2099 li
151.243 35.2056 li
151.529 35.0674 li
151.824 34.9294 li
151.823 34.9301 li
152.123 34.7904 li
152.125 34.7898 li
152.425 34.6497 li
152.433 34.6455 li
152.719 34.5075 li
153.013 34.3703 li
153.014 34.3701 li
153.314 34.2299 li
153.315 34.2297 li
153.614 34.0896 li
153.914 33.9495 li
153.922 33.9458 li
154.212 33.8061 li
154.585 33.6264 154.742 33.1782 154.562 32.805 cv
154.383 32.4318 153.935 32.2749 153.561 32.4546 cv
153.275 32.5923 li
152.979 32.7307 li
152.679 32.8709 li
152.68 32.8707 li
152.38 33.0108 li
152.38 33.0106 li
152.08 33.1502 li
152.071 33.1548 li
151.785 33.293 li
151.49 33.4309 li
151.491 33.4303 li
151.191 33.5699 li
151.189 33.5706 li
150.889 33.7107 li
150.881 33.7148 li
150.595 33.8531 li
150.3 33.9908 li
150.3 33.9905 li
150 34.1302 li
149.999 34.1306 li
149.699 34.2708 li
149.7 34.2706 li
149.4 34.4107 li
149.391 34.4146 li
149.105 34.5525 li
148.809 34.6907 li
148.81 34.6905 li
148.519 34.8261 li
148.229 34.9519 li
148.201 34.9648 li
147.915 35.103 li
147.619 35.241 li
147.621 35.2403 li
147.32 35.38 li
147.319 35.3806 li
147.019 35.5208 li
146.72 35.6609 li
146.712 35.6646 li
146.426 35.8022 li
146.13 35.9405 li
146.129 35.9407 li
145.829 36.0808 li
145.83 36.0806 li
145.535 36.2182 li
145.25 36.346 li
145.24 36.3506 li
144.94 36.4908 li
144.94 36.4905 li
144.64 36.6302 li
144.64 36.6304 li
144.34 36.7706 li
144.339 36.7708 li
144.039 36.9109 li
144.032 36.9146 li
143.745 37.0525 li
143.449 37.1907 li
143.45 37.1905 li
143.159 37.3261 li
142.869 37.4519 li
142.841 37.4648 li
142.555 37.6029 li
142.259 37.7408 li
142.26 37.7405 li
141.96 37.8802 li
141.959 37.8806 li
141.659 38.0208 li
141.66 38.0206 li
141.365 38.1582 li
141.08 38.2857 li
141.069 38.2908 li
140.769 38.4309 li
140.77 38.4305 li
140.47 38.5701 li
140.47 38.5704 li
140.17 38.7105 li
140.169 38.7107 li
139.875 38.8483 li
139.59 38.9757 li
139.58 38.9805 li
139.28 39.1207 li
139.279 39.1209 li
138.979 39.261 li
138.98 39.2606 li
138.68 39.4002 li
138.671 39.4048 li
138.395 39.5381 li
138.109 39.6617 li
138.089 39.6707 li
137.789 39.8108 li
137.49 39.9509 li
137.491 39.9503 li
137.195 40.088 li
136.909 40.2163 li
136.9 40.2205 li
136.6 40.3602 li
136.6 40.3604 li
136.3 40.5005 li
136.299 40.5007 li
136.005 40.6382 li
135.72 40.7657 li
135.709 40.7708 li
135.409 40.9109 li
135.411 40.9103 li
135.11 41.0499 li
135.109 41.0505 li
134.819 41.186 li
134.529 41.3116 li
134.5 41.3249 li
134.215 41.4627 li
133.929 41.5961 li
133.639 41.722 li
133.62 41.7305 li
133.32 41.8707 li
133.31 41.875 li
133.034 42.0084 li
132.749 42.1321 li
132.73 42.1404 li
132.43 42.2801 li
132.43 42.2803 li
132.139 42.416 li
131.849 42.5418 li
131.821 42.5547 li
131.535 42.6929 li
131.25 42.8261 li
130.959 42.9518 li
130.939 42.9607 li
130.639 43.1008 li
130.631 43.105 li
130.355 43.2383 li
130.069 43.3619 li
130.049 43.3709 li
129.759 43.5064 li
129.469 43.6321 li
129.451 43.6403 li
129.155 43.7779 li
128.869 43.9063 li
128.86 43.9105 li
128.56 44.0501 li
128.56 44.0503 li
128.269 44.1859 li
127.979 44.3118 li
127.951 44.3247 li
127.674 44.4581 li
127.389 44.5818 li
127.37 44.5904 li
127.079 44.7261 li
126.789 44.8518 li
126.769 44.8606 li
126.475 44.9982 li
126.191 45.1256 li
126.18 45.1304 li
125.889 45.2661 li
125.599 45.3919 li
125.58 45.4004 li
125.285 45.5382 li
125 45.6658 li
124.99 45.6705 li
124.699 45.8062 li
124.409 45.9319 li
124.39 45.9405 li
124.099 46.0762 li
123.809 46.2019 li
123.8 46.2056 li
123.51 46.3355 li
123.499 46.3406 li
123.209 46.476 li
122.919 46.6017 li
122.899 46.6106 li
122.605 46.7482 li
122.325 46.8737 li
122.028 47.0025 li
122.01 47.0106 li
121.72 47.1458 li
121.429 47.2718 li
121.428 47.272 li
121.128 47.4024 li
121.101 47.4146 li
120.824 47.548 li
120.538 47.6726 li
120.539 47.6722 li
120.239 47.802 li
120.22 47.8106 li
119.925 47.9483 li
119.645 48.0738 li
119.349 48.2019 li
119.049 48.3316 li
119.029 48.3406 li
118.739 48.4762 li
118.449 48.6018 li
118.44 48.606 li
118.154 48.7341 li
117.859 48.8619 li
117.839 48.8709 li
117.549 49.0065 li
117.259 49.1321 li
116.959 49.2618 li
116.95 49.2657 li
116.664 49.3938 li
116.369 49.5218 li
116.368 49.522 li
116.068 49.6524 li
116.05 49.6605 li
115.755 49.798 li
115.474 49.924 li
115.179 50.052 li
114.879 50.1817 li
114.579 50.3118 li
114.578 50.312 li
114.278 50.4424 li
114.27 50.4461 li
113.985 50.574 li
113.689 50.7018 li
113.389 50.8318 li
113.388 50.8321 li
113.088 50.9624 li
113.08 50.9659 li
112.794 51.094 li
112.499 51.222 li
112.199 51.3518 li
112.198 51.3521 li
111.898 51.4824 li
111.899 51.4822 li
111.599 51.6121 li
111.59 51.6158 li
111.305 51.7437 li
111.019 51.8676 li
110.728 51.9838 li
110.709 51.992 li
110.409 52.1219 li
110.4 52.126 li
110.115 52.254 li
109.819 52.3819 li
109.528 52.5079 li
109.238 52.6241 li
109.219 52.6319 li
108.919 52.7618 li
108.91 52.7657 li
108.625 52.8936 li
108.338 53.0176 li
108.048 53.1337 li
108.029 53.1419 li
107.729 53.2718 li
107.719 53.2759 li
107.444 53.3997 li
107.159 53.5134 li
107.138 53.522 li
106.838 53.6524 li
106.839 53.6521 li
106.548 53.7779 li
106.258 53.8941 li
106.231 53.9058 li
105.954 54.0295 li
105.668 54.144 li
105.649 54.1521 li
105.359 54.2778 li
105.068 54.394 li
105.04 54.406 li
104.764 54.5296 li
104.478 54.644 li
104.459 54.6521 li
104.168 54.7779 li
103.878 54.894 li
103.859 54.9021 li
103.564 55.0296 li
103.285 55.1455 li
102.989 55.2634 li
102.968 55.272 li
102.678 55.3979 li
102.389 55.5134 li
102.38 55.517 li
102.094 55.6355 li
101.798 55.7538 li
101.779 55.762 li
101.488 55.8877 li
101.198 56.004 li
101.199 56.0038 li
100.898 56.124 li
100.89 56.1274 li
100.604 56.2456 li
100.309 56.3635 li
100.308 56.3639 li
100.008 56.484 li
99.9894 56.4918 li
99.6941 56.6195 li
99.4136 56.7357 li
99.118 56.8541 li
99.1184 56.8539 li
98.8181 56.9741 li
98.8187 56.9738 li
98.5189 57.0934 li
98.5179 57.0938 li
98.2247 57.2113 li
97.9414 57.3186 li
97.9285 57.3237 li
97.6282 57.4438 li
97.6278 57.4439 li
97.328 57.5641 li
97.0282 57.6842 li
97.0296 57.6836 li
96.7293 57.8032 li
96.7199 57.8071 li
96.4441 57.9213 li
96.1589 58.0258 li
96.1384 58.0336 li
95.8382 58.1537 li
95.8378 58.1539 li
95.5446 58.2714 li
95.2612 58.3787 li
95.2479 58.3839 li
94.9481 58.504 li
94.9485 58.5038 li
94.6583 58.6199 li
94.3689 58.726 li
94.3484 58.7338 li
94.0545 58.8514 li
93.7757 58.9572 li
93.4791 59.0657 li
93.4579 59.0738 li
93.169 59.1895 li
92.879 59.2957 li
92.8497 59.3071 li
92.5741 59.4212 li
92.2888 59.5258 li
92.2878 59.5261 li
91.988 59.6365 li
91.9894 59.636 li
91.6891 59.7458 li
91.6678 59.754 li
91.3746 59.8715 li
91.0949 59.9774 li
90.7991 60.0858 li
90.7984 60.0861 li
90.4981 60.1964 li
90.4988 60.1962 li
90.199 60.306 li
90.1914 60.3089 li
89.9057 60.4171 li
89.609 60.5256 li
89.6076 60.5261 li
89.3078 60.6365 li
89.3088 60.6361 li
89.0196 60.7421 li
88.7296 60.8388 li
88.7011 60.8489 li
88.4147 60.9574 li
88.1189 61.0658 li
88.1183 61.066 li
87.829 61.1723 li
87.5404 61.2682 li
87.5101 61.279 li
87.2242 61.3878 li
86.9393 61.4922 li
86.6495 61.5888 li
86.6492 61.5889 li
86.3494 61.689 li
86.3289 61.6962 li
86.0358 61.8036 li
85.7524 61.9014 li
85.7394 61.906 li
85.4492 62.0122 li
85.1594 62.1089 li
85.1598 62.1088 li
84.8595 62.2089 li
84.8527 62.2112 li
84.5631 62.3108 li
84.57 62.3085 li
84.2697 62.4086 li
84.2488 62.4159 li
83.9593 62.522 li
83.6696 62.6186 li
83.6692 62.6187 li
83.3773 62.7161 li
83.095 62.8036 li
83.0794 62.8086 li
82.7796 62.9087 li
82.7799 62.9086 li
82.4796 63.0087 li
82.4793 63.0088 li
82.1795 63.1089 li
82.1723 63.1113 li
81.8971 63.2063 li
81.6117 63.2917 li
81.5891 63.2989 li
81.3003 63.3953 li
81.0117 63.4818 li
80.9899 63.4887 li
80.6974 63.5862 li
80.4148 63.6737 li
80.3992 63.6787 li
80.1104 63.7752 li
79.8218 63.8616 li
79.8211 63.8619 li
79.5208 63.9522 li
79.5149 63.954 li
79.2249 64.0438 li
79.2315 64.0418 li
78.9317 64.1317 li
78.9309 64.1319 li
78.6306 64.2222 li
78.6314 64.222 li
78.3316 64.3118 li
78.0318 64.4017 li
78.0251 64.4037 li
77.7351 64.4935 li
77.741 64.4917 li
77.4518 64.5787 li
77.1634 64.6558 li
77.1416 64.6619 li
76.8418 64.7518 li
76.8421 64.7517 li
76.5495 64.8392 li
76.2672 64.9172 li
76.2515 64.9217 li
75.9627 65.0083 li
75.6734 65.0854 li
75.6732 65.0855 li
75.3734 65.1655 li
75.3673 65.1672 li
75.0772 65.2473 li
75.0833 65.2456 li
74.7835 65.3257 li
74.7838 65.3256 li
74.4835 65.4057 li
74.4843 65.4055 li
74.1845 65.4851 li
74.1837 65.4853 li
73.8834 65.5654 li
73.8767 65.5672 li
73.5872 65.6472 li
73.5939 65.6454 li
73.3051 65.7225 li
73.0169 65.7896 li
72.9938 65.7953 li
72.7016 65.8732 li
72.42 65.9415 li
72.4042 65.9455 li
72.1149 66.0223 li
71.8258 66.0901 li
71.8272 66.0898 li
71.5269 66.1596 li
71.2268 66.2295 li
71.1974 66.237 li
70.9331 66.31 li
70.6598 66.3647 li
70.6361 66.3698 li
70.3358 66.4402 li
70.3367 66.44 li
70.0369 66.5098 li
70.0315 66.5111 li
69.7556 66.5775 li
69.4696 66.6347 li
69.4454 66.6399 li
69.1581 66.7073 li
68.8709 66.7644 li
68.87 66.7646 li
68.5697 66.8246 li
68.5401 66.8312 li
68.2647 66.8979 li
67.9796 66.955 li
67.981 66.9548 li
67.6807 67.0143 li
67.6793 67.0146 li
67.3891 67.0728 li
67.1087 67.1214 li
67.0895 67.125 li
66.7897 67.185 li
66.7911 67.1847 li
66.5016 67.2422 li
66.2128 67.2906 li
66.214 67.2904 li
65.9142 67.3402 li
65.909 67.3411 li
65.6189 67.3914 li
65.6 67.3949 li
65.3115 67.4526 li
65.0361 67.4984 li
64.7476 67.5368 li
64.7195 67.5411 li
64.43 67.5909 li
64.4332 67.5904 li
64.145 67.6387 li
63.8577 67.677 li
63.8343 67.6805 li
63.5456 67.7284 li
63.2576 67.7669 li
63.2544 67.7673 li
62.9643 67.8073 li
62.9676 67.8069 li
62.6678 67.8469 li
62.3677 67.8869 li
62.079 67.9255 li
61.8003 67.9541 li
61.7778 67.9568 li
61.4901 67.9951 li
61.2027 68.0237 li
61.2015 68.0238 li
60.9017 68.0541 li
60.8779 68.0569 li
60.6012 68.0938 li
60.3351 68.1121 li
60.3126 68.114 li
60.0128 68.1438 li
60.0116 68.1439 li
59.7245 68.1729 li
59.4369 68.1921 li
59.4102 68.1944 li
59.1336 68.2227 li
58.847 68.2419 li
58.5468 68.2619 li
58.2469 68.2819 li
57.9596 68.3011 li
57.6818 68.3105 li
57.6571 68.3117 li
57.369 68.3309 li
57.0813 68.3408 li
57.0825 68.3407 li
56.7827 68.3505 li
56.7815 68.3505 li
56.4812 68.3608 li
56.4816 68.3608 li
56.204 68.3701 li
55.917 68.3701 li
55.8914 68.3706 li
55.6038 68.3804 li
55.3169 68.3804 li
55.0269 68.3804 li
54.7271 68.3804 li
54.4398 68.3804 li
54.1526 68.3706 li
54.127 68.3701 li
53.8393 68.3701 li
53.5624 68.3608 li
53.5627 68.3608 li
53.2624 68.3505 li
53.2612 68.3505 li
52.9743 68.3411 li
52.6866 68.322 li
52.6632 68.3208 li
52.3851 68.3109 li
52.0968 68.2917 li
51.797 68.2717 li
51.5089 68.2525 li
51.2211 68.2239 li
51.2236 68.2241 li
50.9335 68.1944 li
50.9069 68.1921 li
50.62 68.1729 li
50.3439 68.1451 li
50.0563 68.1067 li
50.0336 68.104 li
49.7436 68.0742 li
49.4327 68.0423 49.1322 68.2086 48.9941 68.489 cv
48.7034 69.0795 li
48.4276 69.5669 li
48.1624 69.9651 li
47.9132 70.2723 li
47.6922 70.4854 li
47.4846 70.6379 li
47.3097 70.7252 li
47.1531 70.767 li
47.0109 70.7768 li
46.8568 70.7562 li
46.665 70.6923 li
46.4557 70.5945 li
46.2354 70.4478 li
45.9873 70.2422 li
45.722 70.0037 li
45.4555 69.7194 li
45.1769 69.3946 li
44.9051 69.0471 li
44.6143 68.6505 li
44.3243 68.2443 li
44.0307 67.804 li
44.031 67.8045 li
43.7312 67.3543 li
43.703 67.3149 li
43.413 66.935 li
43.2716 66.7498 43.0499 66.6401 42.8169 66.6401 cv
42.5171 66.6401 li
42.2168 66.6401 li
41.9297 66.6401 li
41.6522 66.6308 li
41.627 66.6304 li
41.3267 66.6304 li
41.0269 66.6304 li
40.7271 66.6304 li
40.44 66.6304 li
40.1632 66.6206 li
40.1367 66.6201 li
39.8369 66.6201 li
39.5371 66.6201 li
39.2495 66.6201 li
38.972 66.6108 li
38.9468 66.6104 li
38.647 66.6104 li
38.3467 66.6104 li
38.0597 66.6104 li
37.7727 66.6005 li
37.7471 66.6001 li
37.457 66.6001 li
37.1567 66.6001 li
36.8569 66.6001 li
36.5571 66.6001 li
36.2695 66.6001 li
35.992 66.5908 li
35.9668 66.5903 li
35.667 66.5903 li
35.3667 66.5903 li
35.0669 66.5903 li
34.7769 66.5903 li
34.3626 66.5903 34.0269 66.9261 34.0269 67.3403 cv
34.0269 67.7545 34.3626 68.0903 34.7769 68.0903 cv
cp
.653773 .579889 .56878 .366613 cmyk
f
34.7769 143.235 mo
153.887 143.235 li
154.094 143.235 154.262 143.067 154.262 142.86 cv
154.262 142.653 154.094 142.485 153.887 142.485 cv
34.7769 142.485 li
34.5697 142.485 34.4019 142.653 34.4019 142.86 cv
34.4019 143.067 34.5697 143.235 34.7769 143.235 cv
.75021 .679683 .670222 .90164 cmyk
f
34.4019 142.86 mo
34.4019 146.22 li
34.4019 146.427 34.5697 146.595 34.7769 146.595 cv
34.984 146.595 35.1519 146.427 35.1519 146.22 cv
35.1519 142.86 li
35.1519 142.653 34.984 142.485 34.7769 142.485 cv
34.5697 142.485 34.4019 142.653 34.4019 142.86 cv
f
64.1821 142.86 mo
64.1821 146.22 li
64.1821 146.427 64.35 146.595 64.5571 146.595 cv
64.7642 146.595 64.9321 146.427 64.9321 146.22 cv
64.9321 142.86 li
64.9321 142.653 64.7642 142.485 64.5571 142.485 cv
64.35 142.485 64.1821 142.653 64.1821 142.86 cv
f
93.9517 142.86 mo
93.9517 146.22 li
93.9517 146.427 94.1196 146.595 94.3267 146.595 cv
94.5338 146.595 94.7017 146.427 94.7017 146.22 cv
94.7017 142.86 li
94.7017 142.653 94.5338 142.485 94.3267 142.485 cv
94.1196 142.485 93.9517 142.653 93.9517 142.86 cv
f
123.732 142.86 mo
123.732 146.22 li
123.732 146.427 123.9 146.595 124.107 146.595 cv
124.314 146.595 124.482 146.427 124.482 146.22 cv
124.482 142.86 li
124.482 142.653 124.314 142.485 124.107 142.485 cv
123.9 142.485 123.732 142.653 123.732 142.86 cv
f
153.512 142.86 mo
153.512 146.22 li
153.512 146.427 153.68 146.595 153.887 146.595 cv
154.094 146.595 154.262 146.427 154.262 146.22 cv
154.262 142.86 li
154.262 142.653 154.094 142.485 153.887 142.485 cv
153.68 142.485 153.512 142.653 153.512 142.86 cv
f
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginMCBLKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/zero <1C60D8A8C9B7EF322BB70D1045F9F84CF5A9E636DA48B0B84345CFB17CDCD64AA529BD23C358113A6F12A7F927F67801E7716DEDB8FBB50D28956279879C3943A67386E5304D963AB3E064E7022317006AA79A8777799C5D39502A7CB330EAEEC28837821C5437B109C741C1D7BCD8EEC785ED017624EE945A52A677F5B0E3B0C4781A3901> |-/one <1C60D8A8C9B7EF322B8DEEDAE6F72EF3709E16C7A593AF17F17D72A3907C7468090579C66DE0263BFE> |-/two <1C60D8A8C9B7EF327699F81B0CD59DC4BD38D48AF11B5B9C1D7787A22BDC09D7BCED9A76C2312055A28AC829584109043EE366AF8632D6D62E9BBD6A4357093750D4015EA59C9F538C44C55AD0DB14FEE0C7267845EB7EFBD514024AA1A03530A8941AD7B5F508335B2FDCA37E6B0627146A6F144DB9DD7DCA6BE86290FB46DD6A2918F4C2C2BDEECA159D78> |-/three <1C60D8A8C9B7EF322B8D6E3793F9C339FF2D01F55F75395A69A42725328E1B8E66EAFF6BAC335B6E345906CE7152DDCE6F991DD2E99A50D14EF5FE716864AD89B92005EB56184F6465E294CACBF73EC4E77A27D9ACFF3348FE551D23745FD8C1F5363E223D2FE146B2E36748D97805004E8C37168D3D6622BBF76ADD739801325A4BB7457A49C531154E36C58F381AB30F164CAE6510100AF5FE6405CBE42D3AEC01131A86CADB27645F055DEC901ADBC964660F336098380F7A314362D92502B680C534E053458ABD592A4A4D87F9589307764B161F9884> |-/four <1C60D8A8C9B7EF32298E3DD46F18108137336D1A5C627A90D059BB18158BA2A55FF5DE20CE460964DAF45C08A7D9820A784F4A44F7E1> |-systemdict /gcheck known {setglobal} if end {end} ifendMCBLKO+Helvetica /Encoding getdup 48 /zero putdup 49 /one putdup 50 /two putdup 51 /three putdup 52 /four putpop%ADOEndSubsetFont
/MCBLKO+Helvetica*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 44{/.notdef}rp /a /b /.notdef /d /e /f /g /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u /.notdef /w 7{/.notdef}rp /minus 128{/.notdef}rp]MCBLKO+Helvetica nfMCBLKO+Helvetica*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf32.5469 155.81 mo(0)sh62.3267 155.81 mo(1)sh92.1069 155.81 mo(2)sh121.887 155.81 mo(3)sh151.667 155.81 mo(4)sh35.1519 138.8 mo
35.1519 31.6104 li
35.1519 31.4032 34.984 31.2354 34.7769 31.2354 cv
34.5697 31.2354 34.4019 31.4032 34.4019 31.6104 cv
34.4019 138.8 li
34.4019 139.007 34.5697 139.175 34.7769 139.175 cv
34.984 139.175 35.1519 139.007 35.1519 138.8 cv
f
34.7769 138.425 mo
31.417 138.425 li
31.2099 138.425 31.042 138.593 31.042 138.8 cv
31.042 139.007 31.2099 139.175 31.417 139.175 cv
34.7769 139.175 li
34.984 139.175 35.1519 139.007 35.1519 138.8 cv
35.1519 138.593 34.984 138.425 34.7769 138.425 cv
f
34.7769 120.555 mo
31.417 120.555 li
31.2099 120.555 31.042 120.723 31.042 120.93 cv
31.042 121.137 31.2099 121.305 31.417 121.305 cv
34.7769 121.305 li
34.984 121.305 35.1519 121.137 35.1519 120.93 cv
35.1519 120.723 34.984 120.555 34.7769 120.555 cv
f
34.7769 102.695 mo
31.417 102.695 li
31.2099 102.695 31.042 102.863 31.042 103.07 cv
31.042 103.277 31.2099 103.445 31.417 103.445 cv
34.7769 103.445 li
34.984 103.445 35.1519 103.277 35.1519 103.07 cv
35.1519 102.863 34.984 102.695 34.7769 102.695 cv
f
34.7769 84.835 mo
31.417 84.835 li
31.2099 84.835 31.042 85.0029 31.042 85.21 cv
31.042 85.4171 31.2099 85.585 31.417 85.585 cv
34.7769 85.585 li
34.984 85.585 35.1519 85.4171 35.1519 85.21 cv
35.1519 85.0029 34.984 84.835 34.7769 84.835 cv
f
34.7769 66.9653 mo
31.417 66.9653 li
31.2099 66.9653 31.042 67.1332 31.042 67.3403 cv
31.042 67.5474 31.2099 67.7153 31.417 67.7153 cv
34.7769 67.7153 li
34.984 67.7153 35.1519 67.5474 35.1519 67.3403 cv
35.1519 67.1332 34.984 66.9653 34.7769 66.9653 cv
f
34.7769 49.105 mo
31.417 49.105 li
31.2099 49.105 31.042 49.2729 31.042 49.48 cv
31.042 49.6871 31.2099 49.855 31.417 49.855 cv
34.7769 49.855 li
34.984 49.855 35.1519 49.6871 35.1519 49.48 cv
35.1519 49.2729 34.984 49.105 34.7769 49.105 cv
f
34.7769 31.2354 mo
31.417 31.2354 li
31.2099 31.2354 31.042 31.4032 31.042 31.6104 cv
31.042 31.8175 31.2099 31.9854 31.417 31.9854 cv
34.7769 31.9854 li
34.984 31.9854 35.1519 31.8175 35.1519 31.6104 cv
35.1519 31.4032 34.984 31.2354 34.7769 31.2354 cv
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginMCBLKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/five <1C60D8A8C9B7EF3277A9C7C54B35CB479E4C110330EAD203F40A20826414A4CC0E90EF4AAF68DCFEF4ABE6CFF07A7C5FBDADC90A7F87ECB382B602F56451722980F3A3AC74E582BA9C9CEC3027EC489F453112D8FBBD217B656538AC90D034F616E885784C813B1555F6DEF92ECF082193A9672305F8A984DE35F68D1502A8C10EB08C528E24E38813C68D1F86D01BCA9E> |-systemdict /gcheck known {setglobal} if end {end} ifendMCBLKO+Helvetica /Encoding getdup 53 /five putpop%ADOEndSubsetFont
/MCBLKO+Helvetica*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four /five 43{/.notdef}rp /a /b /.notdef /d /e /f /g /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u /.notdef /w 7{/.notdef}rp /minus 128{/.notdef}rp]MCBLKO+Helvetica nfMCBLKO+Helvetica*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf14.4868 141.669 mo(\17720)sh14.4868 123.81 mo(\17715)sh14.4868 105.94 mo(\17710)sh18.937 88.0796 mo(\1775)[4.67188 0 ]xsh23.6069 70.2095 mo(0)sh23.6069 52.3496 mo(5)sh19.1567 34.4795 mo(10)[4.44922 0 ]xsh188.102 138.391 mo
188.037 138.391 li
187.737 138.391 li
187.437 138.391 li
187.147 138.391 li
186.847 138.391 li
186.547 138.391 li
186.247 138.391 li
185.957 138.391 li
185.657 138.391 li
185.357 138.391 li
185.057 138.391 li
184.757 138.391 li
184.467 138.391 li
184.167 138.391 li
183.867 138.391 li
183.567 138.391 li
183.277 138.391 li
182.977 138.391 li
182.677 138.391 li
182.377 138.391 li
182.077 138.391 li
181.787 138.391 li
181.487 138.391 li
181.187 138.391 li
180.887 138.391 li
180.597 138.391 li
180.297 138.391 li
179.997 138.391 li
179.697 138.391 li
179.397 138.391 li
179.107 138.391 li
178.807 138.391 li
178.507 138.391 li
178.207 138.391 li
177.917 138.391 li
177.617 138.391 li
177.317 138.391 li
177.017 138.391 li
176.717 138.391 li
176.427 138.391 li
176.127 138.391 li
175.827 138.391 li
175.527 138.391 li
175.237 138.391 li
174.937 138.391 li
174.637 138.391 li
174.337 138.391 li
174.277 138.391 li
174.412 134.473 li
174.412 134.474 li
174.712 126.404 li
174.712 126.405 li
175.011 118.695 li
175.011 118.695 li
175.312 111.315 li
175.312 111.316 li
175.611 104.286 li
175.902 97.5963 li
175.901 97.5978 li
176.201 91.2477 li
176.201 91.2488 li
176.501 85.2488 li
176.501 85.2498 li
176.801 79.5901 li
176.801 79.5907 li
177.091 74.2704 li
177.091 74.2726 li
177.391 69.3029 li
177.391 69.3044 li
177.691 64.6643 li
177.691 64.6663 li
177.991 60.3865 li
177.991 60.3887 li
178.291 56.4386 li
178.291 56.4402 li
178.581 52.8434 li
178.88 49.5887 li
178.88 49.5887 li
179.18 46.6713 li
179.479 44.1066 li
179.768 41.8841 li
180.066 40.0051 li
180.363 38.4817 li
180.657 37.3076 li
180.939 36.496 li
181.161 36.1055 li
181.187 36.0911 li
181.214 36.1068 li
181.444 36.497 li
181.716 37.3053 li
182.011 38.4818 li
182.308 40.0062 li
182.606 41.8844 li
182.904 44.1051 li
183.194 46.6703 li
183.493 49.5868 li
183.794 52.8445 li
183.793 52.8412 li
184.093 56.4413 li
184.093 56.4376 li
184.383 60.3878 li
184.383 60.3866 li
184.683 64.6664 li
184.683 64.6643 li
184.983 69.3044 li
184.983 69.3029 li
185.282 74.2725 li
185.282 74.2711 li
185.583 79.5914 li
185.583 79.5895 li
185.873 85.2491 li
185.873 85.2486 li
186.172 91.2486 li
186.172 91.2477 li
186.472 97.5978 li
186.472 97.5969 li
186.772 104.287 li
186.772 104.285 li
187.062 111.316 li
187.362 118.695 li
187.362 118.695 li
187.662 126.405 li
187.662 126.404 li
187.962 134.474 li
187.962 134.473 li
188.102 138.391 li
.136477 .104463 .109041 3.0518e-05 cmyk
f
173.747 142.86 mo
174.122 142.873 li
174.412 134.473 li
174.412 134.474 li
174.712 126.404 li
174.712 126.405 li
175.011 118.695 li
175.011 118.695 li
175.312 111.315 li
175.312 111.316 li
175.611 104.286 li
175.902 97.5963 li
175.901 97.5978 li
176.201 91.2477 li
176.201 91.2488 li
176.501 85.2488 li
176.501 85.2498 li
176.801 79.5901 li
176.801 79.5907 li
177.091 74.2704 li
177.091 74.2726 li
177.391 69.3029 li
177.391 69.3044 li
177.691 64.6643 li
177.691 64.6663 li
177.991 60.3865 li
177.991 60.3887 li
178.291 56.4386 li
178.291 56.4402 li
178.581 52.8434 li
178.88 49.5847 li
178.507 49.5503 li
178.88 49.5887 li
179.18 46.6713 li
179.479 44.1066 li
179.768 41.8841 li
180.066 40.0051 li
180.363 38.4817 li
180.657 37.3076 li
180.939 36.496 li
181.161 36.1055 li
181.187 36.0911 li
181.214 36.1068 li
181.444 36.497 li
181.716 37.3053 li
182.011 38.4818 li
182.308 40.0062 li
182.606 41.8844 li
182.904 44.1051 li
183.194 46.6703 li
183.493 49.5868 li
183.794 52.8445 li
183.793 52.8412 li
184.093 56.4413 li
184.093 56.4376 li
184.383 60.3878 li
184.383 60.3866 li
184.683 64.6664 li
184.683 64.6643 li
184.983 69.3044 li
184.983 69.3029 li
185.282 74.2725 li
185.282 74.2711 li
185.583 79.5914 li
185.583 79.5895 li
185.873 85.2491 li
185.873 85.2486 li
186.172 91.2486 li
186.172 91.2477 li
186.472 97.5978 li
186.472 97.5969 li
186.772 104.287 li
186.772 104.285 li
187.062 111.316 li
187.362 118.695 li
187.362 118.695 li
187.662 126.405 li
187.662 126.404 li
187.962 134.474 li
187.962 134.473 li
188.248 142.485 li
173.747 142.485 li
173.747 142.86 li
174.122 142.873 li
173.747 142.86 li
173.747 143.235 li
188.637 143.235 li
188.738 143.235 188.836 143.194 188.907 143.121 cv
188.977 143.048 189.015 142.948 189.012 142.847 cv
188.712 134.447 li
188.712 134.446 li
188.412 126.376 li
188.412 126.375 li
188.111 118.666 li
188.111 118.665 li
187.812 111.285 li
187.522 104.255 li
187.522 104.253 li
187.221 97.5633 li
187.221 97.5623 li
186.921 91.2123 li
186.921 91.2112 li
186.622 85.2112 li
186.622 85.2108 li
186.332 79.5511 li
186.331 79.5491 li
186.031 74.2288 li
186.031 74.2274 li
185.731 69.2577 li
185.731 69.2561 li
185.431 64.6159 li
185.431 64.6139 li
185.131 60.3341 li
185.131 60.3329 li
184.841 56.3826 li
184.841 56.379 li
184.541 52.7789 li
184.54 52.7757 li
184.24 49.5159 li
184.24 49.512 li
183.94 46.5921 li
183.94 46.5883 li
183.649 44.018 li
183.648 44.01 li
183.349 41.7801 li
183.347 41.7712 li
183.047 39.8816 li
183.045 39.8688 li
182.745 38.3287 li
182.741 38.3094 li
182.44 37.1092 li
182.432 37.0805 li
182.143 36.2207 li
182.11 36.1501 li
181.81 35.6399 li
181.672 35.5038 li
181.372 35.334 li
181.257 35.2691 181.117 35.2689 181.002 35.3337 cv
180.702 35.5037 li
180.561 35.6447 li
180.271 36.1551 li
180.243 36.2169 li
179.943 37.0767 li
179.933 37.1093 li
179.633 38.3095 li
179.629 38.3286 li
179.329 39.8687 li
179.326 39.8817 li
179.027 41.7714 li
179.025 41.7817 li
178.735 44.0117 li
178.734 44.0167 li
178.435 46.5869 li
178.434 46.5921 li
178.134 49.512 li
178.133 49.516 li
177.834 52.7757 li
177.833 52.78 li
177.543 56.38 li
177.543 56.3817 li
177.243 60.332 li
177.243 60.3341 li
176.943 64.6139 li
176.943 64.6159 li
176.643 69.2561 li
176.643 69.2577 li
176.342 74.2274 li
176.342 74.2296 li
176.052 79.5499 li
176.052 79.5504 li
175.752 85.2102 li
175.752 85.2112 li
175.452 91.2112 li
175.452 91.2123 li
175.152 97.5623 li
175.152 97.5639 li
174.862 104.254 li
174.562 111.284 li
174.562 111.285 li
174.262 118.665 li
174.262 118.666 li
173.962 126.376 li
173.962 126.376 li
173.662 134.446 li
173.662 134.447 li
173.372 142.847 li
173.369 142.949 173.407 143.048 173.477 143.121 cv
173.548 143.194 173.645 143.235 173.747 143.235 cv
173.747 142.86 li
.653773 .579889 .56878 .366613 cmyk
f
292.857 142.86 mo
189.012 142.86 li
189.012 142.856 189.012 142.851 189.012 142.847 cv
188.852 138.391 li
188.927 138.391 li
189.227 138.391 li
189.527 138.391 li
189.827 138.391 li
190.127 138.391 li
190.417 138.391 li
190.717 138.391 li
191.017 138.391 li
191.317 138.391 li
191.607 138.391 li
191.907 138.391 li
192.207 138.391 li
192.507 138.391 li
192.807 138.391 li
193.097 138.391 li
193.397 138.391 li
193.697 138.391 li
193.997 138.391 li
194.287 138.391 li
194.587 138.391 li
194.887 138.391 li
195.187 138.391 li
195.487 138.391 li
195.777 138.391 li
196.077 138.391 li
196.377 138.391 li
196.677 138.391 li
196.967 138.391 li
197.267 138.391 li
197.567 138.391 li
197.867 138.391 li
198.167 138.391 li
198.457 138.391 li
198.757 138.391 li
199.057 138.391 li
199.357 138.391 li
199.647 138.391 li
199.947 138.391 li
200.247 138.391 li
200.547 138.391 li
200.847 138.391 li
201.137 138.391 li
201.437 138.391 li
201.737 138.391 li
202.037 138.391 li
202.327 138.391 li
202.627 138.391 li
202.927 138.391 li
203.227 138.391 li
203.527 138.391 li
203.817 138.391 li
204.117 138.391 li
204.417 138.391 li
204.717 138.391 li
205.007 138.391 li
205.307 138.391 li
205.607 138.391 li
205.907 138.391 li
206.207 138.391 li
206.497 138.391 li
206.797 138.391 li
207.097 138.391 li
207.397 138.391 li
207.687 138.391 li
207.987 138.391 li
208.287 138.391 li
208.587 138.391 li
208.887 138.391 li
209.177 138.391 li
209.477 138.391 li
209.777 138.391 li
210.077 138.391 li
210.377 138.391 li
210.667 138.391 li
210.967 138.391 li
211.267 138.391 li
211.567 138.391 li
211.857 138.391 li
212.157 138.391 li
212.457 138.391 li
212.757 138.391 li
213.057 138.391 li
213.347 138.391 li
213.647 138.391 li
213.947 138.391 li
214.247 138.391 li
214.537 138.391 li
214.837 138.391 li
215.137 138.391 li
215.437 138.391 li
215.737 138.391 li
216.027 138.391 li
216.327 138.391 li
216.627 138.391 li
216.927 138.391 li
217.217 138.391 li
217.517 138.391 li
217.817 138.391 li
218.117 138.391 li
218.417 138.391 li
218.707 138.391 li
219.007 138.391 li
219.307 138.391 li
219.607 138.391 li
219.897 138.391 li
220.197 138.391 li
220.497 138.391 li
220.797 138.391 li
221.097 138.391 li
221.387 138.391 li
221.687 138.391 li
221.987 138.391 li
222.287 138.391 li
222.577 138.391 li
222.877 138.391 li
223.177 138.391 li
223.477 138.391 li
223.777 138.391 li
224.067 138.391 li
224.367 138.391 li
224.667 138.391 li
224.967 138.391 li
225.257 138.391 li
225.557 138.391 li
225.857 138.391 li
226.157 138.391 li
226.457 138.391 li
226.747 138.391 li
227.047 138.391 li
227.347 138.391 li
227.647 138.391 li
227.937 138.391 li
228.237 138.391 li
228.537 138.391 li
228.837 138.391 li
229.137 138.391 li
229.427 138.391 li
229.727 138.391 li
230.027 138.391 li
230.327 138.391 li
230.627 138.391 li
230.917 138.391 li
231.217 138.391 li
231.517 138.391 li
231.817 138.391 li
232.107 138.391 li
232.407 138.391 li
232.707 138.391 li
233.007 138.391 li
233.307 138.391 li
233.597 138.391 li
233.897 138.391 li
234.197 138.391 li
234.497 138.391 li
234.787 138.391 li
235.087 138.391 li
235.387 138.391 li
235.687 138.391 li
235.987 138.391 li
236.277 138.391 li
236.577 138.391 li
236.876 138.391 li
237.177 138.391 li
237.467 138.391 li
237.767 138.391 li
238.067 138.391 li
238.367 138.391 li
238.667 138.391 li
238.957 138.391 li
239.257 138.391 li
239.557 138.391 li
239.857 138.391 li
240.147 138.391 li
240.447 138.391 li
240.747 138.391 li
241.047 138.391 li
241.347 138.391 li
241.637 138.391 li
241.937 138.391 li
242.237 138.391 li
242.537 138.391 li
242.827 138.391 li
243.126 138.391 li
243.427 138.391 li
243.727 138.391 li
244.027 138.391 li
244.317 138.391 li
244.617 138.391 li
244.917 138.391 li
245.217 138.391 li
245.507 138.391 li
245.807 138.391 li
246.107 138.391 li
246.407 138.391 li
246.707 138.391 li
246.997 138.391 li
247.297 138.391 li
247.597 138.391 li
247.897 138.391 li
248.187 138.391 li
248.487 138.391 li
248.787 138.391 li
249.086 138.391 li
249.387 138.391 li
249.677 138.391 li
249.977 138.391 li
250.277 138.391 li
250.577 138.391 li
250.876 138.391 li
251.166 138.391 li
251.467 138.391 li
251.767 138.391 li
252.067 138.391 li
252.357 138.391 li
252.657 138.391 li
252.957 138.391 li
253.257 138.391 li
253.557 138.391 li
253.847 138.391 li
254.147 138.391 li
254.447 138.391 li
254.747 138.391 li
255.037 138.391 li
255.336 138.391 li
255.637 138.391 li
255.937 138.391 li
256.237 138.391 li
256.527 138.391 li
256.827 138.391 li
257.126 138.391 li
257.427 138.391 li
257.717 138.391 li
258.017 138.391 li
258.317 138.391 li
258.617 138.391 li
258.917 138.391 li
259.207 138.391 li
259.507 138.391 li
259.807 138.391 li
260.107 138.391 li
260.397 138.391 li
260.697 138.391 li
260.997 138.391 li
261.297 138.391 li
261.597 138.391 li
261.887 138.391 li
262.187 138.391 li
262.487 138.391 li
262.787 138.391 li
263.077 138.391 li
263.376 138.391 li
263.677 138.391 li
263.977 138.391 li
264.277 138.391 li
264.567 138.391 li
264.867 138.391 li
265.167 138.391 li
265.467 138.391 li
265.757 138.391 li
266.057 138.391 li
266.357 138.391 li
266.657 138.391 li
266.957 138.391 li
267.247 138.391 li
267.547 138.391 li
267.847 138.391 li
268.147 138.391 li
268.437 138.391 li
268.737 138.391 li
269.037 138.391 li
269.336 138.391 li
269.637 138.391 li
269.927 138.391 li
270.227 138.391 li
270.527 138.391 li
270.827 138.391 li
271.126 138.391 li
271.416 138.391 li
271.717 138.391 li
272.017 138.391 li
272.317 138.391 li
272.607 138.391 li
272.907 138.391 li
273.207 138.391 li
273.507 138.391 li
273.807 138.391 li
274.097 138.391 li
274.397 138.391 li
274.697 138.391 li
274.997 138.391 li
275.287 138.391 li
275.586 138.391 li
275.887 138.391 li
276.187 138.391 li
276.487 138.391 li
276.777 138.391 li
277.077 138.391 li
277.376 138.391 li
277.677 138.391 li
277.967 138.391 li
278.267 138.391 li
278.567 138.391 li
278.867 138.391 li
279.167 138.391 li
279.457 138.391 li
279.757 138.391 li
280.057 138.391 li
280.357 138.391 li
280.647 138.391 li
280.947 138.391 li
281.247 138.391 li
281.547 138.391 li
281.847 138.391 li
282.137 138.391 li
282.437 138.391 li
282.737 138.391 li
283.037 138.391 li
283.327 138.391 li
283.626 138.391 li
283.927 138.391 li
284.227 138.391 li
284.527 138.391 li
284.817 138.391 li
285.117 138.391 li
285.417 138.391 li
285.717 138.391 li
286.007 138.391 li
286.307 138.391 li
286.607 138.391 li
286.907 138.391 li
287.206 138.391 li
287.497 138.391 li
287.797 138.391 li
288.097 138.391 li
288.397 138.391 li
288.687 138.391 li
288.987 138.391 li
289.287 138.391 li
289.586 138.391 li
289.887 138.391 li
290.177 138.391 li
290.477 138.391 li
290.777 138.391 li
291.077 138.391 li
291.376 138.391 li
291.666 138.391 li
291.967 138.391 li
292.267 138.391 li
292.567 138.391 li
292.857 138.391 li
292.857 142.86 li
.310094 .245731 .251011 3.0518e-05 cmyk
f
188.248 142.485 mo
174.135 142.485 li
174.277 138.391 li
174.337 138.391 li
174.637 138.391 li
174.937 138.391 li
175.237 138.391 li
175.527 138.391 li
175.827 138.391 li
176.127 138.391 li
176.427 138.391 li
176.717 138.391 li
177.017 138.391 li
177.317 138.391 li
177.617 138.391 li
177.917 138.391 li
178.207 138.391 li
178.507 138.391 li
178.807 138.391 li
179.107 138.391 li
179.397 138.391 li
179.697 138.391 li
179.997 138.391 li
180.297 138.391 li
180.597 138.391 li
180.887 138.391 li
181.187 138.391 li
181.487 138.391 li
181.787 138.391 li
182.077 138.391 li
182.377 138.391 li
182.677 138.391 li
182.977 138.391 li
183.277 138.391 li
183.567 138.391 li
183.867 138.391 li
184.167 138.391 li
184.467 138.391 li
184.757 138.391 li
185.057 138.391 li
185.357 138.391 li
185.657 138.391 li
185.957 138.391 li
186.247 138.391 li
186.547 138.391 li
186.847 138.391 li
187.147 138.391 li
187.437 138.391 li
187.737 138.391 li
188.037 138.391 li
188.102 138.391 li
188.248 142.485 li
.403967 .328161 .332891 .00479133 cmyk
f
189.012 142.86 mo
173.747 142.86 li
173.747 138.391 li
174.037 138.391 li
174.277 138.391 li
174.135 142.485 li
188.248 142.485 li
188.102 138.391 li
188.337 138.391 li
188.637 138.391 li
188.852 138.391 li
189.012 142.847 li
189.012 142.851 189.012 142.856 189.012 142.86 cv
173.747 142.86 mo
173.747 142.86 li
.626795 .547021 .537102 .276127 cmyk
f
173.747 142.86 mo
174.122 142.86 li
174.122 138.391 li
173.747 138.391 li
173.747 138.766 li
174.037 138.766 li
174.337 138.766 li
174.637 138.766 li
174.937 138.766 li
175.237 138.766 li
175.527 138.766 li
175.827 138.766 li
176.127 138.766 li
176.427 138.766 li
176.717 138.766 li
177.017 138.766 li
177.317 138.766 li
177.617 138.766 li
177.917 138.766 li
178.207 138.766 li
178.507 138.766 li
178.807 138.766 li
179.107 138.766 li
179.397 138.766 li
179.697 138.766 li
179.997 138.766 li
180.297 138.766 li
180.597 138.766 li
180.887 138.766 li
181.187 138.766 li
181.487 138.766 li
181.787 138.766 li
182.077 138.766 li
182.377 138.766 li
182.677 138.766 li
182.977 138.766 li
183.277 138.766 li
183.567 138.766 li
183.867 138.766 li
184.167 138.766 li
184.467 138.766 li
184.757 138.766 li
185.057 138.766 li
185.357 138.766 li
185.657 138.766 li
185.957 138.766 li
186.247 138.766 li
186.547 138.766 li
186.847 138.766 li
187.147 138.766 li
187.437 138.766 li
187.737 138.766 li
188.037 138.766 li
188.337 138.766 li
188.637 138.766 li
188.927 138.766 li
189.227 138.766 li
189.527 138.766 li
189.827 138.766 li
190.127 138.766 li
190.417 138.766 li
190.717 138.766 li
191.017 138.766 li
191.317 138.766 li
191.607 138.766 li
191.907 138.766 li
192.207 138.766 li
192.507 138.766 li
192.807 138.766 li
193.097 138.766 li
193.397 138.766 li
193.697 138.766 li
193.997 138.766 li
194.287 138.766 li
194.587 138.766 li
194.887 138.766 li
195.187 138.766 li
195.487 138.766 li
195.777 138.766 li
196.077 138.766 li
196.377 138.766 li
196.677 138.766 li
196.967 138.766 li
197.267 138.766 li
197.567 138.766 li
197.867 138.766 li
198.167 138.766 li
198.457 138.766 li
198.757 138.766 li
199.057 138.766 li
199.357 138.766 li
199.647 138.766 li
199.947 138.766 li
200.247 138.766 li
200.547 138.766 li
200.847 138.766 li
201.137 138.766 li
201.437 138.766 li
201.737 138.766 li
202.037 138.766 li
202.327 138.766 li
202.627 138.766 li
202.927 138.766 li
203.227 138.766 li
203.527 138.766 li
203.817 138.766 li
204.117 138.766 li
204.417 138.766 li
204.717 138.766 li
205.007 138.766 li
205.307 138.766 li
205.607 138.766 li
205.907 138.766 li
206.207 138.766 li
206.497 138.766 li
206.797 138.766 li
207.097 138.766 li
207.397 138.766 li
207.687 138.766 li
207.987 138.766 li
208.287 138.766 li
208.587 138.766 li
208.887 138.766 li
209.177 138.766 li
209.477 138.766 li
209.777 138.766 li
210.077 138.766 li
210.377 138.766 li
210.667 138.766 li
210.967 138.766 li
211.267 138.766 li
211.567 138.766 li
211.857 138.766 li
212.157 138.766 li
212.457 138.766 li
212.757 138.766 li
213.057 138.766 li
213.347 138.766 li
213.647 138.766 li
213.947 138.766 li
214.247 138.766 li
214.537 138.766 li
214.837 138.766 li
215.137 138.766 li
215.437 138.766 li
215.737 138.766 li
216.027 138.766 li
216.327 138.766 li
216.627 138.766 li
216.927 138.766 li
217.217 138.766 li
217.517 138.766 li
217.817 138.766 li
218.117 138.766 li
218.417 138.766 li
218.707 138.766 li
219.007 138.766 li
219.307 138.766 li
219.607 138.766 li
219.897 138.766 li
220.197 138.766 li
220.497 138.766 li
220.797 138.766 li
221.097 138.766 li
221.387 138.766 li
221.687 138.766 li
221.987 138.766 li
222.287 138.766 li
222.577 138.766 li
222.877 138.766 li
223.177 138.766 li
223.477 138.766 li
223.777 138.766 li
224.067 138.766 li
224.367 138.766 li
224.667 138.766 li
224.967 138.766 li
225.257 138.766 li
225.557 138.766 li
225.857 138.766 li
226.157 138.766 li
226.457 138.766 li
226.747 138.766 li
227.047 138.766 li
227.347 138.766 li
227.647 138.766 li
227.937 138.766 li
228.237 138.766 li
228.537 138.766 li
228.837 138.766 li
229.137 138.766 li
229.427 138.766 li
229.727 138.766 li
230.027 138.766 li
230.327 138.766 li
230.627 138.766 li
230.917 138.766 li
231.217 138.766 li
231.517 138.766 li
231.817 138.766 li
232.107 138.766 li
232.407 138.766 li
232.707 138.766 li
233.007 138.766 li
233.307 138.766 li
233.597 138.766 li
233.897 138.766 li
234.197 138.766 li
234.497 138.766 li
234.787 138.766 li
235.087 138.766 li
235.387 138.766 li
235.687 138.766 li
235.987 138.766 li
236.277 138.766 li
236.577 138.766 li
236.876 138.766 li
237.177 138.766 li
237.467 138.766 li
237.767 138.766 li
238.067 138.766 li
238.367 138.766 li
238.667 138.766 li
238.957 138.766 li
239.257 138.766 li
239.557 138.766 li
239.857 138.766 li
240.147 138.766 li
240.447 138.766 li
240.747 138.766 li
241.047 138.766 li
241.347 138.766 li
241.637 138.766 li
241.937 138.766 li
242.237 138.766 li
242.537 138.766 li
242.827 138.766 li
243.126 138.766 li
243.427 138.766 li
243.727 138.766 li
244.027 138.766 li
244.317 138.766 li
244.617 138.766 li
244.917 138.766 li
245.217 138.766 li
245.507 138.766 li
245.807 138.766 li
246.107 138.766 li
246.407 138.766 li
246.707 138.766 li
246.997 138.766 li
247.297 138.766 li
247.597 138.766 li
247.897 138.766 li
248.187 138.766 li
248.487 138.766 li
248.787 138.766 li
249.086 138.766 li
249.387 138.766 li
249.677 138.766 li
249.977 138.766 li
250.277 138.766 li
250.577 138.766 li
250.876 138.766 li
251.167 138.766 li
251.467 138.766 li
251.767 138.766 li
252.067 138.766 li
252.357 138.766 li
252.657 138.766 li
252.957 138.766 li
253.257 138.766 li
253.557 138.766 li
253.847 138.766 li
254.147 138.766 li
254.447 138.766 li
254.747 138.766 li
255.037 138.766 li
255.336 138.766 li
255.637 138.766 li
255.937 138.766 li
256.237 138.766 li
256.527 138.766 li
256.827 138.766 li
257.126 138.766 li
257.427 138.766 li
257.717 138.766 li
258.017 138.766 li
258.317 138.766 li
258.617 138.766 li
258.917 138.766 li
259.207 138.766 li
259.507 138.766 li
259.807 138.766 li
260.107 138.766 li
260.397 138.766 li
260.697 138.766 li
260.997 138.766 li
261.297 138.766 li
261.597 138.766 li
261.887 138.766 li
262.187 138.766 li
262.487 138.766 li
262.787 138.766 li
263.077 138.766 li
263.376 138.766 li
263.677 138.766 li
263.977 138.766 li
264.277 138.766 li
264.567 138.766 li
264.867 138.766 li
265.167 138.766 li
265.467 138.766 li
265.757 138.766 li
266.057 138.766 li
266.357 138.766 li
266.657 138.766 li
266.957 138.766 li
267.247 138.766 li
267.547 138.766 li
267.847 138.766 li
268.147 138.766 li
268.437 138.766 li
268.737 138.766 li
269.037 138.766 li
269.336 138.766 li
269.637 138.766 li
269.927 138.766 li
270.227 138.766 li
270.527 138.766 li
270.827 138.766 li
271.126 138.766 li
271.417 138.766 li
271.717 138.766 li
272.017 138.766 li
272.317 138.766 li
272.607 138.766 li
272.907 138.766 li
273.207 138.766 li
273.507 138.766 li
273.807 138.766 li
274.097 138.766 li
274.397 138.766 li
274.697 138.766 li
274.997 138.766 li
275.287 138.766 li
275.586 138.766 li
275.887 138.766 li
276.187 138.766 li
276.487 138.766 li
276.777 138.766 li
277.077 138.766 li
277.376 138.766 li
277.677 138.766 li
277.967 138.766 li
278.267 138.766 li
278.567 138.766 li
278.867 138.766 li
279.167 138.766 li
279.457 138.766 li
279.757 138.766 li
280.057 138.766 li
280.357 138.766 li
280.647 138.766 li
280.947 138.766 li
281.247 138.766 li
281.547 138.766 li
281.847 138.766 li
282.137 138.766 li
282.437 138.766 li
282.737 138.766 li
283.037 138.766 li
283.327 138.766 li
283.626 138.766 li
283.927 138.766 li
284.227 138.766 li
284.527 138.766 li
284.817 138.766 li
285.117 138.766 li
285.417 138.766 li
285.717 138.766 li
286.007 138.766 li
286.307 138.766 li
286.607 138.766 li
286.907 138.766 li
287.207 138.766 li
287.497 138.766 li
287.797 138.766 li
288.097 138.766 li
288.397 138.766 li
288.687 138.766 li
288.987 138.766 li
289.287 138.766 li
289.586 138.766 li
289.887 138.766 li
290.177 138.766 li
290.477 138.766 li
290.777 138.766 li
291.077 138.766 li
291.376 138.766 li
291.667 138.766 li
291.967 138.766 li
292.267 138.766 li
292.567 138.766 li
292.857 138.766 li
292.857 138.391 li
292.482 138.391 li
292.482 142.485 li
173.747 142.485 li
173.747 142.86 li
174.122 142.86 li
173.747 142.86 li
173.747 143.235 li
292.857 143.235 li
292.956 143.235 293.052 143.195 293.122 143.126 cv
293.192 143.056 293.232 142.959 293.232 142.86 cv
293.232 138.391 li
293.232 138.292 293.192 138.195 293.122 138.125 cv
293.052 138.056 292.956 138.016 292.857 138.016 cv
292.567 138.016 li
292.267 138.016 li
291.967 138.016 li
291.667 138.016 li
291.376 138.016 li
291.077 138.016 li
290.777 138.016 li
290.477 138.016 li
290.177 138.016 li
289.887 138.016 li
289.586 138.016 li
289.287 138.016 li
288.987 138.016 li
288.687 138.016 li
288.397 138.016 li
288.097 138.016 li
287.797 138.016 li
287.497 138.016 li
287.207 138.016 li
286.907 138.016 li
286.607 138.016 li
286.307 138.016 li
286.007 138.016 li
285.717 138.016 li
285.417 138.016 li
285.117 138.016 li
284.817 138.016 li
284.527 138.016 li
284.227 138.016 li
283.927 138.016 li
283.626 138.016 li
283.327 138.016 li
283.037 138.016 li
282.737 138.016 li
282.437 138.016 li
282.137 138.016 li
281.847 138.016 li
281.547 138.016 li
281.247 138.016 li
280.947 138.016 li
280.647 138.016 li
280.357 138.016 li
280.057 138.016 li
279.757 138.016 li
279.457 138.016 li
279.167 138.016 li
278.867 138.016 li
278.567 138.016 li
278.267 138.016 li
277.967 138.016 li
277.677 138.016 li
277.376 138.016 li
277.077 138.016 li
276.777 138.016 li
276.487 138.016 li
276.187 138.016 li
275.887 138.016 li
275.586 138.016 li
275.287 138.016 li
274.997 138.016 li
274.697 138.016 li
274.397 138.016 li
274.097 138.016 li
273.807 138.016 li
273.507 138.016 li
273.207 138.016 li
272.907 138.016 li
272.607 138.016 li
272.317 138.016 li
272.017 138.016 li
271.717 138.016 li
271.417 138.016 li
271.126 138.016 li
270.827 138.016 li
270.527 138.016 li
270.227 138.016 li
269.927 138.016 li
269.637 138.016 li
269.336 138.016 li
269.037 138.016 li
268.737 138.016 li
268.437 138.016 li
268.147 138.016 li
267.847 138.016 li
267.547 138.016 li
267.247 138.016 li
266.957 138.016 li
266.657 138.016 li
266.357 138.016 li
266.057 138.016 li
265.757 138.016 li
265.467 138.016 li
265.167 138.016 li
264.867 138.016 li
264.567 138.016 li
264.277 138.016 li
263.977 138.016 li
263.677 138.016 li
263.376 138.016 li
263.077 138.016 li
262.787 138.016 li
262.487 138.016 li
262.187 138.016 li
261.887 138.016 li
261.597 138.016 li
261.297 138.016 li
260.997 138.016 li
260.697 138.016 li
260.397 138.016 li
260.107 138.016 li
259.807 138.016 li
259.507 138.016 li
259.207 138.016 li
258.917 138.016 li
258.617 138.016 li
258.317 138.016 li
258.017 138.016 li
257.717 138.016 li
257.427 138.016 li
257.126 138.016 li
256.827 138.016 li
256.527 138.016 li
256.237 138.016 li
255.937 138.016 li
255.637 138.016 li
255.336 138.016 li
255.037 138.016 li
254.747 138.016 li
254.447 138.016 li
254.147 138.016 li
253.847 138.016 li
253.557 138.016 li
253.257 138.016 li
252.957 138.016 li
252.657 138.016 li
252.357 138.016 li
252.067 138.016 li
251.767 138.016 li
251.467 138.016 li
251.167 138.016 li
250.876 138.016 li
250.577 138.016 li
250.277 138.016 li
249.977 138.016 li
249.677 138.016 li
249.387 138.016 li
249.086 138.016 li
248.787 138.016 li
248.487 138.016 li
248.187 138.016 li
247.897 138.016 li
247.597 138.016 li
247.297 138.016 li
246.997 138.016 li
246.707 138.016 li
246.407 138.016 li
246.107 138.016 li
245.807 138.016 li
245.507 138.016 li
245.217 138.016 li
244.917 138.016 li
244.617 138.016 li
244.317 138.016 li
244.027 138.016 li
243.727 138.016 li
243.427 138.016 li
243.126 138.016 li
242.827 138.016 li
242.537 138.016 li
242.237 138.016 li
241.937 138.016 li
241.637 138.016 li
241.347 138.016 li
241.047 138.016 li
240.747 138.016 li
240.447 138.016 li
240.147 138.016 li
239.857 138.016 li
239.557 138.016 li
239.257 138.016 li
238.957 138.016 li
238.667 138.016 li
238.367 138.016 li
238.067 138.016 li
237.767 138.016 li
237.467 138.016 li
237.177 138.016 li
236.876 138.016 li
236.577 138.016 li
236.277 138.016 li
235.987 138.016 li
235.687 138.016 li
235.387 138.016 li
235.087 138.016 li
234.787 138.016 li
234.497 138.016 li
234.197 138.016 li
233.897 138.016 li
233.597 138.016 li
233.307 138.016 li
233.007 138.016 li
232.707 138.016 li
232.407 138.016 li
232.107 138.016 li
231.817 138.016 li
231.517 138.016 li
231.217 138.016 li
230.917 138.016 li
230.627 138.016 li
230.327 138.016 li
230.027 138.016 li
229.727 138.016 li
229.427 138.016 li
229.137 138.016 li
228.837 138.016 li
228.537 138.016 li
228.237 138.016 li
227.937 138.016 li
227.647 138.016 li
227.347 138.016 li
227.047 138.016 li
226.747 138.016 li
226.457 138.016 li
226.157 138.016 li
225.857 138.016 li
225.557 138.016 li
225.257 138.016 li
224.967 138.016 li
224.667 138.016 li
224.367 138.016 li
224.067 138.016 li
223.777 138.016 li
223.477 138.016 li
223.177 138.016 li
222.877 138.016 li
222.577 138.016 li
222.287 138.016 li
221.987 138.016 li
221.687 138.016 li
221.387 138.016 li
221.097 138.016 li
220.797 138.016 li
220.497 138.016 li
220.197 138.016 li
219.897 138.016 li
219.607 138.016 li
219.307 138.016 li
219.007 138.016 li
218.707 138.016 li
218.417 138.016 li
218.117 138.016 li
217.817 138.016 li
217.517 138.016 li
217.217 138.016 li
216.927 138.016 li
216.627 138.016 li
216.327 138.016 li
216.027 138.016 li
215.737 138.016 li
215.437 138.016 li
215.137 138.016 li
214.837 138.016 li
214.537 138.016 li
214.247 138.016 li
213.947 138.016 li
213.647 138.016 li
213.347 138.016 li
213.057 138.016 li
212.757 138.016 li
212.457 138.016 li
212.157 138.016 li
211.857 138.016 li
211.567 138.016 li
211.267 138.016 li
210.967 138.016 li
210.667 138.016 li
210.377 138.016 li
210.077 138.016 li
209.777 138.016 li
209.477 138.016 li
209.177 138.016 li
208.887 138.016 li
208.587 138.016 li
208.287 138.016 li
207.987 138.016 li
207.687 138.016 li
207.397 138.016 li
207.097 138.016 li
206.797 138.016 li
206.497 138.016 li
206.207 138.016 li
205.907 138.016 li
205.607 138.016 li
205.307 138.016 li
205.007 138.016 li
204.717 138.016 li
204.417 138.016 li
204.117 138.016 li
203.817 138.016 li
203.527 138.016 li
203.227 138.016 li
202.927 138.016 li
202.627 138.016 li
202.327 138.016 li
202.037 138.016 li
201.737 138.016 li
201.437 138.016 li
201.137 138.016 li
200.847 138.016 li
200.547 138.016 li
200.247 138.016 li
199.947 138.016 li
199.647 138.016 li
199.357 138.016 li
199.057 138.016 li
198.757 138.016 li
198.457 138.016 li
198.167 138.016 li
197.867 138.016 li
197.567 138.016 li
197.267 138.016 li
196.967 138.016 li
196.677 138.016 li
196.377 138.016 li
196.077 138.016 li
195.777 138.016 li
195.487 138.016 li
195.187 138.016 li
194.887 138.016 li
194.587 138.016 li
194.287 138.016 li
193.997 138.016 li
193.697 138.016 li
193.397 138.016 li
193.097 138.016 li
192.807 138.016 li
192.507 138.016 li
192.207 138.016 li
191.907 138.016 li
191.607 138.016 li
191.317 138.016 li
191.017 138.016 li
190.717 138.016 li
190.417 138.016 li
190.127 138.016 li
189.827 138.016 li
189.527 138.016 li
189.227 138.016 li
188.927 138.016 li
188.637 138.016 li
188.337 138.016 li
188.037 138.016 li
187.737 138.016 li
187.437 138.016 li
187.147 138.016 li
186.847 138.016 li
186.547 138.016 li
186.247 138.016 li
185.957 138.016 li
185.657 138.016 li
185.357 138.016 li
185.057 138.016 li
184.757 138.016 li
184.467 138.016 li
184.167 138.016 li
183.867 138.016 li
183.567 138.016 li
183.277 138.016 li
182.977 138.016 li
182.677 138.016 li
182.377 138.016 li
182.077 138.016 li
181.787 138.016 li
181.487 138.016 li
181.187 138.016 li
180.887 138.016 li
180.597 138.016 li
180.297 138.016 li
179.997 138.016 li
179.697 138.016 li
179.397 138.016 li
179.107 138.016 li
178.807 138.016 li
178.507 138.016 li
178.207 138.016 li
177.917 138.016 li
177.617 138.016 li
177.317 138.016 li
177.017 138.016 li
176.717 138.016 li
176.427 138.016 li
176.127 138.016 li
175.827 138.016 li
175.527 138.016 li
175.237 138.016 li
174.937 138.016 li
174.637 138.016 li
174.337 138.016 li
174.037 138.016 li
173.747 138.016 li
173.648 138.016 173.552 138.056 173.482 138.125 cv
173.412 138.195 173.372 138.292 173.372 138.391 cv
173.372 142.86 li
173.372 142.959 173.412 143.056 173.482 143.126 cv
173.552 143.195 173.648 143.235 173.747 143.235 cv
173.747 142.86 li
cp
.710841 .650507 .640253 .693324 cmyk
f
293.232 142.86 mo
293.232 23.7402 li
293.232 23.5331 293.064 23.3652 292.857 23.3652 cv
292.65 23.3652 292.482 23.5331 292.482 23.7402 cv
292.482 142.86 li
292.482 143.067 292.65 143.235 292.857 143.235 cv
293.064 143.235 293.232 143.067 293.232 142.86 cv
.75021 .679683 .670222 .90164 cmyk
f
292.857 143.235 mo
296.217 143.235 li
296.424 143.235 296.592 143.067 296.592 142.86 cv
296.592 142.653 296.424 142.485 296.217 142.485 cv
292.857 142.485 li
292.65 142.485 292.482 142.653 292.482 142.86 cv
292.482 143.067 292.65 143.235 292.857 143.235 cv
f
292.857 119.415 mo
296.217 119.415 li
296.424 119.415 296.592 119.247 296.592 119.04 cv
296.592 118.833 296.424 118.665 296.217 118.665 cv
292.857 118.665 li
292.65 118.665 292.482 118.833 292.482 119.04 cv
292.482 119.247 292.65 119.415 292.857 119.415 cv
f
292.857 95.585 mo
296.217 95.585 li
296.424 95.585 296.592 95.4171 296.592 95.21 cv
296.592 95.0029 296.424 94.835 296.217 94.835 cv
292.857 94.835 li
292.65 94.835 292.482 95.0029 292.482 95.21 cv
292.482 95.4171 292.65 95.585 292.857 95.585 cv
f
292.857 71.7651 mo
296.217 71.7651 li
296.424 71.7651 296.592 71.5972 296.592 71.3901 cv
296.592 71.183 296.424 71.0151 296.217 71.0151 cv
292.857 71.0151 li
292.65 71.0151 292.482 71.183 292.482 71.3901 cv
292.482 71.5972 292.65 71.7651 292.857 71.7651 cv
f
292.857 47.9453 mo
296.217 47.9453 li
296.424 47.9453 296.592 47.7774 296.592 47.5703 cv
296.592 47.3632 296.424 47.1953 296.217 47.1953 cv
292.857 47.1953 li
292.65 47.1953 292.482 47.3632 292.482 47.5703 cv
292.482 47.7774 292.65 47.9453 292.857 47.9453 cv
f
292.857 24.1152 mo
296.217 24.1152 li
296.424 24.1152 296.592 23.9473 296.592 23.7402 cv
296.592 23.5331 296.424 23.3652 296.217 23.3652 cv
292.857 23.3652 li
292.65 23.3652 292.482 23.5331 292.482 23.7402 cv
292.482 23.9473 292.65 24.1152 292.857 24.1152 cv
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginMCBLKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B854D0E3687C43D46768E11610> |-/six <1C60D8A8C9B7EF322BACEC3D6ABEF2D493EDC493AA22ED42125C47DF2396DE843240A24151C3116F0DCEE068EC75B404A70B0E3A92C2307D093030C4F08B5CC0A75F4F4D7C70C5CD3B07E718D5DA84710CE02FF093BE8B5ED477F329DF9AC8554D46651B2A99890C549B5152AB0899BB31DC610CEE59FE1F4C3BE037BFF7F7AE7EDC6D596E9E9398287209A7C703150F7EA84F1C65DCD68CCC47A3B7F9EF77F610D53784F89B61AB4160F9D214F618A6C0032B66C3DB575FE49E073B7AB1C1C6CA> |-/eight <1C60D8A8C9B7EF322BB1E6B7658B273FB04B6EA2FDD83BE014315CEA310C9045661E4654F5FAA18E921C35D5D5266AB0AB839D962ABE974A291E63893114CACA79253F9F2FA5DBD832A15E9A146C3FAF70E186074467C5FF9BFF3446DA2979E197C33ECF2E6672D0ABB4DD84DADA6F0875D027C1012708E022D3B91B078729D3EB37FF9AB4379F6AE8761C6A64E65D5782F4A15C32B5788322C1277C7EEACA49FCEF1A946497EBAE7710FA41A32E95C02F9037E734AB7501DA6FA4D1255B1B5E2A30AD357C72139096879BB9225AA54D6163D99B65B907C933335C31755E7599F49EDF67E30B707AA1BB3DFB155476D77FA4345C2EDAF4F74461> |-/y <1C60D8A8C9B7A73DB9AA12572CE44B37D0759EC5FA4258DA87660F3841304B61A1A911D1876BE6D5484230C2A9DECADC4A3BB259186F9713382F53071656420086C18502612AEB2A0E39781AC31868BC5BE3AB2872591151CD2F994021F04AB4E3C05AD2A97CE0F737B6F0C53FBA3CB18D70D123> |-systemdict /gcheck known {setglobal} if end {end} ifendMCBLKO+Helvetica /Encoding getdup 46 /period putdup 54 /six putdup 56 /eight putdup 121 /y putpop%ADOEndSubsetFont
/MCBLKO+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /.notdef /eight 40{/.notdef}rp /a /b /.notdef /d /e /f /g /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u /.notdef /w /.notdef /y 5{/.notdef}rp /minus 128{/.notdef}rp]MCBLKO+Helvetica nfMCBLKO+Helvetica*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf299.577 145.729 mo(0)sh299.577 121.91 mo(0.2)sh299.577 98.0898 mo(0.4)sh299.577 74.2598 mo(0.6)sh299.577 50.4399 mo(0.8)sh299.577 26.6196 mo(1)shMCBLKO+Helvetica*1 [10 -1.22465e-15 -1.22465e-15 -10 0 0 ]msf200.837 170.279 mo(signal du)sh240.866 170.279 mo(r)sh244.096 170.279 mo(ation)shMCBLKO+Helvetica*1 [-6.12324e-16 10 10 6.12323e-16 0 0 ]msf319.045 53.0098 mo(signal density)[5 2.22168 5.56152 5.56152 5.56152 2.22168 2.77832 5.56152 5.56152 5.56152 5 2.22168 2.77832 0 ]ysh173.747 68.0903 mo
174.025 68.0903 li
174.312 68.0997 li
174.337 68.1001 li
174.637 68.1001 li
174.637 67.3501 li
173.964 67.6814 li
174.232 68.2251 li
174.506 69.2515 li
174.79 70.6505 li
175.086 72.3312 li
175.385 74.2686 li
175.683 76.4461 li
175.972 78.8306 li
175.972 78.8269 li
176.272 81.407 li
176.272 81.4022 li
176.571 84.1322 li
176.571 84.1282 li
176.871 86.9983 li
176.87 86.9956 li
177.171 89.9756 li
177.17 89.9709 li
177.46 93.0408 li
177.46 93.0417 li
177.76 96.1716 li
177.76 96.1708 li
178.06 99.3408 li
178.36 102.521 li
178.36 102.518 li
178.65 105.698 li
178.65 105.702 li
178.95 108.841 li
178.95 108.843 li
179.251 111.933 li
179.251 111.935 li
179.551 114.944 li
179.551 114.947 li
179.851 117.847 li
179.851 117.848 li
180.141 120.628 li
180.142 120.636 li
180.442 123.256 li
180.443 123.262 li
180.742 125.711 li
180.743 125.719 li
181.044 127.969 li
181.045 127.977 li
181.334 129.997 li
181.337 130.015 li
181.637 131.795 li
181.641 131.817 li
181.941 133.317 li
181.949 133.351 li
182.249 134.561 li
182.266 134.619 li
182.566 135.51 li
182.613 135.62 li
182.904 136.17 li
182.968 136.293 183.062 136.392 183.181 136.464 cv
183.481 136.643 li
183.739 136.798 184.067 136.783 184.31 136.605 cv
184.61 136.386 li
184.709 136.313 184.789 136.217 184.842 136.107 cv
185.142 135.487 li
185.191 135.356 li
185.481 134.286 li
185.493 134.234 li
185.793 132.705 li
185.799 132.671 li
186.099 130.661 li
186.102 130.639 li
186.402 128.108 li
186.403 128.093 li
186.703 125.033 li
186.705 125.02 li
186.995 121.4 li
186.995 121.394 li
187.295 117.194 li
187.295 117.187 li
187.595 112.377 li
187.596 112.371 li
187.896 106.931 li
187.896 106.926 li
188.186 100.836 li
188.186 100.833 li
188.486 94.0635 li
188.486 94.0604 li
188.786 86.5804 li
188.787 86.5777 li
189.086 78.3775 li
189.086 78.3752 li
189.386 69.4255 li
188.637 69.4004 li
188.637 70.1504 li
188.927 70.1504 li
188.952 70.1499 li
189.253 70.1397 li
189.251 70.1397 li
189.551 70.13 li
189.552 70.1299 li
189.852 70.1197 li
189.877 70.1185 li
190.164 70.0993 li
190.442 70.0899 li
190.467 70.0887 li
190.767 70.0686 li
191.067 70.0486 li
191.367 70.0286 li
191.369 70.0285 li
191.659 70.0085 li
191.657 70.0086 li
191.957 69.9886 li
191.982 69.9865 li
192.269 69.9575 li
192.556 69.9388 li
192.582 69.9366 li
192.882 69.9064 li
192.884 69.9062 li
193.173 69.8764 li
193.172 69.8766 li
193.472 69.8463 li
193.471 69.8464 li
193.771 69.8166 li
193.796 69.8137 li
194.086 69.7751 li
194.365 69.7459 li
194.386 69.7434 li
194.686 69.7034 li
194.685 69.7035 li
194.973 69.6655 li
195.262 69.6364 li
195.286 69.6335 li
195.586 69.5935 li
195.614 69.5893 li
195.89 69.5418 li
196.176 69.5036 li
196.476 69.4636 li
196.5 69.4601 li
196.8 69.4103 li
196.805 69.4094 li
197.095 69.3591 li
197.09 69.36 li
197.378 69.3121 li
197.666 69.2737 li
197.714 69.2657 li
198.001 69.2081 li
198.29 69.1603 li
198.295 69.1594 li
198.585 69.1091 li
198.604 69.1055 li
198.892 69.0479 li
199.18 69.0001 li
199.204 68.9956 li
199.504 68.9356 li
199.509 68.9346 li
199.785 68.8775 li
200.07 68.8302 li
200.094 68.8258 li
200.394 68.7657 li
200.418 68.7605 li
200.706 68.6931 li
200.993 68.636 li
200.999 68.6348 li
201.289 68.5747 li
201.308 68.5706 li
201.596 68.5031 li
201.884 68.4453 li
201.907 68.4405 li
202.207 68.3706 li
202.213 68.3692 li
202.488 68.3029 li
202.774 68.2457 li
202.797 68.2407 li
203.097 68.1709 li
203.098 68.1707 li
203.398 68.1004 li
203.421 68.0947 li
203.711 68.017 li
203.992 67.9494 li
203.987 67.9507 li
204.287 67.8808 li
204.31 67.8751 li
204.599 67.7979 li
204.888 67.7302 li
204.915 67.7233 li
205.205 67.6437 li
205.2 67.6451 li
205.489 67.568 li
205.778 67.5002 li
205.799 67.4949 li
206.099 67.4153 li
206.1 67.4151 li
206.4 67.335 li
206.407 67.3333 li
206.697 67.2532 li
206.712 67.2487 li
207.001 67.1621 li
207.29 67.0849 li
207.59 67.0049 li
207.619 66.9967 li
207.895 66.9112 li
208.18 66.8349 li
208.203 66.8286 li
208.492 66.7417 li
208.779 66.6653 li
208.803 66.6585 li
209.103 66.5682 li
209.109 66.5665 li
209.399 66.4767 li
209.392 66.4788 li
209.692 66.3889 li
209.693 66.3885 li
209.993 66.2982 li
209.992 66.2985 li
210.292 66.2087 li
210.592 66.1189 li
210.6 66.1165 li
210.89 66.0261 li
210.905 66.0215 li
211.193 65.925 li
211.482 65.8386 li
211.782 65.7487 li
211.812 65.7392 li
212.087 65.6441 li
212.372 65.5588 li
212.394 65.5518 li
212.694 65.4517 li
212.983 65.3552 li
213.272 65.2688 li
213.302 65.2591 li
213.588 65.1604 li
213.884 65.0616 li
214.184 64.9614 li
214.183 64.9619 li
214.483 64.8622 li
214.492 64.8594 li
214.778 64.7604 li
215.074 64.6616 li
215.095 64.6544 li
215.384 64.5483 li
215.674 64.4517 li
215.974 64.3515 li
216.002 64.3415 li
216.278 64.2371 li
216.564 64.1416 li
216.584 64.1345 li
216.874 64.0284 li
217.164 63.9316 li
217.192 63.9216 li
217.482 63.8117 li
217.475 63.8143 li
217.765 63.708 li
218.053 63.6121 li
218.076 63.6042 li
218.376 63.4939 li
218.374 63.4944 li
218.675 63.3845 li
218.683 63.3815 li
218.973 63.2717 li
218.966 63.2741 li
219.266 63.1638 li
219.265 63.1643 li
219.565 63.0544 li
219.865 62.9444 li
219.873 62.9416 li
220.163 62.8317 li
220.156 62.8342 li
220.456 62.7239 li
220.474 62.7168 li
220.765 62.6008 li
221.056 62.4939 li
221.055 62.4942 li
221.355 62.3844 li
221.384 62.3731 li
221.659 62.2591 li
221.945 62.1545 li
222.245 62.0445 li
222.265 62.0367 li
222.566 61.9166 li
222.574 61.913 li
222.849 61.7989 li
223.135 61.6946 li
223.156 61.6864 li
223.445 61.5706 li
223.735 61.4646 li
223.756 61.4565 li
224.056 61.3363 li
224.064 61.3331 li
224.35 61.2147 li
224.645 61.097 li
224.645 61.0967 li
224.946 60.9766 li
225.246 60.8564 li
225.254 60.8531 li
225.538 60.7353 li
225.835 60.6172 li
225.836 60.6166 li
226.136 60.4965 li
226.436 60.3764 li
226.736 60.2564 li
226.743 60.2534 li
227.029 60.1355 li
227.326 60.0165 li
227.626 59.8964 li
227.644 59.8886 li
227.94 59.7608 li
228.22 59.6447 li
228.516 59.5263 li
228.535 59.5184 li
228.826 59.3925 li
229.116 59.2763 li
229.135 59.2683 li
229.429 59.1408 li
229.714 59.023 li
229.724 59.0184 li
230.016 58.8925 li
230.306 58.7763 li
230.325 58.7683 li
230.615 58.6425 li
230.905 58.5264 li
230.933 58.5146 li
231.219 58.3866 li
231.505 58.2626 li
231.796 58.1465 li
231.815 58.1384 li
232.115 58.0085 li
232.123 58.0048 li
232.41 57.8762 li
232.706 57.7478 li
232.704 57.7484 li
232.996 57.6225 li
233.286 57.5063 li
233.305 57.4984 li
233.605 57.3685 li
233.614 57.3645 li
233.899 57.2367 li
234.195 57.1088 li
234.196 57.1082 li
234.496 56.9778 li
234.495 56.9784 li
234.795 56.8485 li
234.804 56.8447 li
235.088 56.7171 li
235.385 56.5886 li
235.404 56.5798 li
235.694 56.4443 li
235.985 56.3187 li
235.986 56.3182 li
236.286 56.1878 li
236.293 56.1845 li
236.579 56.0566 li
236.875 55.9284 li
236.894 55.9197 li
237.184 55.7842 li
237.475 55.6588 li
237.484 55.6547 li
237.77 55.5266 li
238.066 55.3977 li
238.084 55.3898 li
238.374 55.2545 li
238.665 55.1286 li
238.684 55.1199 li
238.979 54.9822 li
239.259 54.8569 li
239.556 54.7282 li
239.574 54.7199 li
239.865 54.5845 li
240.156 54.4578 li
240.182 54.4458 li
240.459 54.3124 li
240.746 54.1878 li
240.763 54.1799 li
241.063 54.0402 li
241.355 53.9042 li
241.645 53.7785 li
241.673 53.7656 li
241.949 53.6323 li
242.235 53.5085 li
242.255 53.4997 li
242.554 53.3596 li
242.854 53.2195 li
242.862 53.2158 li
243.139 53.0823 li
243.426 52.9578 li
243.442 52.9503 li
243.743 52.8106 li
243.745 52.8098 li
244.045 52.6697 li
244.339 52.532 li
244.623 52.4047 li
244.634 52.3997 li
244.934 52.2595 li
244.933 52.2599 li
245.233 52.1203 li
245.534 51.9801 li
245.544 51.9756 li
245.83 51.8374 li
246.125 51.6995 li
246.124 51.6999 li
246.424 51.5602 li
246.425 51.5598 li
246.724 51.4197 li
247.024 51.2795 li
247.033 51.2754 li
247.318 51.1375 li
247.613 51.0006 li
247.615 50.9997 li
247.915 50.8596 li
248.215 50.7195 li
248.222 50.7158 li
248.51 50.5774 li
248.804 50.4397 li
249.104 50.2996 li
249.404 50.1594 li
249.402 50.1602 li
249.703 50.0206 li
249.713 50.0156 li
250 49.8771 li
250.295 49.7395 li
250.294 49.7399 li
250.594 49.6003 li
250.613 49.5908 li
250.903 49.4454 li
251.193 49.3102 li
251.203 49.3057 li
251.488 49.1677 li
251.784 49.0299 li
251.785 49.0295 li
252.085 48.8894 li
252.102 48.8808 li
252.397 48.7334 li
252.679 48.5979 li
252.974 48.4597 li
253.274 48.3196 li
253.291 48.3114 li
253.584 48.1656 li
253.875 48.0295 li
253.883 48.0254 li
254.173 47.8853 li
254.183 47.8808 li
254.473 47.7353 li
254.763 47.6003 li
254.764 47.5998 li
255.064 47.4597 li
255.091 47.4465 li
255.368 47.3034 li
255.654 47.1697 li
255.671 47.1615 li
255.963 47.0159 li
256.255 46.8796 li
256.554 46.7395 li
256.581 46.7263 li
256.858 46.5833 li
257.144 46.4495 li
257.162 46.4408 li
257.453 46.2956 li
257.744 46.1598 li
257.772 46.1463 li
258.048 46.0034 li
258.334 45.8703 li
258.353 45.8608 li
258.644 45.7151 li
258.933 45.5803 li
258.953 45.5708 li
259.248 45.423 li
259.532 45.2861 li
259.542 45.2812 li
259.843 45.1308 li
260.134 44.9853 li
260.424 44.8503 li
260.452 44.8362 li
260.728 44.6932 li
261.013 44.5602 li
261.033 44.5508 li
261.323 44.4055 li
261.613 44.2706 li
261.633 44.2612 li
261.933 44.1112 li
261.942 44.1062 li
262.218 43.9631 li
262.504 43.8303 li
262.523 43.8208 li
262.823 43.6704 li
262.822 43.6708 li
263.118 43.5229 li
263.403 43.3853 li
263.412 43.3808 li
263.712 43.2309 li
263.711 43.2313 li
264.004 43.0855 li
264.295 42.9495 li
264.312 42.9408 li
264.612 42.7909 li
264.621 42.7864 li
264.906 42.6392 li
265.193 42.4958 li
265.484 42.3596 li
265.501 42.3514 li
265.802 42.2015 li
265.812 42.1965 li
266.097 42.0488 li
266.384 41.9052 li
266.674 41.7702 li
266.692 41.7612 li
266.992 41.6112 li
266.993 41.6108 li
267.293 41.4604 li
267.301 41.4563 li
267.585 41.3092 li
267.874 41.1656 li
268.165 41.0295 li
268.183 41.0209 li
268.482 40.871 li
268.491 40.8665 li
268.777 40.7189 li
269.072 40.5712 li
269.073 40.5708 li
269.363 40.4252 li
269.653 40.2902 li
269.672 40.2812 li
269.973 40.1308 li
269.982 40.1262 li
270.266 39.9791 li
270.562 39.831 li
270.862 39.6811 li
271.162 39.5312 li
271.163 39.5307 li
271.463 39.3803 li
271.471 39.3762 li
271.746 39.2338 li
272.033 39.1007 li
272.054 39.0908 li
272.353 38.9404 li
272.352 38.9408 li
272.652 38.7909 li
272.661 38.7864 li
272.946 38.6392 li
273.242 38.4911 li
273.542 38.3412 li
273.843 38.1908 li
274.143 38.0409 li
274.151 38.0364 li
274.437 37.8888 li
274.732 37.7411 li
275.032 37.5912 li
275.033 37.5908 li
275.333 37.4404 li
275.341 37.4363 li
275.626 37.2891 li
275.922 37.141 li
275.921 37.1415 li
276.222 36.9916 li
276.223 36.9911 li
276.522 36.8412 li
276.523 36.8408 li
276.823 36.6904 li
276.831 36.6863 li
277.117 36.5387 li
277.412 36.391 li
277.712 36.2411 li
277.711 36.2416 li
278.012 36.0917 li
278.022 36.0862 li
278.308 35.9383 li
278.602 35.7909 li
278.902 35.641 li
279.202 35.4911 li
279.502 35.3412 li
279.512 35.3362 li
279.795 35.1891 li
280.092 35.0414 li
280.093 35.0409 li
280.393 34.891 li
280.692 34.7411 li
280.701 34.7366 li
280.987 34.5888 li
281.283 34.4404 li
281.282 34.4408 li
281.582 34.2909 li
281.581 34.2914 li
281.882 34.1415 li
281.901 34.1317 li
282.196 33.974 li
282.477 33.8288 li
282.772 33.6811 li
283.072 33.5312 li
283.073 33.5307 li
283.373 33.3803 li
283.381 33.3762 li
283.666 33.2287 li
283.962 33.081 li
283.961 33.0814 li
284.262 32.9315 li
284.263 32.9311 li
284.562 32.7812 li
284.563 32.7807 li
284.863 32.6303 li
284.889 32.617 li
285.165 32.4645 li
285.452 32.3212 li
285.453 32.3208 li
285.753 32.1704 li
285.751 32.1713 li
286.052 32.0214 li
286.062 32.0164 li
286.347 31.8688 li
286.643 31.7211 li
286.942 31.5712 li
286.96 31.5619 li
287.251 31.4065 li
287.542 31.2612 li
287.551 31.2566 li
287.837 31.1087 li
288.133 30.9609 li
288.433 30.811 li
288.732 30.6611 li
288.759 30.6468 li
289.036 30.494 li
289.322 30.351 li
289.622 30.2011 li
289.922 30.0512 li
290.223 29.9008 li
290.232 29.8963 li
290.522 29.7464 li
290.53 29.7421 li
290.821 29.5868 li
291.113 29.4404 li
291.112 29.4408 li
291.412 29.2909 li
291.712 29.141 li
291.721 29.1365 li
292.011 28.9866 li
292.019 28.9823 li
292.311 28.8267 li
292.602 28.6811 li
292.902 28.5312 li
292.912 28.5262 li
293.202 28.3758 li
293.57 28.1851 293.713 27.7325 293.523 27.3647 cv
293.332 26.997 292.879 26.8535 292.512 27.0441 cv
292.226 27.1924 li
291.932 27.3394 li
291.632 27.4893 li
291.615 27.4982 li
291.318 27.6561 li
291.037 27.8012 li
290.741 27.9493 li
290.441 28.0992 li
290.441 28.0996 li
290.141 28.25 li
290.124 28.2584 li
289.828 28.4163 li
289.548 28.561 li
289.251 28.7095 li
288.951 28.8595 li
288.651 29.0094 li
288.352 29.1593 li
288.324 29.1735 li
288.048 29.3263 li
287.762 29.4693 li
287.462 29.6192 li
287.161 29.7696 li
287.152 29.7742 li
286.867 29.9217 li
286.571 30.0694 li
286.553 30.0787 li
286.262 30.2341 li
285.972 30.3795 li
285.672 30.5294 li
285.663 30.5339 li
285.378 30.681 li
285.082 30.8287 li
285.08 30.8296 li
284.78 30.98 li
284.781 30.9796 li
284.481 31.1295 li
284.455 31.1433 li
284.178 31.2959 li
283.891 31.44 li
283.892 31.4395 li
283.592 31.5894 li
283.593 31.589 li
283.292 31.7389 li
283.291 31.7393 li
282.991 31.8892 li
282.982 31.8938 li
282.696 32.0415 li
282.401 32.19 li
282.401 32.1895 li
282.102 32.3394 li
281.802 32.4893 li
281.793 32.4939 li
281.503 32.6438 li
281.494 32.6485 li
281.204 32.8036 li
280.912 32.9489 li
280.911 32.9493 li
280.611 33.0992 li
280.61 33.0996 li
280.311 33.25 li
280.303 33.2541 li
280.018 33.4013 li
279.722 33.5494 li
279.422 33.6993 li
279.423 33.6989 li
279.122 33.8488 li
279.111 33.8542 li
278.826 34.0021 li
278.531 34.1495 li
278.231 34.2994 li
277.932 34.4493 li
277.632 34.5992 li
277.622 34.6042 li
277.338 34.7517 li
277.042 34.8991 li
277.041 34.8995 li
276.741 35.0494 li
276.441 35.1993 li
276.432 35.2038 li
276.147 35.3512 li
275.851 35.5 li
275.852 35.4996 li
275.552 35.6495 li
275.553 35.6491 li
275.252 35.799 li
275.251 35.7994 li
274.951 35.9493 li
274.942 35.9538 li
274.657 36.1012 li
274.36 36.25 li
274.361 36.2496 li
274.062 36.3995 li
273.762 36.5494 li
273.753 36.5539 li
273.467 36.7015 li
273.172 36.8492 li
272.871 36.9996 li
272.571 37.1495 li
272.272 37.2994 li
272.263 37.3039 li
271.977 37.4515 li
271.682 37.5992 li
271.681 37.5996 li
271.391 37.7449 li
271.101 37.8798 li
271.072 37.8938 li
270.786 38.0415 li
270.49 38.19 li
270.491 38.1895 li
270.191 38.3394 li
269.892 38.4893 li
269.592 38.6392 li
269.583 38.6438 li
269.297 38.7913 li
269.01 38.9349 li
268.72 39.0701 li
268.7 39.0796 li
268.401 39.23 li
268.401 39.2296 li
268.102 39.3795 li
268.093 39.384 li
267.807 39.5316 li
267.52 39.675 li
267.23 39.8108 li
267.213 39.819 li
266.912 39.9689 li
266.902 39.9739 li
266.616 40.1216 li
266.32 40.27 li
266.321 40.2696 li
266.031 40.4149 li
265.74 40.5501 li
265.721 40.5596 li
265.421 40.71 li
265.413 40.7141 li
265.128 40.8612 li
264.84 41.0048 li
264.549 41.1409 li
264.531 41.1495 li
264.231 41.2994 li
264.223 41.3039 li
263.938 41.4511 li
263.651 41.5947 li
263.36 41.7307 li
263.343 41.7389 li
263.042 41.8888 li
263.041 41.8892 li
262.746 42.0368 li
262.46 42.1748 li
262.451 42.1793 li
262.151 42.3292 li
262.151 42.3296 li
261.86 42.4754 li
261.571 42.6102 li
261.542 42.6242 li
261.257 42.7718 li
260.972 42.9145 li
260.681 43.0497 li
260.66 43.0596 li
260.37 43.2052 li
260.08 43.3402 li
260.052 43.3542 li
259.776 43.4973 li
259.49 43.6302 li
259.472 43.6392 li
259.172 43.7891 li
258.877 43.9367 li
258.591 44.0742 li
258.58 44.0796 li
258.29 44.2254 li
258 44.3602 li
257.981 44.3697 li
257.69 44.5152 li
257.401 44.6502 li
257.373 44.6638 li
257.097 44.8066 li
256.81 44.9403 li
256.791 44.9493 li
256.501 45.0945 li
256.209 45.2307 li
256.182 45.2439 li
255.906 45.3869 li
255.619 45.5208 li
255.32 45.6609 li
255.303 45.6691 li
255.01 45.8147 li
254.719 45.9509 li
254.692 45.9641 li
254.416 46.1071 li
254.129 46.241 li
254.13 46.2405 li
253.83 46.3802 li
253.812 46.3892 li
253.516 46.5368 li
253.235 46.6728 li
252.94 46.8108 li
252.923 46.819 li
252.63 46.9648 li
252.339 47.1008 li
252.039 47.241 li
252.032 47.2447 li
251.742 47.3843 li
251.731 47.3892 li
251.44 47.5348 li
251.15 47.6707 li
251.151 47.6703 li
250.85 47.8104 li
250.84 47.8149 li
250.555 47.9529 li
250.26 48.0902 li
250.24 48.0996 li
249.951 48.245 li
249.66 48.3802 li
249.659 48.3806 li
249.36 48.5208 li
249.351 48.5249 li
249.066 48.6627 li
248.771 48.7997 li
248.769 48.8005 li
248.469 48.9407 li
248.169 49.0808 li
247.869 49.221 li
247.862 49.2246 li
247.575 49.3625 li
247.28 49.5007 li
246.98 49.6409 li
246.982 49.6401 li
246.681 49.7797 li
246.67 49.7847 li
246.384 49.9228 li
246.089 50.0608 li
245.789 50.2009 li
245.79 50.2005 li
245.49 50.3402 li
245.49 50.3406 li
245.19 50.4807 li
245.181 50.4848 li
244.895 50.6228 li
244.6 50.7606 li
244.3 50.9002 li
244.299 50.9006 li
244.005 51.0383 li
243.72 51.1656 li
243.709 51.1707 li
243.409 51.3108 li
243.11 51.4509 li
243.111 51.4501 li
242.819 51.5859 li
242.528 51.7126 li
242.501 51.7246 li
242.214 51.863 li
241.919 52.0007 li
241.629 52.1363 li
241.339 52.262 li
241.311 52.2749 li
241.035 52.4083 li
240.749 52.532 li
240.731 52.5404 li
240.43 52.6805 li
240.139 52.8161 li
239.848 52.9426 li
239.822 52.9546 li
239.545 53.088 li
239.258 53.2126 li
239.24 53.2205 li
238.95 53.3558 li
238.658 53.4823 li
238.65 53.4859 li
238.36 53.6158 li
238.349 53.6209 li
238.059 53.7565 li
237.769 53.8821 li
237.75 53.8904 li
237.459 54.0261 li
237.168 54.1525 li
237.161 54.1558 li
236.875 54.2836 li
236.579 54.4115 li
236.559 54.4207 li
236.269 54.5563 li
235.979 54.6819 li
235.97 54.6856 li
235.684 54.8137 li
235.388 54.9426 li
235.389 54.942 li
235.089 55.0719 li
235.069 55.0808 li
234.779 55.2164 li
234.489 55.3421 li
234.481 55.3458 li
234.196 55.4734 li
233.899 55.6017 li
233.898 55.6023 li
233.598 55.7326 li
233.599 55.732 li
233.299 55.8619 li
233.29 55.866 li
233.005 55.9937 li
232.718 56.1177 li
232.428 56.234 li
232.409 56.2418 li
232.109 56.3717 li
232.108 56.3723 li
231.808 56.5026 li
231.8 56.5059 li
231.515 56.6339 li
231.228 56.7579 li
230.938 56.874 li
230.919 56.8821 li
230.619 57.012 li
230.61 57.0157 li
230.334 57.1394 li
230.048 57.2538 li
230.029 57.262 li
229.738 57.3878 li
229.448 57.504 li
229.429 57.5118 li
229.134 57.6395 li
228.85 57.7573 li
228.839 57.762 li
228.548 57.8878 li
228.258 58.004 li
228.239 58.0118 li
227.948 58.1377 li
227.658 58.254 li
227.65 58.2573 li
227.36 58.3774 li
227.349 58.3819 li
227.059 58.5077 li
226.768 58.6241 li
226.468 58.7442 li
226.461 58.7471 li
226.174 58.8655 li
225.878 58.9838 li
225.578 59.1041 li
225.278 59.2242 li
225.28 59.2237 li
224.979 59.3433 li
224.97 59.3471 li
224.684 59.4657 li
224.388 59.5841 li
224.088 59.704 li
224.089 59.7038 li
223.789 59.8234 li
223.78 59.8271 li
223.494 59.9456 li
223.208 60.06 li
222.919 60.1658 li
222.898 60.1739 li
222.609 60.2898 li
222.319 60.3958 li
222.289 60.4073 li
222.004 60.5257 li
221.718 60.6399 li
221.429 60.746 li
221.129 60.8557 li
221.1 60.8671 li
220.824 60.9813 li
220.539 61.0858 li
220.538 61.0862 li
220.238 61.1966 li
220.219 61.2036 li
219.928 61.3196 li
219.638 61.4265 li
219.631 61.429 li
219.344 61.5377 li
219.049 61.6459 li
218.749 61.7556 li
218.748 61.7561 li
218.448 61.8665 li
218.441 61.8689 li
218.156 61.9769 li
217.859 62.0857 li
217.858 62.0862 li
217.569 62.1924 li
217.281 62.2883 li
217.258 62.296 li
216.958 62.4064 li
216.951 62.409 li
216.675 62.5135 li
216.389 62.6089 li
216.369 62.616 li
216.079 62.7222 li
215.789 62.8189 li
215.761 62.8289 li
215.485 62.9334 li
215.199 63.0288 li
214.9 63.1288 li
214.879 63.1361 li
214.589 63.2421 li
214.3 63.3389 li
214.292 63.3413 li
214.006 63.4401 li
213.711 63.5381 li
213.709 63.5386 li
213.409 63.6387 li
213.109 63.7387 li
213.102 63.7414 li
212.827 63.8363 li
212.542 63.9216 li
212.519 63.9287 li
212.219 64.0288 li
211.93 64.1252 li
211.642 64.2117 li
211.612 64.2212 li
211.337 64.3163 li
211.052 64.4017 li
210.752 64.4914 li
210.729 64.4986 li
210.436 64.5963 li
210.158 64.683 li
209.862 64.7717 li
209.562 64.8616 li
209.56 64.862 li
209.261 64.9523 li
209.262 64.9519 li
208.962 65.0417 li
208.955 65.0438 li
208.665 65.1337 li
208.67 65.132 li
208.382 65.2188 li
208.095 65.2951 li
208.071 65.3018 li
207.782 65.3888 li
207.493 65.4658 li
207.465 65.474 li
207.189 65.5594 li
206.903 65.6357 li
206.603 65.7158 li
206.582 65.722 li
206.29 65.8095 li
206.007 65.8874 li
206.014 65.8857 li
205.713 65.9658 li
205.714 65.9655 li
205.425 66.0423 li
205.136 66.1101 li
205.114 66.1157 li
204.814 66.1957 li
204.808 66.1971 li
204.532 66.273 li
204.246 66.3401 li
204.224 66.3456 li
203.935 66.4226 li
203.647 66.4898 li
203.641 66.491 li
203.351 66.5609 li
203.333 66.5654 li
203.045 66.6425 li
202.756 66.7102 li
202.757 66.71 li
202.468 66.7771 li
202.18 66.8349 li
202.151 66.8412 li
201.861 66.911 li
201.867 66.9096 li
201.578 66.9768 li
201.29 67.0346 li
201.266 67.0398 li
200.975 67.108 li
200.695 67.166 li
200.701 67.1648 li
200.401 67.2243 li
200.376 67.2298 li
200.088 67.2972 li
199.811 67.3525 li
199.524 67.4003 li
199.495 67.4057 li
199.205 67.4658 li
199.21 67.4648 li
198.922 67.5224 li
198.634 67.5702 li
198.61 67.5747 li
198.319 67.6328 li
198.039 67.6814 li
198.044 67.6805 li
197.744 67.7303 li
197.719 67.7348 li
197.444 67.7901 li
197.168 67.8269 li
197.144 67.8304 li
196.844 67.8802 li
196.839 67.8811 li
196.549 67.9314 li
196.554 67.9305 li
196.266 67.9784 li
195.978 68.0168 li
195.678 68.0569 li
195.65 68.0611 li
195.374 68.1085 li
195.1 68.1451 li
194.811 68.1742 li
194.789 68.1768 li
194.489 68.2164 li
194.488 68.2166 li
194.198 68.2552 li
193.919 68.2843 li
193.898 68.2868 li
193.61 68.3252 li
193.323 68.3538 li
193.322 68.3539 li
193.021 68.3841 li
193.02 68.3843 li
192.73 68.4141 li
192.732 68.4139 li
192.445 68.4429 li
192.158 68.4615 li
192.132 68.4637 li
191.844 68.4927 li
191.557 68.5119 li
191.555 68.512 li
191.265 68.5321 li
191.267 68.5319 li
190.967 68.552 li
190.667 68.572 li
190.38 68.5912 li
190.102 68.6005 li
190.077 68.6018 li
189.789 68.621 li
189.501 68.6308 li
189.502 68.6308 li
189.203 68.6405 li
189.201 68.6406 li
188.914 68.6504 li
188.637 68.6504 li
188.232 68.6504 187.901 68.9704 187.887 69.3753 cv
187.587 78.325 li
187.587 78.3227 li
187.288 86.5229 li
187.288 86.5202 li
186.987 94.0002 li
186.988 93.9971 li
186.688 100.767 li
186.688 100.765 li
186.398 106.854 li
186.398 106.849 li
186.098 112.289 li
186.098 112.283 li
185.798 117.093 li
185.799 117.087 li
185.499 121.287 li
185.499 121.28 li
185.21 124.892 li
184.911 127.939 li
184.613 130.451 li
184.318 132.433 li
184.026 133.919 li
183.761 134.896 li
183.573 135.285 li
183.424 135.395 li
183.867 136 li
184.252 135.357 li
184.132 135.285 li
183.968 134.974 li
183.698 134.17 li
183.409 133.006 li
183.115 131.534 li
182.818 129.775 li
182.53 127.764 li
182.531 127.771 li
182.231 125.524 li
181.931 123.079 li
181.932 123.085 li
181.632 120.468 li
181.343 117.692 li
181.343 117.693 li
181.043 114.793 li
181.043 114.796 li
180.743 111.786 li
180.744 111.788 li
180.443 108.697 li
180.443 108.699 li
180.144 105.559 li
180.144 105.562 li
179.854 102.382 li
179.854 102.38 li
179.554 99.1996 li
179.253 96.0294 li
179.253 96.0286 li
178.954 92.8987 li
178.954 92.8997 li
178.664 89.8298 li
178.663 89.8252 li
178.363 86.8452 li
178.363 86.8425 li
178.063 83.9724 li
178.062 83.9684 li
177.763 81.2384 li
177.762 81.2336 li
177.462 78.6535 li
177.461 78.6499 li
177.171 76.2597 li
177.17 76.2484 li
176.87 74.0584 li
176.868 74.046 li
176.568 72.0958 li
176.565 72.0797 li
176.265 70.38 li
176.262 70.3612 li
175.972 68.931 li
175.961 68.8862 li
175.661 67.766 li
175.61 67.6286 li
175.31 67.0188 li
175.184 66.7634 174.921 66.6001 174.637 66.6001 cv
174.349 66.6001 li
174.062 66.5907 li
174.037 66.5903 li
173.747 66.5903 li
173.333 66.5903 172.997 66.9261 172.997 67.3403 cv
172.997 67.7545 173.333 68.0903 173.747 68.0903 cv
cp
.146181 .770871 .77734 .0289006 cmyk
f
173.747 68.0903 mo
174.037 68.0903 li
174.325 68.0903 li
174.612 68.0997 li
174.637 68.1001 li
174.924 68.1001 li
175.211 68.1099 li
175.502 68.1197 li
175.527 68.1201 li
175.814 68.1201 li
176.101 68.1299 li
176.103 68.13 li
176.402 68.1397 li
176.4 68.1397 li
176.69 68.1499 li
176.692 68.15 li
176.98 68.1593 li
177.267 68.1785 li
177.291 68.1797 li
177.591 68.19 li
177.592 68.19 li
177.893 68.1998 li
177.892 68.1998 li
178.182 68.2095 li
178.469 68.2194 li
178.757 68.2386 li
178.783 68.2398 li
179.083 68.2496 li
179.08 68.2495 li
179.37 68.2598 li
179.373 68.2598 li
179.659 68.2692 li
179.947 68.2884 li
179.971 68.2896 li
180.271 68.2999 li
180.272 68.2999 li
180.572 68.3097 li
180.57 68.3096 li
180.86 68.3198 li
180.862 68.3199 li
181.163 68.3297 li
181.161 68.3296 li
181.461 68.3399 li
181.462 68.3399 li
181.763 68.3497 li
181.787 67.6001 li
181.046 67.7155 li
181.334 69.5658 li
181.633 71.8573 li
181.634 71.8606 li
181.934 74.0804 li
181.934 74.0847 li
182.234 76.215 li
182.235 76.2215 li
182.535 78.2215 li
182.536 78.2259 li
182.826 80.0858 li
182.828 80.1005 li
183.128 81.8007 li
183.131 81.8158 li
183.431 83.3358 li
183.436 83.3578 li
183.736 84.6674 li
183.742 84.6945 li
184.032 85.7746 li
184.053 85.8379 li
184.353 86.6582 li
184.396 86.7546 li
184.696 87.3142 li
184.865 87.5263 li
185.165 87.7866 li
185.333 87.9324 185.56 87.9965 185.779 87.9601 cv
186.08 87.9103 li
186.275 87.878 186.449 87.7703 186.564 87.6104 cv
186.854 87.21 li
186.943 87.0484 li
187.243 86.2984 li
187.272 86.2108 li
187.572 85.0712 li
187.583 85.0239 li
187.883 83.4839 li
187.889 83.4501 li
188.179 81.4902 li
188.181 81.4729 li
188.481 79.0628 li
188.483 79.0477 li
188.783 76.1576 li
188.784 76.1465 li
189.084 72.7764 li
189.085 72.7676 li
189.384 68.8779 li
188.637 68.8203 li
188.56 69.5664 li
188.839 69.595 li
189.128 69.6336 li
189.152 69.6363 li
189.451 69.6666 li
189.477 69.6687 li
189.765 69.688 li
190.053 69.7165 li
190.05 69.7163 li
190.34 69.7461 li
190.367 69.7483 li
190.667 69.7683 li
190.967 69.7884 li
191.267 69.8084 li
191.29 69.8096 li
191.568 69.8194 li
191.857 69.8387 li
191.882 69.8399 li
192.183 69.8497 li
192.181 69.8497 li
192.481 69.8599 li
192.482 69.86 li
192.783 69.8697 li
192.807 69.8701 li
193.084 69.8701 li
193.371 69.8799 li
193.397 69.8804 li
193.697 69.8804 li
193.997 69.8804 li
194.287 69.8804 li
194.587 69.8804 li
194.613 69.8799 li
194.9 69.8701 li
195.187 69.8701 li
195.211 69.8697 li
195.511 69.8599 li
195.513 69.8599 li
195.803 69.8496 li
195.801 69.8497 li
196.101 69.8399 li
196.102 69.8399 li
196.403 69.8296 li
196.427 69.8284 li
196.714 69.8092 li
196.992 69.7999 li
197.017 69.7986 li
197.317 69.7786 li
197.617 69.7586 li
197.917 69.7386 li
198.217 69.7186 li
198.244 69.7163 li
198.52 69.6879 li
198.807 69.6687 li
198.832 69.6666 li
199.132 69.6364 li
199.131 69.6365 li
199.42 69.6078 li
199.699 69.5885 li
199.746 69.5837 li
200.034 69.5453 li
200.322 69.5162 li
200.321 69.5163 li
200.621 69.4866 li
200.646 69.4836 li
200.934 69.4451 li
201.213 69.4165 li
201.236 69.4138 li
201.536 69.3738 li
201.836 69.3337 li
202.136 69.2937 li
202.14 69.2932 li
202.429 69.2532 li
202.426 69.2537 li
202.726 69.2136 li
202.75 69.2101 li
203.038 69.1623 li
203.326 69.1238 li
203.351 69.12 li
203.651 69.0697 li
203.654 69.0693 li
203.93 69.0218 li
204.216 68.9836 li
204.239 68.9801 li
204.54 68.9303 li
204.564 68.9258 li
204.854 68.8677 li
205.135 68.819 li
205.13 68.82 li
205.43 68.7702 li
205.431 68.7699 li
205.731 68.7196 li
205.753 68.7156 li
206.053 68.656 li
206.054 68.6558 li
206.345 68.5976 li
206.625 68.549 li
206.644 68.5454 li
206.944 68.4854 li
206.943 68.4856 li
207.243 68.426 li
207.244 68.4259 li
207.544 68.3658 li
207.574 68.3593 li
207.849 68.2925 li
208.134 68.2354 li
208.133 68.2357 li
208.433 68.1761 li
208.458 68.1706 li
208.747 68.103 li
209.034 68.0454 li
209.062 68.0392 li
209.352 67.9694 li
209.347 67.9707 li
209.647 67.9009 li
209.648 67.9006 li
209.936 67.8331 li
210.224 67.7754 li
210.27 67.7647 li
210.561 67.6871 li
210.843 67.6193 li
210.837 67.6206 li
211.137 67.5508 li
211.138 67.5506 li
211.438 67.4802 li
211.46 67.4749 li
211.751 67.3974 li
212.034 67.329 li
212.05 67.3247 li
212.339 67.2477 li
212.627 67.1807 li
212.651 67.1748 li
212.95 67.0947 li
213.25 67.0147 li
213.257 67.0129 li
213.542 66.934 li
213.839 66.8553 li
213.84 66.855 li
214.14 66.7749 li
214.44 66.6949 li
214.447 66.6932 li
214.737 66.6131 li
214.731 66.6147 li
215.03 66.5347 li
215.33 66.4546 li
215.352 66.4485 li
215.642 66.3617 li
215.93 66.2847 li
215.959 66.2765 li
216.249 66.1866 li
216.242 66.1886 li
216.531 66.102 li
216.82 66.025 li
216.843 66.0184 li
217.143 65.9281 li
217.149 65.9264 li
217.439 65.8365 li
217.432 65.8386 li
217.732 65.7488 li
218.032 65.6589 li
218.033 65.6585 li
218.333 65.5682 li
218.332 65.5686 li
218.632 65.4788 li
218.639 65.4767 li
218.929 65.3868 li
218.923 65.3885 li
219.223 65.2982 li
219.222 65.2986 li
219.522 65.2088 li
219.545 65.2016 li
219.837 65.1039 li
220.119 65.0167 li
220.134 65.0117 li
220.423 64.9153 li
220.712 64.8289 li
220.735 64.8217 li
221.024 64.7253 li
221.312 64.6388 li
221.341 64.6294 li
221.627 64.5308 li
221.924 64.4317 li
222.224 64.3315 li
222.517 64.234 li
222.799 64.1465 li
222.814 64.1417 li
223.114 64.0416 li
223.414 63.9414 li
223.434 63.9343 li
223.724 63.8282 li
224.014 63.7314 li
224.02 63.7294 li
224.311 63.6297 li
224.304 63.6318 li
224.604 63.5317 li
224.904 63.4317 li
224.925 63.4244 li
225.217 63.3173 li
225.502 63.2192 li
225.515 63.2146 li
225.805 63.1084 li
226.094 63.0117 li
226.394 62.9116 li
226.414 62.9045 li
226.715 62.7947 li
226.724 62.7913 li
226.999 62.6867 li
227.283 62.5921 li
227.306 62.5842 li
227.606 62.4739 li
227.604 62.4744 li
227.905 62.3645 li
227.913 62.3615 li
228.188 62.2571 li
228.474 62.1616 li
228.494 62.1545 li
228.795 62.0447 li
228.796 62.0442 li
229.096 61.9338 li
229.095 61.9342 li
229.395 61.8243 li
229.402 61.8215 li
229.688 61.7131 li
229.985 61.6047 li
229.986 61.6042 li
230.286 61.4939 li
230.285 61.4942 li
230.585 61.3844 li
230.885 61.2747 li
230.914 61.2632 li
231.19 61.1491 li
231.475 61.0445 li
231.776 60.934 li
231.775 60.9342 li
232.075 60.8243 li
232.104 60.813 li
232.38 60.6988 li
232.665 60.5943 li
232.685 60.5865 li
232.975 60.4705 li
233.265 60.3644 li
233.565 60.2546 li
233.594 60.243 li
233.869 60.1291 li
234.155 60.0247 li
234.176 60.0165 li
234.476 59.8964 li
234.769 59.7792 li
235.053 59.6716 li
235.066 59.6664 li
235.366 59.5463 li
235.655 59.4304 li
235.945 59.3245 li
235.966 59.3163 li
236.266 59.1962 li
236.273 59.1933 li
236.559 59.0755 li
236.856 58.9565 li
237.155 58.8363 li
237.155 58.8366 li
237.45 58.7188 li
237.733 58.6115 li
237.746 58.6064 li
238.046 58.4862 li
238.045 58.4866 li
238.345 58.367 li
238.346 58.3666 li
238.646 58.2465 li
238.945 58.1264 li
238.953 58.1231 li
239.243 58.003 li
239.254 57.9986 li
239.546 57.8726 li
239.836 57.7563 li
239.835 57.7566 li
240.135 57.637 li
240.144 57.6334 li
240.429 57.5152 li
240.726 57.3964 li
241.026 57.2763 li
241.044 57.2686 li
241.335 57.1428 li
241.626 57.0263 li
241.634 57.023 li
241.92 56.9046 li
242.215 56.7869 li
242.236 56.7781 li
242.525 56.6524 li
242.815 56.5369 li
242.824 56.5333 li
243.114 56.4131 li
243.125 56.4084 li
243.414 56.2829 li
243.705 56.1667 li
243.725 56.1584 li
244.016 56.0326 li
244.306 55.9164 li
244.333 55.9047 li
244.61 55.7809 li
244.896 55.6664 li
244.915 55.6584 li
245.205 55.5327 li
245.495 55.4167 li
245.524 55.4047 li
245.8 55.281 li
246.086 55.1664 li
246.105 55.1584 li
246.405 55.0285 li
246.406 55.0281 li
246.695 54.9024 li
246.984 54.7869 li
247.014 54.7744 li
247.299 54.6463 li
247.585 54.5227 li
247.876 54.4062 li
247.895 54.3982 li
248.195 54.2683 li
248.203 54.2646 li
248.488 54.137 li
248.775 54.0127 li
249.066 53.8964 li
249.085 53.8884 li
249.385 53.7585 li
249.384 53.7589 li
249.685 53.629 li
249.695 53.6245 li
249.98 53.4962 li
250.266 53.3724 li
250.556 53.2563 li
250.575 53.2482 li
250.875 53.1184 li
251.175 52.9885 li
251.183 52.9848 li
251.469 52.8565 li
251.766 52.7282 li
252.065 52.5983 li
252.365 52.4685 li
252.373 52.4648 li
252.66 52.3362 li
252.956 52.2078 li
252.955 52.2082 li
253.255 52.0783 li
253.254 52.0787 li
253.555 51.9488 li
253.555 51.9484 li
253.855 51.8186 li
253.865 51.8144 li
254.15 51.6862 li
254.445 51.5583 li
254.745 51.4284 li
255.045 51.2985 li
255.054 51.2944 li
255.344 51.164 li
255.353 51.1598 li
255.644 51.0244 li
255.935 50.8981 li
256.235 50.7683 li
256.535 50.6384 li
256.543 50.6347 li
256.83 50.5064 li
257.125 50.3786 li
257.144 50.3699 li
257.434 50.2344 li
257.725 50.109 li
257.735 50.1045 li
258.019 49.9766 li
258.315 49.8483 li
258.335 49.8396 li
258.625 49.704 li
258.915 49.5783 li
259.215 49.4484 li
259.223 49.4448 li
259.513 49.3149 li
259.523 49.3102 li
259.815 49.1744 li
260.105 49.0485 li
260.106 49.0481 li
260.406 48.9178 li
260.432 48.9057 li
260.709 48.7724 li
260.996 48.6477 li
260.995 48.6482 li
261.295 48.5183 li
261.312 48.5103 li
261.605 48.3745 li
261.896 48.2478 li
261.904 48.2446 li
262.194 48.1147 li
262.205 48.1096 li
262.495 47.9742 li
262.785 47.8483 li
262.804 47.8396 li
263.098 47.7023 li
263.38 47.5762 li
263.675 47.4484 li
263.693 47.4401 li
263.985 47.3043 li
264.275 47.1784 li
264.295 47.1697 li
264.588 47.0323 li
264.873 46.9047 li
264.884 46.8997 li
265.175 46.764 li
265.465 46.6384 li
265.483 46.63 li
265.778 46.4926 li
266.064 46.3647 li
266.075 46.3596 li
266.365 46.2242 li
266.655 46.0983 li
266.674 46.0896 li
266.965 45.954 li
267.255 45.8283 li
267.283 45.8154 li
267.559 45.6822 li
267.845 45.5587 li
267.865 45.5496 li
268.165 45.4094 li
268.164 45.4098 li
268.459 45.2724 li
268.744 45.144 li
268.754 45.1398 li
269.044 45.0045 li
269.335 44.8786 li
269.354 44.8699 li
269.644 44.7344 li
269.935 44.609 li
269.963 44.5957 li
270.249 44.4579 li
270.535 44.3241 li
270.825 44.1984 li
270.844 44.1897 li
271.144 44.0496 li
271.438 43.9122 li
271.723 43.7846 li
271.733 43.7799 li
272.034 43.6398 li
272.324 43.5045 li
272.615 43.3786 li
272.643 43.3657 li
272.929 43.2275 li
273.215 43.0941 li
273.505 42.9685 li
273.523 42.9601 li
273.824 42.82 li
273.825 42.8196 li
274.119 42.6823 li
274.404 42.5546 li
274.415 42.5496 li
274.715 42.4094 li
274.714 42.4098 li
275.013 42.2702 li
275.014 42.2698 li
275.309 42.1318 li
275.593 42.0048 li
275.604 41.9997 li
275.904 41.8596 li
275.903 41.86 li
276.204 41.7199 li
276.495 41.5843 li
276.786 41.4578 li
276.812 41.4458 li
277.099 41.3079 li
277.394 41.1697 li
277.684 41.0342 li
277.975 40.9088 li
278.004 40.8955 li
278.289 40.7575 li
278.584 40.6203 li
278.585 40.6199 li
278.884 40.4797 li
279.175 40.3441 li
279.465 40.2185 li
279.493 40.2056 li
279.778 40.0676 li
280.074 39.9298 li
280.374 39.7902 li
280.375 39.7898 li
280.668 39.6525 li
280.953 39.5248 li
280.965 39.5198 li
281.264 39.3796 li
281.564 39.2395 li
281.562 39.2403 li
281.863 39.1007 li
281.865 39.0998 li
282.165 38.9597 li
282.173 38.9556 li
282.45 38.8221 li
282.735 38.6984 li
282.755 38.6897 li
283.054 38.5496 li
283.354 38.4094 li
283.362 38.4057 li
283.648 38.2678 li
283.944 38.1296 li
283.943 38.13 li
284.244 37.9899 li
284.544 37.8503 li
284.545 37.8498 li
284.838 37.7125 li
285.123 37.5849 li
285.134 37.5798 li
285.434 37.4397 li
285.734 37.2996 li
285.733 37.2999 li
286.034 37.1598 li
286.043 37.1557 li
286.329 37.0178 li
286.625 36.8796 li
286.924 36.7395 li
286.924 36.7399 li
287.223 36.6003 li
287.224 36.5998 li
287.524 36.4597 li
287.533 36.4556 li
287.809 36.3224 li
288.095 36.1988 li
288.115 36.1897 li
288.415 36.0496 li
288.715 35.9094 li
288.722 35.9057 li
289.009 35.7678 li
289.304 35.6296 li
289.604 35.4895 li
289.603 35.4899 li
289.903 35.3503 li
290.204 35.2101 li
290.213 35.2056 li
290.499 35.0674 li
290.795 34.9294 li
290.794 34.9299 li
291.094 34.7902 li
291.094 34.7898 li
291.394 34.6497 li
291.694 34.5095 li
291.702 34.5058 li
291.988 34.3681 li
292.284 34.2301 li
292.285 34.2297 li
292.585 34.0896 li
292.884 33.9495 li
292.892 33.9458 li
293.182 33.8061 li
293.555 33.6264 293.712 33.1782 293.533 32.805 cv
293.353 32.4318 292.905 32.2749 292.532 32.4546 cv
292.245 32.5925 li
291.949 32.7307 li
291.65 32.8709 li
291.651 32.8705 li
291.35 33.0106 li
291.341 33.0147 li
291.055 33.1526 li
290.759 33.2908 li
290.459 33.4309 li
290.46 33.4305 li
290.16 33.5701 li
290.159 33.5706 li
289.86 33.7107 li
289.851 33.7148 li
289.565 33.8528 li
289.27 33.9906 li
288.97 34.1302 li
288.969 34.1306 li
288.669 34.2708 li
288.369 34.4109 li
288.362 34.4146 li
288.075 34.5525 li
287.78 34.6907 li
287.49 34.826 li
287.199 34.9516 li
287.17 34.9648 li
286.884 35.103 li
286.589 35.241 li
286.59 35.2405 li
286.29 35.3802 li
286.289 35.3806 li
285.99 35.5208 li
285.69 35.6609 li
285.682 35.6646 li
285.396 35.8023 li
285.1 35.9403 li
285.099 35.9407 li
284.799 36.0808 li
284.505 36.2181 li
284.22 36.3458 li
284.209 36.3508 li
283.909 36.491 li
283.91 36.4905 li
283.611 36.6302 li
283.31 36.7704 li
283.309 36.7708 li
283.009 36.9109 li
283.001 36.9146 li
282.714 37.0529 li
282.419 37.1907 li
282.129 37.3263 li
281.839 37.4519 li
281.811 37.4648 li
281.525 37.603 li
281.23 37.741 li
281.232 37.7402 li
280.931 37.8798 li
280.929 37.8806 li
280.629 38.0208 li
280.335 38.1584 li
280.05 38.2857 li
280.039 38.2908 li
279.74 38.4309 li
279.74 38.4305 li
279.441 38.5701 li
279.14 38.7103 li
279.13 38.7148 li
278.854 38.8482 li
278.569 38.972 li
278.549 38.9807 li
278.249 39.1209 li
277.949 39.261 li
277.95 39.2606 li
277.651 39.4002 li
277.641 39.4048 li
277.365 39.538 li
277.079 39.6615 li
277.059 39.6707 li
276.759 39.8108 li
276.459 39.9509 li
276.451 39.9546 li
276.175 40.088 li
275.888 40.2126 li
275.87 40.2205 li
275.571 40.3602 li
275.27 40.5003 li
275.269 40.5007 li
274.975 40.6381 li
274.69 40.7657 li
274.679 40.7708 li
274.379 40.9109 li
274.38 40.9105 li
274.08 41.0501 li
274.079 41.0505 li
273.786 41.1879 li
273.501 41.3155 li
273.49 41.3206 li
273.19 41.4607 li
273.191 41.4603 li
272.899 41.5961 li
272.609 41.722 li
272.589 41.7307 li
272.289 41.8709 li
272.281 41.875 li
272.005 42.0083 li
271.719 42.1321 li
271.7 42.1404 li
271.401 42.2801 li
271.106 42.4175 li
270.82 42.5455 li
270.809 42.5505 li
270.509 42.6907 li
270.219 42.8263 li
269.929 42.9519 li
269.909 42.9607 li
269.61 43.1008 li
269.601 43.105 li
269.325 43.2383 li
269.039 43.3617 li
269.019 43.3709 li
268.729 43.5065 li
268.439 43.6321 li
268.42 43.6404 li
268.125 43.7778 li
267.839 43.9063 li
267.83 43.9105 li
267.53 44.0501 li
267.53 44.0505 li
267.24 44.186 li
266.949 44.3115 li
266.92 44.3247 li
266.644 44.4582 li
266.359 44.5818 li
266.339 44.5906 li
266.049 44.7262 li
265.759 44.8518 li
265.74 44.8606 li
265.445 44.9982 li
265.161 45.1256 li
265.151 45.1302 li
264.859 45.266 li
264.569 45.3919 li
264.549 45.4006 li
264.255 45.538 li
263.97 45.6656 li
263.959 45.6707 li
263.669 45.8061 li
263.379 45.9319 li
263.361 45.9403 li
263.069 46.0761 li
262.779 46.2019 li
262.77 46.2056 li
262.48 46.3355 li
262.469 46.3406 li
262.179 46.4762 li
261.889 46.6018 li
261.869 46.6106 li
261.575 46.7482 li
261.295 46.8738 li
260.998 47.0026 li
260.982 47.0102 li
260.69 47.1456 li
260.399 47.2718 li
260.398 47.2722 li
260.098 47.4025 li
260.072 47.4146 li
259.794 47.548 li
259.508 47.6726 li
259.509 47.6722 li
259.209 47.802 li
259.191 47.8104 li
258.896 47.9478 li
258.613 48.0742 li
258.319 48.2019 li
258.019 48.3318 li
257.999 48.3406 li
257.709 48.4762 li
257.419 48.6018 li
257.41 48.606 li
257.125 48.7341 li
256.829 48.8617 li
256.809 48.8709 li
256.519 49.0065 li
256.229 49.1321 li
256.22 49.1358 li
255.935 49.2637 li
255.639 49.3919 li
255.339 49.5218 li
255.038 49.6522 li
255.02 49.6605 li
254.725 49.7979 li
254.445 49.9238 li
254.149 50.052 li
253.849 50.1819 li
253.549 50.3118 li
253.54 50.3159 li
253.254 50.4442 li
252.959 50.5721 li
252.96 50.5717 li
252.659 50.7016 li
252.658 50.7019 li
252.359 50.8318 li
252.358 50.8322 li
252.058 50.9626 li
252.05 50.9659 li
251.765 51.0938 li
251.469 51.222 li
251.169 51.3518 li
250.868 51.4823 li
250.86 51.4859 li
250.574 51.6138 li
250.279 51.742 li
249.988 51.8676 li
249.698 51.984 li
249.679 51.992 li
249.379 52.1219 li
249.37 52.126 li
249.085 52.2541 li
248.789 52.3818 li
248.788 52.3821 li
248.498 52.5078 li
248.208 52.6241 li
248.189 52.6321 li
247.889 52.762 li
247.88 52.7657 li
247.596 52.8932 li
247.309 53.0175 li
247.018 53.1339 li
247 53.1415 li
246.699 53.2714 li
246.689 53.2759 li
246.414 53.3997 li
246.129 53.5134 li
246.108 53.5222 li
245.808 53.6525 li
245.809 53.6521 li
245.519 53.7778 li
245.228 53.8941 li
245.201 53.9058 li
244.925 54.0294 li
244.638 54.1438 li
244.618 54.1521 li
244.328 54.2778 li
244.038 54.3941 li
244.01 54.4058 li
243.734 54.5295 li
243.448 54.6441 li
243.429 54.6521 li
243.139 54.7778 li
242.848 54.8938 li
242.828 54.9021 li
242.534 55.0296 li
242.254 55.1457 li
241.959 55.2634 li
241.938 55.2722 li
241.649 55.3979 li
241.359 55.5134 li
241.35 55.517 li
241.064 55.6356 li
240.768 55.754 li
240.75 55.7616 li
240.459 55.8875 li
240.168 56.004 li
239.868 56.1241 li
239.86 56.1274 li
239.574 56.2458 li
239.279 56.3635 li
239.278 56.3639 li
238.978 56.484 li
238.96 56.4916 li
238.664 56.6193 li
238.383 56.7357 li
238.088 56.8541 li
237.788 56.9742 li
237.789 56.9738 li
237.489 57.0934 li
237.488 57.0938 li
237.195 57.2113 li
236.912 57.3186 li
236.899 57.3235 li
236.598 57.4436 li
236.598 57.4439 li
236.298 57.5641 li
235.998 57.6842 li
235.991 57.687 li
235.704 57.8053 li
235.419 57.9197 li
235.129 58.0256 li
235.108 58.0338 li
234.808 58.1539 li
234.515 58.2714 li
234.231 58.3787 li
234.219 58.3837 li
233.918 58.5038 li
233.629 58.6199 li
233.339 58.7258 li
233.309 58.7374 li
233.035 58.8513 li
232.749 58.9558 li
232.449 59.0658 li
232.428 59.0737 li
232.138 59.1897 li
231.849 59.2958 li
231.82 59.3071 li
231.544 59.4213 li
231.259 59.5258 li
231.258 59.526 li
230.958 59.6364 li
230.959 59.6361 li
230.659 59.746 li
230.63 59.7573 li
230.355 59.8713 li
230.069 59.9758 li
229.769 60.0858 li
229.768 60.0862 li
229.468 60.1966 li
229.469 60.196 li
229.169 60.3059 li
229.161 60.3089 li
228.875 60.4172 li
228.579 60.5258 li
228.578 60.5261 li
228.278 60.6365 li
228.279 60.636 li
227.989 60.7421 li
227.699 60.8389 li
227.671 60.8489 li
227.386 60.9569 li
227.089 61.0657 li
227.088 61.0662 li
226.799 61.1725 li
226.511 61.2682 li
226.48 61.279 li
226.195 61.3877 li
225.909 61.4921 li
225.619 61.5889 li
225.32 61.689 li
225.299 61.696 li
225.005 61.8036 li
224.722 61.9014 li
224.709 61.9061 li
224.419 62.0122 li
224.13 62.1088 li
223.829 62.209 li
223.823 62.2111 li
223.533 62.3107 li
223.539 62.3086 li
223.24 62.4087 li
223.219 62.4158 li
222.929 62.5219 li
222.639 62.6187 li
222.347 62.7162 li
222.065 62.8037 li
222.05 62.8085 li
221.75 62.9086 li
221.449 63.0088 li
221.15 63.1088 li
221.142 63.1113 li
220.867 63.2063 li
220.582 63.2918 li
220.559 63.2989 li
220.271 63.3952 li
219.982 63.4817 li
219.959 63.4888 li
219.667 63.5863 li
219.385 63.6737 li
219.369 63.6787 li
219.081 63.775 li
218.792 63.8615 li
218.79 63.862 li
218.491 63.9523 li
218.485 63.954 li
218.195 64.0438 li
218.202 64.0417 li
217.902 64.1316 li
217.9 64.132 li
217.601 64.2223 li
217.602 64.222 li
217.302 64.3118 li
217.002 64.4016 li
216.995 64.4037 li
216.705 64.4935 li
216.71 64.4918 li
216.422 64.5787 li
216.133 64.6557 li
216.111 64.6619 li
215.812 64.7518 li
215.805 64.7538 li
215.529 64.8392 li
215.243 64.9155 li
215.222 64.9216 li
214.932 65.0084 li
214.643 65.0855 li
214.344 65.1655 li
214.337 65.1672 li
214.047 65.2473 li
214.054 65.2455 li
213.754 65.3256 li
213.453 65.4058 li
213.455 65.4054 li
213.155 65.485 li
213.147 65.4871 li
212.857 65.5672 li
212.864 65.5654 li
212.564 65.6454 li
212.275 65.7225 li
211.987 65.7895 li
211.963 65.7954 li
211.672 65.8732 li
211.39 65.9415 li
211.374 65.9455 li
211.086 66.0222 li
210.796 66.0901 li
210.797 66.0899 li
210.497 66.1597 li
210.491 66.161 li
210.201 66.2308 li
210.184 66.2353 li
209.906 66.3093 li
209.63 66.3647 li
209.606 66.3699 li
209.306 66.4402 li
209.307 66.4399 li
209.007 66.5097 li
209.001 66.5111 li
208.725 66.5775 li
208.44 66.6347 li
208.416 66.6399 li
208.129 66.7073 li
207.841 66.7643 li
207.839 66.7646 li
207.54 66.8247 li
207.51 66.8312 li
207.235 66.8979 li
206.95 66.955 li
206.951 66.9548 li
206.651 67.0144 li
206.65 67.0146 li
206.36 67.0727 li
206.079 67.1214 li
206.06 67.1249 li
205.76 67.185 li
205.761 67.1848 li
205.472 67.2421 li
205.183 67.2906 li
205.184 67.2904 li
204.884 67.3402 li
204.879 67.3411 li
204.589 67.3914 li
204.569 67.395 li
204.282 67.4525 li
204.005 67.4984 li
203.718 67.5369 li
203.69 67.5411 li
203.4 67.5909 li
203.403 67.5904 li
203.115 67.6386 li
202.828 67.677 li
202.804 67.6805 li
202.516 67.7284 li
202.228 67.7668 li
202.224 67.7673 li
201.934 67.8074 li
201.938 67.8069 li
201.638 67.8469 li
201.338 67.887 li
201.049 67.9255 li
200.77 67.9541 li
200.747 67.9568 li
200.46 67.9951 li
200.173 68.0237 li
200.172 68.0238 li
199.872 68.0541 li
199.847 68.0569 li
199.571 68.0938 li
199.305 68.1121 li
199.283 68.114 li
198.983 68.1438 li
198.982 68.1439 li
198.694 68.1729 li
198.407 68.1921 li
198.38 68.1944 li
198.104 68.2228 li
197.817 68.2419 li
197.517 68.2619 li
197.217 68.2819 li
196.929 68.3011 li
196.652 68.3105 li
196.627 68.3117 li
196.339 68.3309 li
196.051 68.3408 li
196.052 68.3407 li
195.752 68.3505 li
195.75 68.3506 li
195.46 68.3608 li
195.462 68.3607 li
195.175 68.3701 li
194.887 68.3701 li
194.861 68.3706 li
194.574 68.3804 li
194.287 68.3804 li
193.997 68.3804 li
193.697 68.3804 li
193.41 68.3804 li
193.122 68.3706 li
193.097 68.3701 li
192.82 68.3701 li
192.531 68.3607 li
192.532 68.3608 li
192.233 68.3505 li
192.231 68.3505 li
191.944 68.3411 li
191.657 68.322 li
191.633 68.3208 li
191.355 68.3109 li
191.067 68.2917 li
190.767 68.2717 li
190.48 68.2525 li
190.204 68.2241 li
190.201 68.2239 li
189.901 68.1941 li
189.877 68.1921 li
189.59 68.1729 li
189.314 68.1451 li
189.026 68.1067 li
189.003 68.104 li
188.713 68.0742 li
188.511 68.0535 188.312 68.1144 188.156 68.2446 cv
188 68.3749 187.905 68.5601 187.889 68.7627 cv
187.59 72.6462 li
187.291 76.008 li
186.992 78.8847 li
186.694 81.2792 li
186.408 83.2137 li
186.115 84.713 li
185.833 85.7846 li
185.585 86.4053 li
185.35 86.7304 li
185.957 87.1704 li
185.834 86.4305 li
185.534 86.4803 li
185.657 87.2202 li
186.148 86.6538 li
185.953 86.4841 li
185.743 86.0928 li
185.473 85.3537 li
185.195 84.319 li
184.901 83.0339 li
184.604 81.5327 li
184.307 79.8472 li
184.018 77.9948 li
184.019 77.9992 li
183.719 75.9992 li
183.72 76.0057 li
183.419 73.8753 li
183.42 73.8796 li
183.12 71.6599 li
183.121 71.6632 li
182.82 69.3629 li
182.818 69.3446 li
182.528 67.4847 li
182.473 67.129 182.171 66.8622 181.811 66.8505 cv
181.511 66.8407 li
181.512 66.8408 li
181.213 66.8305 li
181.211 66.8305 li
180.911 66.8207 li
180.913 66.8208 li
180.623 66.8105 li
180.621 66.8105 li
180.321 66.8007 li
180.323 66.8007 li
180.035 66.7909 li
179.747 66.7717 li
179.721 66.7704 li
179.421 66.7607 li
179.423 66.7607 li
179.133 66.7505 li
179.131 66.7504 li
178.844 66.741 li
178.557 66.7219 li
178.532 66.7206 li
178.233 66.7104 li
177.942 66.7006 li
177.941 66.7006 li
177.641 66.6908 li
177.642 66.6909 li
177.355 66.681 li
177.067 66.6618 li
177.041 66.6605 li
176.741 66.6508 li
176.743 66.6509 li
176.453 66.6406 li
176.451 66.6405 li
176.151 66.6308 li
176.153 66.6308 li
175.852 66.6206 li
175.827 66.6201 li
175.54 66.6201 li
175.262 66.6108 li
174.963 66.6005 li
174.937 66.6001 li
174.649 66.6001 li
174.361 66.5907 li
174.337 66.5903 li
174.037 66.5903 li
173.747 66.5903 li
173.333 66.5903 172.997 66.9261 172.997 67.3403 cv
172.997 67.7545 173.333 68.0903 173.747 68.0903 cv
cp
.653773 .579889 .56878 .366613 cmyk
f
173.747 143.235 mo
292.857 143.235 li
293.064 143.235 293.232 143.067 293.232 142.86 cv
293.232 142.653 293.064 142.485 292.857 142.485 cv
173.747 142.485 li
173.54 142.485 173.372 142.653 173.372 142.86 cv
173.372 143.067 173.54 143.235 173.747 143.235 cv
.75021 .679683 .670222 .90164 cmyk
f
173.372 142.86 mo
173.372 146.22 li
173.372 146.427 173.54 146.595 173.747 146.595 cv
173.954 146.595 174.122 146.427 174.122 146.22 cv
174.122 142.86 li
174.122 142.653 173.954 142.485 173.747 142.485 cv
173.54 142.485 173.372 142.653 173.372 142.86 cv
f
203.152 142.86 mo
203.152 146.22 li
203.152 146.427 203.32 146.595 203.527 146.595 cv
203.734 146.595 203.902 146.427 203.902 146.22 cv
203.902 142.86 li
203.902 142.653 203.734 142.485 203.527 142.485 cv
203.32 142.485 203.152 142.653 203.152 142.86 cv
f
232.932 142.86 mo
232.932 146.22 li
232.932 146.427 233.1 146.595 233.307 146.595 cv
233.514 146.595 233.682 146.427 233.682 146.22 cv
233.682 142.86 li
233.682 142.653 233.514 142.485 233.307 142.485 cv
233.1 142.485 232.932 142.653 232.932 142.86 cv
f
262.702 142.86 mo
262.702 146.22 li
262.702 146.427 262.87 146.595 263.077 146.595 cv
263.284 146.595 263.452 146.427 263.452 146.22 cv
263.452 142.86 li
263.452 142.653 263.284 142.485 263.077 142.485 cv
262.87 142.485 262.702 142.653 262.702 142.86 cv
f
292.482 142.86 mo
292.482 146.22 li
292.482 146.427 292.65 146.595 292.857 146.595 cv
293.064 146.595 293.232 146.427 293.232 146.22 cv
293.232 142.86 li
293.232 142.653 293.064 142.485 292.857 142.485 cv
292.65 142.485 292.482 142.653 292.482 142.86 cv
f
MCBLKO+Helvetica*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf171.517 155.81 mo(0)sh201.297 155.81 mo(1)sh231.077 155.81 mo(2)sh260.857 155.81 mo(3)sh290.637 155.81 mo(4)shMCBLKO+Helvetica*1 [-6.12324e-16 -10 -10 6.12323e-16 0 0 ]msf356.006 108.589 mo(total fitness)[-2.77832 -5.56152 -2.77832 -5.56152 -2.22168 -2.77832 -2.77832 -2.22168 -2.77832 -5.56152 -5.56152 -5 0 ]ysh376.622 140.3 mo
376.622 41.0103 li
376.622 40.8031 376.454 40.6353 376.247 40.6353 cv
376.039 40.6353 375.872 40.8031 375.872 41.0103 cv
375.872 140.3 li
375.872 140.507 376.039 140.675 376.247 140.675 cv
376.454 140.675 376.622 140.507 376.622 140.3 cv
f
376.247 139.925 mo
372.887 139.925 li
372.68 139.925 372.512 140.093 372.512 140.3 cv
372.512 140.507 372.68 140.675 372.887 140.675 cv
376.247 140.675 li
376.454 140.675 376.622 140.507 376.622 140.3 cv
376.622 140.093 376.454 139.925 376.247 139.925 cv
f
376.247 120.065 mo
372.887 120.065 li
372.68 120.065 372.512 120.233 372.512 120.44 cv
372.512 120.648 372.68 120.815 372.887 120.815 cv
376.247 120.815 li
376.454 120.815 376.622 120.648 376.622 120.44 cv
376.622 120.233 376.454 120.065 376.247 120.065 cv
f
376.247 100.205 mo
372.887 100.205 li
372.68 100.205 372.512 100.373 372.512 100.58 cv
372.512 100.787 372.68 100.955 372.887 100.955 cv
376.247 100.955 li
376.454 100.955 376.622 100.787 376.622 100.58 cv
376.622 100.373 376.454 100.205 376.247 100.205 cv
f
376.247 80.355 mo
372.887 80.355 li
372.68 80.355 372.512 80.5229 372.512 80.73 cv
372.512 80.9371 372.68 81.105 372.887 81.105 cv
376.247 81.105 li
376.454 81.105 376.622 80.9371 376.622 80.73 cv
376.622 80.5229 376.454 80.355 376.247 80.355 cv
f
376.247 60.4951 mo
372.887 60.4951 li
372.68 60.4951 372.512 60.663 372.512 60.8701 cv
372.512 61.0772 372.68 61.2451 372.887 61.2451 cv
376.247 61.2451 li
376.454 61.2451 376.622 61.0772 376.622 60.8701 cv
376.622 60.663 376.454 60.4951 376.247 60.4951 cv
f
376.247 40.6353 mo
372.887 40.6353 li
372.68 40.6353 372.512 40.8031 372.512 41.0103 cv
372.512 41.2174 372.68 41.3853 372.887 41.3853 cv
376.247 41.3853 li
376.454 41.3853 376.622 41.2174 376.622 41.0103 cv
376.622 40.8031 376.454 40.6353 376.247 40.6353 cv
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginMCBLKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/seven <1C60D8A8C9B7EF326C86E2C8FFDAFAAAF8B2EE45CDE12ADFFACC9341D807009D1D241E6029AF890199C52728BBB0F3ADB8945AB4753C3621AAE632A8EC4FD7F79CCD78EF> |-systemdict /gcheck known {setglobal} if end {end} ifendMCBLKO+Helvetica /Encoding getdup 55 /seven putpop%ADOEndSubsetFont
/MCBLKO+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven /eight 40{/.notdef}rp /a /b /.notdef /d /e /f /g /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u /.notdef /w /.notdef /y 5{/.notdef}rp /minus 128{/.notdef}rp]MCBLKO+Helvetica nfMCBLKO+Helvetica*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf365.077 143.169 mo(2)sh365.077 123.31 mo(3)sh365.077 103.459 mo(4)sh365.077 83.5996 mo(5)sh365.077 63.7397 mo(6)sh365.077 43.8799 mo(7)sh.146181 .770871 .77734 .0289006 cmyk
%ADOBeginSubsetFont: AdobePiStd Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /AdobePiStd def/FontInfo 7 dict dup begin/Notice (Adobe Confidential. Copyright 2002 , 2003Adobe Systems Incorporated. All Rights Reserved. Adobe Pi is a trademark of Adobe Systems Incorporated.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 127 /uni25CF putdef/FontBBox {0 -196 1276 826} defendsystemdict begindup /Private11 dict dup begin/|- {def} def/| {put} def/BlueValues [-25 -0 725 750 500 525] def/StdHW [50] def/StdVW [50] def/StemSnapH [50] def/StemSnapV [50] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/uni25CF <1C60D8A8C9B6CAC20393B820A953E6ED15C444D2FC84BF4B10D0B30839933397D3264466EBB484089E8F13950BA5D9693EB673B9697E5F3B360819> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/MCBLKP+AdobePiStd /AdobePiStd findfont ct_VMDictPut/MCBLKP+AdobePiStd*1 [127{/.notdef}rp /uni25CF 128{/.notdef}rp]MCBLKP+AdobePiStd nfMCBLKP+AdobePiStd*1 [8.31 -1.01769e-15 -1.01769e-15 -8.31 0 0 ]msf382.876 52.6699 mo(\177)shMCBLKP+AdobePiStd*1 [8.31 -1.01769e-15 -1.01769e-15 -8.31 0 0 ]msf382.876 52.6699 mo(\177) false chp.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
gsave
[1 -1.22465e-16 1.22464e-16 1 -7956.43 -8060.55 ]ct
@
grestore newpath
.653773 .579889 .56878 .366613 cmyk
MCBLKP+AdobePiStd*1 [8.31 -1.01769e-15 -1.01769e-15 -8.31 0 0 ]msf402.737 82.3599 mo(\177)shMCBLKP+AdobePiStd*1 [8.31 -1.01769e-15 -1.01769e-15 -8.31 0 0 ]msf402.737 82.3599 mo(\177) false chpgsave
[1 -1.22465e-16 1.22464e-16 1 -7956.43 -8060.55 ]ct
@
grestore newpath
386.542 30.8901 mo
386.542 20.1704 li
386.542 19.9633 386.374 19.7954 386.167 19.7954 cv
385.959 19.7954 385.792 19.9633 385.792 20.1704 cv
385.792 30.8901 li
385.792 31.0972 385.959 31.2651 386.167 31.2651 cv
386.374 31.2651 386.542 31.0972 386.542 30.8901 cv
.146181 .770871 .77734 .0289006 cmyk
f
406.402 30.8901 mo
406.402 9.4502 li
406.402 9.24307 406.234 9.07524 406.027 9.07524 cv
405.82 9.07524 405.652 9.24307 405.652 9.4502 cv
405.652 30.8901 li
405.652 31.0973 405.82 31.2651 406.027 31.2651 cv
406.234 31.2651 406.402 31.0973 406.402 30.8901 cv
.653773 .579889 .56878 .366613 cmyk
f
386.167 20.5454 mo
415.947 20.5454 li
416.154 20.5454 416.322 20.3775 416.322 20.1704 cv
416.322 19.9633 416.154 19.7954 415.947 19.7954 cv
386.167 19.7954 li
385.959 19.7954 385.792 19.9633 385.792 20.1704 cv
385.792 20.3775 385.959 20.5454 386.167 20.5454 cv
.146181 .770871 .77734 .0289006 cmyk
f
406.027 9.8252 mo
415.947 9.8252 li
416.154 9.8252 416.322 9.6573 416.322 9.4502 cv
416.322 9.24309 416.154 9.0752 415.947 9.0752 cv
406.027 9.0752 li
405.82 9.0752 405.652 9.24309 405.652 9.4502 cv
405.652 9.6573 405.82 9.8252 406.027 9.8252 cv
.653773 .579889 .56878 .366613 cmyk
f
433.442 17.4151 mo
406.402 17.4151 li
406.402 13.4053 li
433.442 13.4053 li
433.442 17.4151 li
405.652 17.4151 mo
374.632 17.4151 li
374.632 13.4053 li
405.652 13.4053 li
405.652 17.4151 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
406.402 17.4151 mo
405.652 17.4151 li
405.652 13.4053 li
406.402 13.4053 li
406.402 17.4151 li
.369879 .299321 .304356 .000976577 cmyk
f
433.817 18.165 mo
406.402 18.165 li
406.402 17.4151 li
433.442 17.4151 li
433.442 13.4053 li
406.402 13.4053 li
406.402 12.6553 li
433.817 12.6553 li
433.916 12.6553 434.012 12.6953 434.082 12.7651 cv
434.152 12.8349 434.192 12.9316 434.192 13.0302 cv
434.192 17.79 li
434.192 17.8888 434.152 17.9854 434.082 18.0552 cv
434.012 18.125 433.916 18.165 433.817 18.165 cv
405.652 18.165 mo
374.257 18.165 li
374.159 18.165 374.062 18.125 373.992 18.0552 cv
373.922 17.9854 373.882 17.8888 373.882 17.79 cv
373.882 13.0302 li
373.882 12.9316 373.922 12.8349 373.992 12.7651 cv
374.062 12.6953 374.159 12.6553 374.257 12.6553 cv
405.652 12.6553 li
405.652 13.4053 li
374.632 13.4053 li
374.632 17.4151 li
405.652 17.4151 li
405.652 18.165 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
406.402 18.165 mo
405.652 18.165 li
405.652 17.4151 li
406.402 17.4151 li
406.402 18.165 li
406.402 13.4053 mo
405.652 13.4053 li
405.652 12.6553 li
406.402 12.6553 li
406.402 13.4053 li
.369879 .299321 .304356 .000976577 cmyk
f
.146181 .770871 .77734 .0289006 cmyk
MCBLKO+Helvetica*1 [7 -8.57253e-16 -8.57253e-16 -7 0 0 ]msf374.807 16.7295 mo(l)sh376.362 16.7295 mo(o)sh380.15 16.7295 mo(w\177noise adapted)[5.05566 4.08789 3.89258 3.89355 1.55469 3.5 3.89355 1.94434 3.89355 3.89258 3.89355 3.89258 1.94531 3.89258 0 ]xsh376.247 142.86 mo
376.247 143.235 li
415.957 143.235 li
416.055 143.235 416.152 143.195 416.222 143.126 cv
416.292 143.056 416.332 142.959 416.332 142.86 cv
416.332 23.7402 li
416.332 23.6415 416.292 23.5449 416.222 23.4751 cv
416.152 23.4052 416.055 23.3652 415.957 23.3652 cv
376.247 23.3652 li
376.148 23.3652 376.051 23.4052 375.981 23.4751 cv
375.912 23.5449 375.872 23.6415 375.872 23.7402 cv
375.872 142.86 li
375.872 142.959 375.912 143.056 375.981 143.126 cv
376.051 143.195 376.148 143.235 376.247 143.235 cv
376.247 142.86 li
376.622 142.86 li
376.622 24.1152 li
415.582 24.1152 li
415.582 142.485 li
376.247 142.485 li
376.247 142.86 li
376.622 142.86 li
376.247 142.86 li
cp
.75021 .679683 .670222 .90164 cmyk
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginMCBLKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/v <1C60D8A8C9B7A73DDF32B99894CC6FA66F5D07EC695DA6C164CB40F9A791729569775D3BE9C3> |-systemdict /gcheck known {setglobal} if end {end} ifendMCBLKO+Helvetica /Encoding getdup 118 /v putpop%ADOEndSubsetFont
/MCBLKO+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven /eight 40{/.notdef}rp /a /b /.notdef /d /e /f /g /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 5{/.notdef}rp /minus 128{/.notdef}rp]MCBLKO+Helvetica nfMCBLKO+Helvetica*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf379.487 153.479 mo(l)sh381.264 153.479 mo(o)sh385.593 153.479 mo(w noise)sh386.597 163.799 mo(e)sh391.046 163.799 mo(n)sh395.335 163.799 mo(vi)[4 0 ]xsh401.113 163.799 mo(r)sh403.377 163.799 mo(.)sh417.567 153.479 mo(high noise)sh426.307 163.799 mo(e)sh430.756 163.799 mo(n)sh435.045 163.799 mo(vi)[4 0 ]xsh440.823 163.799 mo(r)sh443.087 163.799 mo(.)sh.146181 .770871 .77734 .0289006 cmyk
MCBLKP+AdobePiStd*1 [8.31 -1.01769e-15 -1.01769e-15 -8.31 0 0 ]msf422.586 136.459 mo(\177)shMCBLKP+AdobePiStd*1 [8.31 -1.01769e-15 -1.01769e-15 -8.31 0 0 ]msf422.586 136.459 mo(\177) false chpgsave
[1 -1.22465e-16 1.22464e-16 1 -7956.43 -8060.55 ]ct
@
grestore newpath
.653773 .579889 .56878 .366613 cmyk
MCBLKP+AdobePiStd*1 [8.31 -1.01769e-15 -1.01769e-15 -8.31 0 0 ]msf442.437 95.5698 mo(\177)shMCBLKP+AdobePiStd*1 [8.31 -1.01769e-15 -1.01769e-15 -8.31 0 0 ]msf442.437 95.5698 mo(\177) false chpgsave
[1 -1.22465e-16 1.22464e-16 1 -7956.43 -8060.55 ]ct
@
grestore newpath
.653773 .579889 .56878 .366613 cmyk
MCBLKO+Helvetica*1 [7 -8.57253e-16 -8.57253e-16 -7 0 0 ]msf401.187 6.00977 mo(high\177noise adapted)[3.89355 1.55469 3.89258 3.89355 4.08789 3.89355 3.89258 1.55469 3.5 3.89355 1.94434 3.89355 3.89355 3.89258 3.89258 1.94531 3.89258 0 ]xsh426.251 30.8901 mo
426.251 20.1704 li
426.251 19.9633 426.084 19.7954 425.876 19.7954 cv
425.669 19.7954 425.501 19.9633 425.501 20.1704 cv
425.501 30.8901 li
425.501 31.0972 425.669 31.2651 425.876 31.2651 cv
426.084 31.2651 426.251 31.0972 426.251 30.8901 cv
.146181 .770871 .77734 .0289006 cmyk
f
446.102 30.8901 mo
446.102 9.4502 li
446.102 9.24309 445.934 9.0752 445.727 9.0752 cv
445.52 9.0752 445.352 9.24309 445.352 9.4502 cv
445.352 30.8901 li
445.352 31.0972 445.52 31.2651 445.727 31.2651 cv
445.934 31.2651 446.102 31.0972 446.102 30.8901 cv
.653773 .579889 .56878 .366613 cmyk
f
415.947 20.5454 mo
425.876 20.5454 li
426.084 20.5454 426.251 20.3775 426.251 20.1704 cv
426.251 19.9633 426.084 19.7954 425.876 19.7954 cv
415.947 19.7954 li
415.74 19.7954 415.572 19.9633 415.572 20.1704 cv
415.572 20.3775 415.74 20.5454 415.947 20.5454 cv
.146181 .770871 .77734 .0289006 cmyk
f
415.947 9.8252 mo
445.727 9.8252 li
445.934 9.8252 446.102 9.6573 446.102 9.4502 cv
446.102 9.24309 445.934 9.0752 445.727 9.0752 cv
415.947 9.0752 li
415.74 9.0752 415.572 9.24309 415.572 9.4502 cv
415.572 9.6573 415.74 9.8252 415.947 9.8252 cv
.653773 .579889 .56878 .366613 cmyk
f
415.947 142.86 mo
415.947 143.235 li
455.657 143.235 li
455.755 143.235 455.852 143.195 455.922 143.126 cv
455.992 143.056 456.032 142.959 456.032 142.86 cv
456.032 23.7402 li
456.032 23.6415 455.992 23.5449 455.922 23.4751 cv
455.852 23.4052 455.755 23.3652 455.657 23.3652 cv
415.947 23.3652 li
415.848 23.3652 415.751 23.4052 415.682 23.4751 cv
415.612 23.5449 415.572 23.6415 415.572 23.7402 cv
415.572 142.86 li
415.572 142.959 415.612 143.056 415.682 143.126 cv
415.751 143.195 415.848 143.235 415.947 143.235 cv
415.947 142.86 li
416.322 142.86 li
416.322 24.1152 li
455.282 24.1152 li
455.282 142.485 li
415.947 142.485 li
415.947 142.86 li
416.322 142.86 li
415.947 142.86 li
cp
.75021 .679683 .670222 .90164 cmyk
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginMCBLKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/A <1C60D8A8C9B64EDFF4A769B0E349B0B8A8759517834132408F730D5925332B160EAFC678A283B12B9F41A37E5CF702EF2D2E718583BF> |-/B <1C60D8A8C9B64EDFF4E8F029E491459914546F05F980240E216037EFFB56810F73C7B1AD75758AC950CDF0AE7CA5E10B4B98E91DD14CBA33340505432C4EBD036ED5D8912D20451B0A88BD5908DF5F74741DA09743ACC2D69ECC46C5DD005482FE9F42B63F3612F31E021BB829EB7CDDF491856FAD0A1D6B2854CE32CAE2827DAD35AA4DEB8EA2DDAB1E824241122D8E6929DF014B94E2393EF8A13B> |-/C <1C60D8A8C9B6079F6D8209747A86332E73924F1B07F271169856A53C915771D7C530ADE68D8CA49F0A6B3478F9E8176949771F40D91B68E1A88C72CE81CC0A91B3CFB642960E7EB2127A1637D49961A11F5DD40622F39379CDAB7E5B349DF832E4955008C5E3208AB258B012A237635179513D820ACF76E0A17ED392C351599687E8E7D0> |-/D <1C60D8A8C9B6079F62ED4B3208AD694719329DB5FF23BCAF76D41058F7AAAFF2529AC265BA39C333293E127AD9C0A8013616ECDB9EC4B8FC987A3C84239B76F354F924D3BA3E82C9BA9779AE94CCE8ABEEADDA4A3C72DD0361E6B5DAAF6C5A39F74710AA0C4E1E> |-systemdict /gcheck known {setglobal} if end {end} ifendMCBLKO+Helvetica /Encoding getdup 65 /A putdup 66 /B putdup 67 /C putdup 68 /D putpop%ADOEndSubsetFont
/MCBLKO+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven /eight 8{/.notdef}rp /A /B /C /D 28{/.notdef}rp /a /b /.notdef /d /e /f /g /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 5{/.notdef}rp /minus 128{/.notdef}rp]MCBLKO+Helvetica nfMCBLKO+Helvetica*1 [12 -1.46958e-15 -1.46958e-15 -12 0 0 ]msf2.97705 14.1597 mo(A)sh338.887 14.1597 mo(B)sh2.64697 183.299 mo(C)sh391.767 183.299 mo(D)sh19.4619 250.07 mo
19.4619 194.48 li
19.4619 194.273 19.294 194.105 19.0869 194.105 cv
18.8798 194.105 18.7119 194.273 18.7119 194.48 cv
18.7119 250.07 li
18.7119 250.277 18.8798 250.445 19.0869 250.445 cv
19.294 250.445 19.4619 250.277 19.4619 250.07 cv
.193668 .150057 .155337 3.0518e-05 cmyk
f
34.8921 250.07 mo
34.8921 194.48 li
34.8921 194.273 34.7242 194.105 34.5171 194.105 cv
34.31 194.105 34.1421 194.273 34.1421 194.48 cv
34.1421 250.07 li
34.1421 250.277 34.31 250.445 34.5171 250.445 cv
34.7242 250.445 34.8921 250.277 34.8921 250.07 cv
f
50.312 250.07 mo
50.312 194.48 li
50.312 194.273 50.1441 194.105 49.937 194.105 cv
49.7299 194.105 49.562 194.273 49.562 194.48 cv
49.562 250.07 li
49.562 250.277 49.7299 250.445 49.937 250.445 cv
50.1441 250.445 50.312 250.277 50.312 250.07 cv
f
65.7319 250.07 mo
65.7319 194.48 li
65.7319 194.273 65.564 194.105 65.3569 194.105 cv
65.1498 194.105 64.9819 194.273 64.9819 194.48 cv
64.9819 250.07 li
64.9819 250.277 65.1498 250.445 65.3569 250.445 cv
65.564 250.445 65.7319 250.277 65.7319 250.07 cv
f
81.1621 250.07 mo
81.1621 194.48 li
81.1621 194.273 80.9942 194.105 80.7871 194.105 cv
80.58 194.105 80.4121 194.273 80.4121 194.48 cv
80.4121 250.07 li
80.4121 250.277 80.58 250.445 80.7871 250.445 cv
80.9942 250.445 81.1621 250.277 81.1621 250.07 cv
f
19.0869 250.445 mo
80.7871 250.445 li
80.9942 250.445 81.1621 250.277 81.1621 250.07 cv
81.1621 249.863 80.9942 249.695 80.7871 249.695 cv
19.0869 249.695 li
18.8798 249.695 18.7119 249.863 18.7119 250.07 cv
18.7119 250.277 18.8798 250.445 19.0869 250.445 cv
f
19.0869 236.545 mo
80.7871 236.545 li
80.9942 236.545 81.1621 236.377 81.1621 236.17 cv
81.1621 235.963 80.9942 235.795 80.7871 235.795 cv
19.0869 235.795 li
18.8798 235.795 18.7119 235.963 18.7119 236.17 cv
18.7119 236.377 18.8798 236.545 19.0869 236.545 cv
f
19.0869 222.646 mo
80.7871 222.646 li
80.9942 222.646 81.1621 222.478 81.1621 222.271 cv
81.1621 222.063 80.9942 221.896 80.7871 221.896 cv
19.0869 221.896 li
18.8798 221.896 18.7119 222.063 18.7119 222.271 cv
18.7119 222.478 18.8798 222.646 19.0869 222.646 cv
f
19.0869 208.755 mo
80.7871 208.755 li
80.9942 208.755 81.1621 208.587 81.1621 208.38 cv
81.1621 208.173 80.9942 208.005 80.7871 208.005 cv
19.0869 208.005 li
18.8798 208.005 18.7119 208.173 18.7119 208.38 cv
18.7119 208.587 18.8798 208.755 19.0869 208.755 cv
f
19.0869 194.855 mo
80.7871 194.855 li
80.9942 194.855 81.1621 194.688 81.1621 194.48 cv
81.1621 194.273 80.9942 194.105 80.7871 194.105 cv
19.0869 194.105 li
18.8798 194.105 18.7119 194.273 18.7119 194.48 cv
18.7119 194.688 18.8798 194.855 19.0869 194.855 cv
f
19.0869 222.62 mo
19.707 222.62 li
20.3267 222.62 li
20.9468 222.62 li
21.5669 222.62 li
22.187 222.62 li
22.8267 222.62 li
23.4468 222.62 li
24.0669 222.62 li
24.687 222.62 li
25.3071 222.62 li
25.9468 222.62 li
26.5669 222.62 li
27.187 222.62 li
27.8071 222.62 li
28.4268 222.62 li
29.0406 222.62 li
29.6651 222.63 li
29.6768 222.63 li
30.2969 222.63 li
30.9268 222.63 li
31.5469 222.63 li
32.167 222.63 li
32.7969 222.63 li
33.417 222.63 li
34.0371 222.63 li
34.6567 222.63 li
35.2769 222.63 li
35.897 222.63 li
36.5286 222.63 li
37.1437 222.641 li
37.1567 222.641 li
37.7769 222.641 li
38.397 222.641 li
39.0171 222.641 li
39.6567 222.641 li
40.2769 222.641 li
40.8907 222.641 li
41.5053 222.65 li
41.5171 222.65 li
42.1367 222.65 li
42.7568 222.65 li
43.397 222.65 li
44.0171 222.65 li
44.6305 222.65 li
45.245 222.66 li
45.2568 222.66 li
45.877 222.66 li
46.5006 222.66 li
47.1151 222.67 li
47.127 222.67 li
47.74 222.67 li
48.3537 222.681 li
48.3667 222.681 li
48.9743 222.681 li
49.5833 222.7 li
49.5841 222.7 li
50.1754 222.718 li
50.4917 222.769 li
50.9364 223.25 li
51.5565 223.92 li
51.5684 223.932 li
52.1886 224.572 li
52.1923 224.576 li
52.832 225.226 li
52.8406 225.235 li
53.4607 225.845 li
53.4699 225.854 li
54.09 226.444 li
54.0946 226.448 li
54.7147 227.028 li
54.7196 227.033 li
55.3392 227.602 li
55.3437 227.606 li
55.9639 228.167 li
55.9679 228.17 li
56.608 228.741 li
56.6045 228.737 li
57.2246 229.297 li
57.844 229.856 li
57.839 229.852 li
58.4499 230.414 li
59.0485 231.003 li
59.6411 231.642 li
60.2386 232.433 li
60.2415 232.437 li
60.8616 233.246 li
60.914 233.307 li
61.5336 233.958 li
61.5897 234.011 li
62.2099 234.54 li
62.269 234.586 li
62.8891 235.016 li
62.9415 235.05 li
63.5816 235.42 li
63.6304 235.446 li
64.25 235.745 li
64.3057 235.77 li
64.9258 236.01 li
64.9562 236.021 li
65.5764 236.231 li
65.6293 236.247 li
66.2495 236.407 li
66.2664 236.411 li
66.9061 236.56 li
66.9453 236.568 li
67.5654 236.679 li
67.5892 236.683 li
68.2094 236.773 li
68.2208 236.774 li
68.841 236.854 li
68.8653 236.857 li
69.4854 236.916 li
69.497 236.917 li
70.1167 236.967 li
70.1299 236.968 li
70.7701 237.008 li
70.7803 237.009 li
71.4004 237.039 li
71.4122 237.04 li
72.0323 237.06 li
72.0335 237.06 li
72.6531 237.08 li
72.652 237.08 li
73.2721 237.1 li
73.2852 237.1 li
73.9151 237.11 li
74.5351 237.12 li
74.5469 237.12 li
75.1607 237.12 li
75.7753 237.13 li
75.7871 237.13 li
76.4067 237.13 li
77.0269 237.13 li
77.667 237.13 li
78.2871 237.13 li
78.9067 237.13 li
79.5269 237.13 li
79.5387 237.13 li
80.1527 237.12 li
80.7871 237.12 li
81.2013 237.12 81.5371 236.784 81.5371 236.37 cv
81.5371 235.956 81.2013 235.62 80.7871 235.62 cv
80.147 235.62 li
80.1352 235.62 li
79.5213 235.63 li
78.9067 235.63 li
78.2871 235.63 li
77.667 235.63 li
77.0269 235.63 li
76.4067 235.63 li
75.7934 235.63 li
75.1788 235.62 li
75.167 235.62 li
74.5516 235.62 li
73.9386 235.61 li
73.3155 235.601 li
72.7015 235.58 li
72.7004 235.58 li
72.0808 235.561 li
72.0819 235.561 li
71.4665 235.541 li
70.8587 235.511 li
70.2305 235.472 li
69.6235 235.423 li
69.0214 235.365 li
68.4192 235.287 li
67.8162 235.2 li
67.2282 235.095 li
66.6156 234.952 li
66.0311 234.801 li
65.4529 234.605 li
64.8759 234.382 li
64.3083 234.107 li
63.7193 233.767 li
63.1554 233.375 li
62.5929 232.895 li
62.0279 232.302 li
61.4323 231.524 li
61.4352 231.528 li
60.8151 230.708 li
60.7669 230.65 li
60.137 229.971 li
60.113 229.946 li
59.4929 229.336 li
59.4745 229.318 li
58.8544 228.748 li
58.8493 228.743 li
58.2297 228.184 li
57.6094 227.624 li
57.6058 227.621 li
56.9657 227.05 li
56.9697 227.054 li
56.3496 226.493 li
56.3541 226.498 li
55.7345 225.928 li
55.7394 225.933 li
55.1193 225.353 li
55.1238 225.357 li
54.5082 224.771 li
53.8968 224.17 li
53.2618 223.524 li
53.2655 223.528 li
52.6512 222.894 li
52.0372 222.231 li
51.4171 221.561 li
51.3037 221.438 51.1516 221.357 50.9869 221.33 cv
50.3672 221.229 li
50.2699 221.22 li
49.6298 221.201 li
49.6305 221.201 li
49.0104 221.181 li
48.9868 221.181 li
48.3738 221.181 li
47.7601 221.17 li
47.7471 221.17 li
47.1316 221.17 li
46.5186 221.16 li
46.5068 221.16 li
45.877 221.16 li
45.2615 221.16 li
44.6485 221.15 li
44.6367 221.15 li
44.0171 221.15 li
43.397 221.15 li
42.7568 221.15 li
42.1367 221.15 li
41.5233 221.15 li
40.9088 221.141 li
40.897 221.141 li
40.2769 221.141 li
39.6567 221.141 li
39.0171 221.141 li
38.397 221.141 li
37.7769 221.141 li
37.1638 221.141 li
36.5501 221.13 li
36.5371 221.13 li
35.897 221.13 li
35.2769 221.13 li
34.6567 221.13 li
34.0371 221.13 li
33.417 221.13 li
32.7969 221.13 li
32.167 221.13 li
31.5469 221.13 li
30.9268 221.13 li
30.2969 221.13 li
29.683 221.13 li
29.0585 221.12 li
29.0469 221.12 li
28.4268 221.12 li
27.8071 221.12 li
27.187 221.12 li
26.5669 221.12 li
25.9468 221.12 li
25.3071 221.12 li
24.687 221.12 li
24.0669 221.12 li
23.4468 221.12 li
22.8267 221.12 li
22.187 221.12 li
21.5669 221.12 li
20.9468 221.12 li
20.3267 221.12 li
19.707 221.12 li
19.0869 221.12 li
18.6727 221.12 18.3369 221.456 18.3369 221.87 cv
18.3369 222.284 18.6727 222.62 19.0869 222.62 cv
cp
.653773 .579889 .56878 .366613 cmyk
f
19.4619 250.07 mo
19.4619 188.92 li
19.4619 188.713 19.294 188.545 19.0869 188.545 cv
18.8798 188.545 18.7119 188.713 18.7119 188.92 cv
18.7119 250.07 li
18.7119 250.277 18.8798 250.445 19.0869 250.445 cv
19.294 250.445 19.4619 250.277 19.4619 250.07 cv
.75021 .679683 .670222 .90164 cmyk
f
.653773 .579889 .56878 .366613 cmyk
MCBLKO+Helvetica*1 [7 -8.57253e-16 -8.57253e-16 -7 0 0 ]msf6.27686 252.579 mo(0.6)sh12.1167 196.989 mo(2)sh19.0869 249.695 mo
17.2368 249.695 li
17.0297 249.695 16.8618 249.863 16.8618 250.07 cv
16.8618 250.277 17.0297 250.445 17.2368 250.445 cv
19.0869 250.445 li
19.294 250.445 19.4619 250.277 19.4619 250.07 cv
19.4619 249.863 19.294 249.695 19.0869 249.695 cv
.75021 .679683 .670222 .90164 cmyk
f
19.0869 194.105 mo
17.2368 194.105 li
17.0297 194.105 16.8618 194.273 16.8618 194.48 cv
16.8618 194.688 17.0297 194.855 17.2368 194.855 cv
19.0869 194.855 li
19.294 194.855 19.4619 194.688 19.4619 194.48 cv
19.4619 194.273 19.294 194.105 19.0869 194.105 cv
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Symbol Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Symbol def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 4 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 97 /alpha putdef/FontBBox {-167 -299 1094 827} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/.notdef <1C60D8A8C9B7C3C9ED9313AFF691AF9DEA7EFE9F59246D6675CBE223F5D9796E7E2CD60A70D0> |-/alpha <1C60D8A8C9B66A6BAA2CFDED1D2EFA75F98BE0B51FA91D3486C6EC805643E81B99653CCA64E30B935978931127908C09443CBECCD6A571D8D3FCEC93A5A158423091AB4239ED9928E003300569B255F0D943F8F5D35F0EC6E967A5B49AEA36AE1B3BC22B43FD3533BC2C31AA72284108ABA1BE9C11F8548B89711F627A5A5FF6711878104FE7A8510F67AD235FAEA6A6736F2AD678C58B65FCA7756B07A21F636B65B5EE976BEE3D808AD91A855908C05561ACFAAC8EC0A089FC85F3C70E7AD807445570518FD0DAC061976FAF4B8F48D79A7BC0B7> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/MCBLKQ+Symbol /Symbol findfont ct_VMDictPut/MCBLKQ+Symbol*1 [97{/.notdef}rp /alpha 158{/.notdef}rp]MCBLKQ+Symbol nfMCBLKQ+Symbol*1 [12 -1.46958e-15 -1.46958e-15 -12 0 0 ]msf22.1768 193.35 mo(a)shMCBLKO+Helvetica*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf29.7471 195.549 mo(y)sh81.1621 250.07 mo
81.1621 194.48 li
81.1621 194.273 80.9942 194.105 80.7871 194.105 cv
80.58 194.105 80.4121 194.273 80.4121 194.48 cv
80.4121 250.07 li
80.4121 250.277 80.58 250.445 80.7871 250.445 cv
80.9942 250.445 81.1621 250.277 81.1621 250.07 cv
.193668 .150057 .155337 3.0518e-05 cmyk
f
96.582 250.07 mo
96.582 194.48 li
96.582 194.273 96.4141 194.105 96.207 194.105 cv
95.9999 194.105 95.832 194.273 95.832 194.48 cv
95.832 250.07 li
95.832 250.277 95.9999 250.445 96.207 250.445 cv
96.4141 250.445 96.582 250.277 96.582 250.07 cv
f
112.012 250.07 mo
112.012 194.48 li
112.012 194.273 111.844 194.105 111.637 194.105 cv
111.43 194.105 111.262 194.273 111.262 194.48 cv
111.262 250.07 li
111.262 250.277 111.43 250.445 111.637 250.445 cv
111.844 250.445 112.012 250.277 112.012 250.07 cv
f
127.432 250.07 mo
127.432 194.48 li
127.432 194.273 127.264 194.105 127.057 194.105 cv
126.85 194.105 126.682 194.273 126.682 194.48 cv
126.682 250.07 li
126.682 250.277 126.85 250.445 127.057 250.445 cv
127.264 250.445 127.432 250.277 127.432 250.07 cv
f
142.852 250.07 mo
142.852 194.48 li
142.852 194.273 142.684 194.105 142.477 194.105 cv
142.27 194.105 142.102 194.273 142.102 194.48 cv
142.102 250.07 li
142.102 250.277 142.27 250.445 142.477 250.445 cv
142.684 250.445 142.852 250.277 142.852 250.07 cv
f
80.7871 250.445 mo
142.477 250.445 li
142.684 250.445 142.852 250.277 142.852 250.07 cv
142.852 249.863 142.684 249.695 142.477 249.695 cv
80.7871 249.695 li
80.58 249.695 80.4121 249.863 80.4121 250.07 cv
80.4121 250.277 80.58 250.445 80.7871 250.445 cv
f
80.7871 236.545 mo
142.477 236.545 li
142.684 236.545 142.852 236.377 142.852 236.17 cv
142.852 235.963 142.684 235.795 142.477 235.795 cv
80.7871 235.795 li
80.58 235.795 80.4121 235.963 80.4121 236.17 cv
80.4121 236.377 80.58 236.545 80.7871 236.545 cv
f
80.7871 222.646 mo
142.477 222.646 li
142.684 222.646 142.852 222.478 142.852 222.271 cv
142.852 222.063 142.684 221.896 142.477 221.896 cv
80.7871 221.896 li
80.58 221.896 80.4121 222.063 80.4121 222.271 cv
80.4121 222.478 80.58 222.646 80.7871 222.646 cv
f
80.7871 208.755 mo
142.477 208.755 li
142.684 208.755 142.852 208.587 142.852 208.38 cv
142.852 208.173 142.684 208.005 142.477 208.005 cv
80.7871 208.005 li
80.58 208.005 80.4121 208.173 80.4121 208.38 cv
80.4121 208.587 80.58 208.755 80.7871 208.755 cv
f
80.7871 194.855 mo
142.477 194.855 li
142.684 194.855 142.852 194.688 142.852 194.48 cv
142.852 194.273 142.684 194.105 142.477 194.105 cv
80.7871 194.105 li
80.58 194.105 80.4121 194.273 80.4121 194.48 cv
80.4121 194.688 80.58 194.855 80.7871 194.855 cv
f
80.7871 222.601 mo
81.4067 222.601 li
82.0206 222.601 li
82.6352 222.61 li
82.647 222.61 li
83.2671 222.61 li
83.8805 222.61 li
84.5154 222.62 li
84.5269 222.62 li
85.1392 222.62 li
85.7553 222.63 li
85.7671 222.63 li
86.3867 222.63 li
86.9997 222.63 li
87.6239 222.641 li
87.6249 222.641 li
88.245 222.65 li
88.2568 222.65 li
88.8707 222.65 li
89.4853 222.66 li
90.1049 222.67 li
90.1037 222.67 li
90.7238 222.681 li
90.7254 222.681 li
91.3655 222.69 li
91.377 222.69 li
91.9846 222.69 li
92.5931 222.71 li
92.6049 222.71 li
93.225 222.72 li
93.2238 222.72 li
93.8439 222.73 li
93.8455 222.73 li
94.4796 222.74 li
95.0931 222.759 li
95.1037 222.76 li
95.7186 222.77 li
96.3333 222.79 li
96.3321 222.79 li
96.9523 222.81 li
96.9534 222.81 li
97.573 222.83 li
97.5727 222.83 li
98.2128 222.85 li
98.2132 222.85 li
98.8333 222.87 li
98.8321 222.87 li
99.4453 222.89 li
100.061 222.919 li
100.06 222.919 li
100.68 222.949 li
100.681 222.949 li
101.311 222.98 li
101.311 222.98 li
101.926 223.009 li
102.539 223.048 li
103.159 223.088 li
103.778 223.128 li
104.393 223.168 li
105.029 223.217 li
105.026 223.217 li
105.642 223.268 li
106.255 223.327 li
106.254 223.327 li
106.87 223.387 li
107.48 223.455 li
108.114 223.534 li
108.111 223.534 li
108.724 223.613 li
109.333 223.701 li
109.935 223.799 li
110.533 223.915 li
111.118 224.047 li
111.63 224.198 li
111.943 224.4 li
112.478 225.946 li
112.48 225.951 li
113.1 227.701 li
113.103 227.708 li
113.723 229.399 li
113.725 229.405 li
114.355 231.075 li
114.36 231.087 li
114.98 232.647 li
114.983 232.655 li
115.603 234.165 li
115.607 234.175 li
116.227 235.625 li
116.231 235.634 li
116.851 237.034 li
116.856 237.043 li
117.475 238.393 li
117.48 238.403 li
118.12 239.743 li
118.125 239.753 li
118.745 241.003 li
118.75 241.012 li
119.37 242.222 li
119.376 242.233 li
119.995 243.393 li
120.001 243.403 li
120.621 244.523 li
120.627 244.535 li
121.267 245.645 li
121.273 245.655 li
121.893 246.695 li
121.983 246.816 li
122.602 247.495 li
122.67 247.569 122.749 247.627 122.839 247.67 cv
123.459 247.96 li
123.658 248.021 li
124.278 248.12 li
124.384 248.13 li
125.004 248.141 li
125.041 248.14 li
125.681 248.12 li
125.693 248.119 li
126.313 248.089 li
126.325 248.088 li
126.938 248.049 li
127.552 248.02 li
127.554 248.02 li
128.173 247.989 li
128.173 247.989 li
128.796 247.959 li
129.41 247.94 li
129.411 247.94 li
130.026 247.92 li
130.639 247.91 li
130.651 247.91 li
131.265 247.89 li
131.88 247.88 li
131.878 247.88 li
132.518 247.87 li
133.139 247.86 li
133.754 247.851 li
134.367 247.851 li
134.38 247.85 li
134.994 247.84 li
135.627 247.84 li
135.639 247.84 li
136.253 247.83 li
136.867 247.83 li
136.878 247.83 li
137.494 247.82 li
138.107 247.82 li
138.727 247.82 li
138.738 247.82 li
139.372 247.811 li
139.987 247.811 li
140.607 247.811 li
141.227 247.811 li
141.24 247.81 li
141.854 247.8 li
142.477 247.8 li
142.891 247.8 143.227 247.464 143.227 247.05 cv
143.227 246.636 142.891 246.3 142.477 246.3 cv
141.847 246.3 li
141.834 246.3 li
141.22 246.311 li
140.607 246.311 li
139.987 246.311 li
139.367 246.311 li
139.355 246.311 li
138.72 246.32 li
138.107 246.32 li
137.487 246.32 li
137.475 246.32 li
136.861 246.33 li
136.247 246.33 li
136.235 246.33 li
135.62 246.34 li
134.987 246.34 li
134.974 246.34 li
134.359 246.351 li
133.747 246.351 li
133.735 246.351 li
133.115 246.36 li
132.495 246.37 li
131.855 246.38 li
131.854 246.38 li
131.234 246.391 li
131.223 246.391 li
130.61 246.41 li
129.995 246.42 li
129.982 246.42 li
129.362 246.441 li
129.363 246.441 li
128.743 246.46 li
128.731 246.461 li
128.101 246.491 li
128.1 246.491 li
127.48 246.521 li
127.482 246.521 li
126.862 246.551 li
126.849 246.551 li
126.235 246.591 li
125.626 246.621 li
125.011 246.64 li
124.463 246.631 li
124 246.556 li
123.61 246.374 li
123.142 245.861 li
122.564 244.891 li
121.93 243.791 li
121.316 242.682 li
120.702 241.532 li
120.087 240.332 li
119.472 239.092 li
118.836 237.762 li
118.221 236.422 li
117.605 235.031 li
116.989 233.59 li
116.372 232.089 li
115.757 230.54 li
115.128 228.876 li
115.131 228.882 li
114.513 227.196 li
113.894 225.45 li
113.896 225.455 li
113.276 223.665 li
113.221 223.507 113.114 223.371 112.974 223.28 cv
112.354 222.88 li
112.16 222.791 li
111.52 222.601 li
111.472 222.589 li
110.852 222.449 li
110.83 222.444 li
110.21 222.324 li
110.187 222.32 li
109.567 222.22 li
109.554 222.218 li
108.934 222.128 li
108.923 222.126 li
108.303 222.046 li
108.3 222.046 li
107.66 221.966 li
107.65 221.965 li
107.03 221.895 li
107.02 221.894 li
106.4 221.834 li
106.398 221.834 li
105.779 221.774 li
105.768 221.773 li
105.148 221.722 li
105.145 221.722 li
104.505 221.672 li
104.495 221.671 li
103.875 221.631 li
103.255 221.591 li
102.635 221.551 li
102.015 221.511 li
102.002 221.511 li
101.382 221.481 li
101.383 221.481 li
100.753 221.451 li
100.753 221.451 li
100.133 221.421 li
100.132 221.421 li
99.5125 221.391 li
99.5018 221.391 li
98.8817 221.371 li
98.8805 221.37 li
98.2604 221.351 li
98.2608 221.351 li
97.6207 221.33 li
97.6203 221.33 li
97.0007 221.311 li
97.0018 221.311 li
96.3817 221.29 li
96.3805 221.29 li
95.7604 221.271 li
95.7498 221.271 li
95.1349 221.26 li
94.5207 221.241 li
94.5085 221.24 li
93.8684 221.231 li
93.8699 221.231 li
93.2498 221.22 li
93.2486 221.22 li
92.6347 221.21 li
92.0207 221.191 li
91.9971 221.19 li
91.3816 221.19 li
90.7483 221.181 li
90.7498 221.181 li
90.1297 221.17 li
90.1285 221.17 li
89.5089 221.16 li
88.8888 221.15 li
88.877 221.15 li
88.2615 221.15 li
87.6485 221.141 li
87.6495 221.141 li
87.0196 221.13 li
87.0068 221.13 li
86.3867 221.13 li
85.7733 221.13 li
85.1588 221.12 li
85.147 221.12 li
84.5331 221.12 li
83.8982 221.11 li
83.8867 221.11 li
83.2671 221.11 li
82.6517 221.11 li
82.0387 221.101 li
82.0269 221.101 li
81.4067 221.101 li
80.7871 221.101 li
80.3729 221.101 80.0371 221.436 80.0371 221.851 cv
80.0371 222.265 80.3729 222.601 80.7871 222.601 cv
cp
.653773 .579889 .56878 .366613 cmyk
f
81.1621 250.07 mo
81.1621 188.92 li
81.1621 188.713 80.9942 188.545 80.7871 188.545 cv
80.58 188.545 80.4121 188.713 80.4121 188.92 cv
80.4121 250.07 li
80.4121 250.277 80.58 250.445 80.7871 250.445 cv
80.9942 250.445 81.1621 250.277 81.1621 250.07 cv
.75021 .679683 .670222 .90164 cmyk
f
.653773 .579889 .56878 .366613 cmyk
MCBLKO+Helvetica*1 [7 -8.57253e-16 -8.57253e-16 -7 0 0 ]msf67.9668 252.579 mo(0.6)sh73.8071 196.989 mo(2)sh80.7871 249.695 mo
78.937 249.695 li
78.7299 249.695 78.562 249.863 78.562 250.07 cv
78.562 250.277 78.7299 250.445 78.937 250.445 cv
80.7871 250.445 li
80.9942 250.445 81.1621 250.277 81.1621 250.07 cv
81.1621 249.863 80.9942 249.695 80.7871 249.695 cv
.75021 .679683 .670222 .90164 cmyk
f
80.7871 194.105 mo
78.937 194.105 li
78.7299 194.105 78.562 194.273 78.562 194.48 cv
78.562 194.688 78.7299 194.855 78.937 194.855 cv
80.7871 194.855 li
80.9942 194.855 81.1621 194.688 81.1621 194.48 cv
81.1621 194.273 80.9942 194.105 80.7871 194.105 cv
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Symbol AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginMCBLKQ+Symbol dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/beta <1C60D8A8C9B79676F45760016CF7EFFD6F8091411999BC8C0234C57866E79596E81A8F807C36C1736DE7394C346E38154FCF821663DCD54BBD02CF852454D6CA13D4B372AD73020F0E4D0F063300227A0BD20AD2B96F53B0F2949D19CD555DFF47D3148184ED4F992B387FAD171E3FB68CDAE55761F60631AC88364C45369990E3D29DC48AAE0C59D254661FF89B1DA52679C33621CA6EBA11B3F2D1972BDDA1C455BE9BC800C525DFBA9447BC60399500FA6F804085F7F0FD10F5105903D100C8AB4C90F6A633DA1A24C4B1651C2AFDA12F4871E6AD234416AA819BA48152F6D44487667A4AC4A12871BAF20709F347ADB170A6F7B0> |-systemdict /gcheck known {setglobal} if end {end} ifendMCBLKQ+Symbol /Encoding getdup 98 /beta putpop%ADOEndSubsetFont
/MCBLKQ+Symbol*1 [97{/.notdef}rp /alpha /beta 157{/.notdef}rp]MCBLKQ+Symbol nfMCBLKQ+Symbol*1 [12 -1.46958e-15 -1.46958e-15 -12 0 0 ]msf83.8667 193.35 mo(b)shMCBLKO+Helvetica*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf90.457 195.549 mo(y)sh142.852 250.07 mo
142.852 194.48 li
142.852 194.273 142.684 194.105 142.477 194.105 cv
142.27 194.105 142.102 194.273 142.102 194.48 cv
142.102 250.07 li
142.102 250.277 142.27 250.445 142.477 250.445 cv
142.684 250.445 142.852 250.277 142.852 250.07 cv
.193668 .150057 .155337 3.0518e-05 cmyk
f
158.282 250.07 mo
158.282 194.48 li
158.282 194.273 158.114 194.105 157.907 194.105 cv
157.7 194.105 157.532 194.273 157.532 194.48 cv
157.532 250.07 li
157.532 250.277 157.7 250.445 157.907 250.445 cv
158.114 250.445 158.282 250.277 158.282 250.07 cv
f
173.702 250.07 mo
173.702 194.48 li
173.702 194.273 173.534 194.105 173.327 194.105 cv
173.12 194.105 172.952 194.273 172.952 194.48 cv
172.952 250.07 li
172.952 250.277 173.12 250.445 173.327 250.445 cv
173.534 250.445 173.702 250.277 173.702 250.07 cv
f
189.132 250.07 mo
189.132 194.48 li
189.132 194.273 188.964 194.105 188.757 194.105 cv
188.55 194.105 188.382 194.273 188.382 194.48 cv
188.382 250.07 li
188.382 250.277 188.55 250.445 188.757 250.445 cv
188.964 250.445 189.132 250.277 189.132 250.07 cv
f
204.552 250.07 mo
204.552 194.48 li
204.552 194.273 204.384 194.105 204.177 194.105 cv
203.97 194.105 203.802 194.273 203.802 194.48 cv
203.802 250.07 li
203.802 250.277 203.97 250.445 204.177 250.445 cv
204.384 250.445 204.552 250.277 204.552 250.07 cv
f
142.477 250.445 mo
204.177 250.445 li
204.384 250.445 204.552 250.277 204.552 250.07 cv
204.552 249.863 204.384 249.695 204.177 249.695 cv
142.477 249.695 li
142.27 249.695 142.102 249.863 142.102 250.07 cv
142.102 250.277 142.27 250.445 142.477 250.445 cv
f
142.477 236.545 mo
204.177 236.545 li
204.384 236.545 204.552 236.377 204.552 236.17 cv
204.552 235.963 204.384 235.795 204.177 235.795 cv
142.477 235.795 li
142.27 235.795 142.102 235.963 142.102 236.17 cv
142.102 236.377 142.27 236.545 142.477 236.545 cv
f
142.477 222.646 mo
204.177 222.646 li
204.384 222.646 204.552 222.478 204.552 222.271 cv
204.552 222.063 204.384 221.896 204.177 221.896 cv
142.477 221.896 li
142.27 221.896 142.102 222.063 142.102 222.271 cv
142.102 222.478 142.27 222.646 142.477 222.646 cv
f
142.477 208.755 mo
204.177 208.755 li
204.384 208.755 204.552 208.587 204.552 208.38 cv
204.552 208.173 204.384 208.005 204.177 208.005 cv
142.477 208.005 li
142.27 208.005 142.102 208.173 142.102 208.38 cv
142.102 208.587 142.27 208.755 142.477 208.755 cv
f
142.477 194.855 mo
204.177 194.855 li
204.384 194.855 204.552 194.688 204.552 194.48 cv
204.552 194.273 204.384 194.105 204.177 194.105 cv
142.477 194.105 li
142.27 194.105 142.102 194.273 142.102 194.48 cv
142.102 194.688 142.27 194.855 142.477 194.855 cv
f
142.49 227.73 mo
143.11 227.72 li
143.12 227.719 li
143.74 227.7 li
144.354 227.68 li
144.97 227.67 li
144.981 227.67 li
145.6 227.65 li
146.241 227.629 li
146.861 227.61 li
146.862 227.61 li
147.482 227.589 li
147.492 227.589 li
148.107 227.56 li
148.722 227.54 li
148.72 227.54 li
149.36 227.52 li
149.373 227.52 li
149.994 227.489 li
150.606 227.459 li
151.22 227.44 li
151.233 227.44 li
151.853 227.409 li
152.474 227.379 li
152.471 227.379 li
153.111 227.35 li
153.113 227.35 li
153.733 227.319 li
153.745 227.319 li
154.359 227.279 li
154.974 227.249 li
154.985 227.248 li
155.599 227.209 li
156.222 227.18 li
156.235 227.179 li
156.855 227.139 li
157.475 227.099 li
158.087 227.059 li
158.704 227.029 li
158.727 227.028 li
159.34 226.979 li
159.974 226.939 li
159.975 226.939 li
160.595 226.899 li
161.215 226.859 li
161.227 226.858 li
161.841 226.809 li
162.455 226.769 li
162.466 226.768 li
163.106 226.717 li
163.107 226.717 li
163.722 226.668 li
164.335 226.628 li
164.347 226.627 li
164.967 226.578 li
165.587 226.528 li
166.207 226.478 li
166.205 226.478 li
166.845 226.428 li
166.848 226.428 li
167.468 226.377 li
167.467 226.377 li
168.087 226.328 li
168.707 226.278 li
168.72 226.277 li
169.333 226.217 li
169.956 226.168 li
169.969 226.166 li
170.584 226.107 li
171.197 226.058 li
171.21 226.057 li
171.83 225.996 li
171.827 225.997 li
172.457 225.937 li
172.471 225.936 li
173.091 225.865 li
173.113 225.863 li
173.743 225.773 li
173.824 225.756 li
174.444 225.596 li
174.656 225.505 li
175.157 225.19 li
175.593 225.106 li
176.152 225.07 li
176.775 225.05 li
177.389 225.04 li
178.009 225.03 li
178.022 225.03 li
178.636 225.01 li
179.249 225 li
179.869 224.99 li
179.881 224.99 li
180.521 224.969 li
181.14 224.95 li
181.76 224.93 li
181.762 224.93 li
182.382 224.91 li
182.393 224.909 li
183.007 224.879 li
183.63 224.86 li
183.655 224.859 li
184.264 224.819 li
184.881 224.799 li
184.881 224.799 li
185.494 224.78 li
186.108 224.77 li
186.11 224.77 li
186.724 224.76 li
187.347 224.76 li
187.967 224.76 li
188.587 224.76 li
189.207 224.76 li
189.827 224.76 li
189.838 224.76 li
190.473 224.75 li
191.087 224.75 li
191.707 224.75 li
192.327 224.75 li
192.947 224.75 li
193.567 224.75 li
194.207 224.75 li
194.827 224.75 li
195.447 224.75 li
196.067 224.75 li
196.687 224.75 li
197.317 224.75 li
197.947 224.75 li
198.567 224.75 li
199.187 224.75 li
199.807 224.75 li
200.427 224.75 li
201.057 224.75 li
201.677 224.75 li
202.297 224.75 li
202.917 224.75 li
203.537 224.75 li
204.177 224.75 li
204.591 224.75 204.927 224.414 204.927 224 cv
204.927 223.586 204.591 223.25 204.177 223.25 cv
203.537 223.25 li
202.917 223.25 li
202.297 223.25 li
201.677 223.25 li
201.057 223.25 li
200.427 223.25 li
199.807 223.25 li
199.187 223.25 li
198.567 223.25 li
197.947 223.25 li
197.317 223.25 li
196.687 223.25 li
196.067 223.25 li
195.447 223.25 li
194.827 223.25 li
194.207 223.25 li
193.567 223.25 li
192.947 223.25 li
192.327 223.25 li
191.707 223.25 li
191.087 223.25 li
190.467 223.25 li
190.455 223.25 li
189.82 223.26 li
189.207 223.26 li
188.587 223.26 li
187.967 223.26 li
187.347 223.26 li
186.717 223.26 li
186.704 223.26 li
186.084 223.271 li
186.085 223.271 li
185.465 223.28 li
185.453 223.281 li
184.833 223.3 li
184.833 223.3 li
184.203 223.321 li
184.179 223.322 li
183.572 223.361 li
182.954 223.38 li
182.94 223.381 li
182.327 223.411 li
181.712 223.431 li
181.713 223.431 li
181.093 223.451 li
180.473 223.47 li
179.84 223.49 li
179.225 223.5 li
178.605 223.51 li
178.592 223.51 li
177.978 223.53 li
177.365 223.54 li
176.745 223.55 li
176.733 223.55 li
176.093 223.571 li
176.068 223.572 li
175.449 223.612 li
175.354 223.624 li
174.734 223.744 li
174.641 223.762 174.558 223.795 174.478 223.845 cv
173.956 224.173 li
173.489 224.294 li
172.911 224.376 li
172.307 224.445 li
171.686 224.503 li
171.684 224.504 li
171.07 224.564 li
170.457 224.613 li
170.445 224.614 li
169.832 224.673 li
169.208 224.722 li
169.194 224.723 li
168.581 224.783 li
167.967 224.832 li
167.347 224.882 li
167.345 224.882 li
166.726 224.933 li
166.729 224.933 li
166.089 224.983 li
166.087 224.983 li
165.467 225.033 li
164.847 225.082 li
164.233 225.132 li
163.619 225.171 li
163.607 225.172 li
162.987 225.222 li
162.988 225.222 li
162.352 225.272 li
161.739 225.312 li
161.727 225.313 li
161.113 225.362 li
160.499 225.402 li
159.878 225.442 li
159.88 225.442 li
159.24 225.482 li
159.227 225.483 li
158.619 225.532 li
158.01 225.561 li
157.999 225.562 li
157.378 225.602 li
156.759 225.642 li
156.145 225.682 li
155.522 225.711 li
155.509 225.712 li
154.896 225.751 li
154.28 225.781 li
154.269 225.782 li
153.655 225.821 li
153.04 225.851 li
153.042 225.851 li
152.403 225.881 li
152.4 225.881 li
151.78 225.911 li
151.169 225.941 li
150.553 225.96 li
150.54 225.961 li
149.92 225.991 li
149.308 226.021 li
148.674 226.04 li
148.672 226.04 li
148.052 226.061 li
148.041 226.061 li
147.427 226.09 li
146.812 226.111 li
146.813 226.111 li
146.193 226.13 li
145.553 226.151 li
144.94 226.17 li
144.324 226.181 li
144.313 226.181 li
143.693 226.201 li
143.08 226.22 li
142.464 226.231 li
142.05 226.238 141.72 226.579 141.727 226.993 cv
141.734 227.408 142.076 227.738 142.49 227.73 cv
cp
.653773 .579889 .56878 .366613 cmyk
f
142.852 250.07 mo
142.852 188.92 li
142.852 188.713 142.684 188.545 142.477 188.545 cv
142.27 188.545 142.102 188.713 142.102 188.92 cv
142.102 250.07 li
142.102 250.277 142.27 250.445 142.477 250.445 cv
142.684 250.445 142.852 250.277 142.852 250.07 cv
.75021 .679683 .670222 .90164 cmyk
f
.653773 .579889 .56878 .366613 cmyk
MCBLKO+Helvetica*1 [7 -8.57253e-16 -8.57253e-16 -7 0 0 ]msf129.667 252.579 mo(0.6)sh135.507 196.989 mo(2)sh142.477 249.695 mo
140.627 249.695 li
140.42 249.695 140.252 249.863 140.252 250.07 cv
140.252 250.277 140.42 250.445 140.627 250.445 cv
142.477 250.445 li
142.684 250.445 142.852 250.277 142.852 250.07 cv
142.852 249.863 142.684 249.695 142.477 249.695 cv
.75021 .679683 .670222 .90164 cmyk
f
142.477 194.105 mo
140.627 194.105 li
140.42 194.105 140.252 194.273 140.252 194.48 cv
140.252 194.688 140.42 194.855 140.627 194.855 cv
142.477 194.855 li
142.684 194.855 142.852 194.688 142.852 194.48 cv
142.852 194.273 142.684 194.105 142.477 194.105 cv
f
.75021 .679683 .670222 .90164 cmyk
MCBLKQ+Symbol*1 [12 -1.46958e-15 -1.46958e-15 -12 0 0 ]msf145.567 194.229 mo(a)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginMCBLKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/z <1C60D8A8C9B7A73DEABE54629387A84F059D312ADC9A1BC62C3E425E4C57824FE89DFBD64BF53A53> |-systemdict /gcheck known {setglobal} if end {end} ifendMCBLKO+Helvetica /Encoding getdup 122 /z putpop%ADOEndSubsetFont
/MCBLKO+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven /eight 8{/.notdef}rp /A /B /C /D 28{/.notdef}rp /a /b /.notdef /d /e /f /g /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y /z 4{/.notdef}rp /minus 128{/.notdef}rp]MCBLKO+Helvetica nfMCBLKO+Helvetica*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf153.137 196.419 mo(z)sh204.552 250.07 mo
204.552 194.48 li
204.552 194.273 204.384 194.105 204.177 194.105 cv
203.97 194.105 203.802 194.273 203.802 194.48 cv
203.802 250.07 li
203.802 250.277 203.97 250.445 204.177 250.445 cv
204.384 250.445 204.552 250.277 204.552 250.07 cv
.193668 .150057 .155337 3.0518e-05 cmyk
f
219.972 250.07 mo
219.972 194.48 li
219.972 194.273 219.804 194.105 219.597 194.105 cv
219.39 194.105 219.222 194.273 219.222 194.48 cv
219.222 250.07 li
219.222 250.277 219.39 250.445 219.597 250.445 cv
219.804 250.445 219.972 250.277 219.972 250.07 cv
f
235.402 250.07 mo
235.402 194.48 li
235.402 194.273 235.234 194.105 235.027 194.105 cv
234.82 194.105 234.652 194.273 234.652 194.48 cv
234.652 250.07 li
234.652 250.277 234.82 250.445 235.027 250.445 cv
235.234 250.445 235.402 250.277 235.402 250.07 cv
f
250.822 250.07 mo
250.822 194.48 li
250.822 194.273 250.654 194.105 250.447 194.105 cv
250.24 194.105 250.072 194.273 250.072 194.48 cv
250.072 250.07 li
250.072 250.277 250.24 250.445 250.447 250.445 cv
250.654 250.445 250.822 250.277 250.822 250.07 cv
f
266.251 250.07 mo
266.251 194.48 li
266.251 194.273 266.084 194.105 265.876 194.105 cv
265.669 194.105 265.501 194.273 265.501 194.48 cv
265.501 250.07 li
265.501 250.277 265.669 250.445 265.876 250.445 cv
266.084 250.445 266.251 250.277 266.251 250.07 cv
f
204.177 250.445 mo
265.876 250.445 li
266.084 250.445 266.251 250.277 266.251 250.07 cv
266.251 249.863 266.084 249.695 265.876 249.695 cv
204.177 249.695 li
203.97 249.695 203.802 249.863 203.802 250.07 cv
203.802 250.277 203.97 250.445 204.177 250.445 cv
f
204.177 236.545 mo
265.876 236.545 li
266.084 236.545 266.251 236.377 266.251 236.17 cv
266.251 235.963 266.084 235.795 265.876 235.795 cv
204.177 235.795 li
203.97 235.795 203.802 235.963 203.802 236.17 cv
203.802 236.377 203.97 236.545 204.177 236.545 cv
f
204.177 222.646 mo
265.876 222.646 li
266.084 222.646 266.251 222.478 266.251 222.271 cv
266.251 222.063 266.084 221.896 265.876 221.896 cv
204.177 221.896 li
203.97 221.896 203.802 222.063 203.802 222.271 cv
203.802 222.478 203.97 222.646 204.177 222.646 cv
f
204.177 208.755 mo
265.876 208.755 li
266.084 208.755 266.251 208.587 266.251 208.38 cv
266.251 208.173 266.084 208.005 265.876 208.005 cv
204.177 208.005 li
203.97 208.005 203.802 208.173 203.802 208.38 cv
203.802 208.587 203.97 208.755 204.177 208.755 cv
f
204.177 194.855 mo
265.876 194.855 li
266.084 194.855 266.251 194.688 266.251 194.48 cv
266.251 194.273 266.084 194.105 265.876 194.105 cv
204.177 194.105 li
203.97 194.105 203.802 194.273 203.802 194.48 cv
203.802 194.688 203.97 194.855 204.177 194.855 cv
f
204.177 219.79 mo
204.797 219.79 li
205.417 219.79 li
206.037 219.79 li
206.657 219.79 li
207.277 219.79 li
207.917 219.79 li
208.537 219.79 li
209.157 219.79 li
209.777 219.79 li
210.397 219.79 li
211.037 219.79 li
211.657 219.79 li
212.277 219.79 li
212.897 219.79 li
213.517 219.79 li
214.137 219.79 li
214.767 219.79 li
215.387 219.79 li
216.007 219.79 li
216.627 219.79 li
217.247 219.79 li
217.887 219.79 li
218.507 219.79 li
219.127 219.79 li
219.747 219.79 li
220.367 219.79 li
220.987 219.79 li
221.627 219.79 li
222.247 219.79 li
222.867 219.79 li
223.487 219.79 li
224.107 219.79 li
224.747 219.79 li
225.367 219.79 li
225.987 219.79 li
226.607 219.79 li
227.227 219.79 li
227.847 219.79 li
228.477 219.79 li
229.097 219.79 li
229.717 219.79 li
230.337 219.79 li
230.957 219.79 li
231.597 219.79 li
232.212 219.79 li
232.825 219.8 li
232.837 219.8 li
233.457 219.8 li
234.077 219.8 li
234.697 219.8 li
235.337 219.8 li
235.944 219.8 li
236.547 219.82 li
237.16 219.85 li
237.173 219.85 li
237.793 219.87 li
238.432 219.89 li
239.053 219.91 li
239.052 219.91 li
239.672 219.93 li
239.685 219.931 li
240.299 219.94 li
240.913 219.96 li
240.912 219.96 li
241.532 219.98 li
241.534 219.98 li
242.164 220 li
242.162 220 li
242.782 220.02 li
242.795 220.02 li
243.409 220.03 li
244.017 220.049 li
244.63 220.079 li
244.643 220.08 li
245.271 220.1 li
245.873 220.139 li
246.487 220.188 li
246.499 220.189 li
247.118 220.229 li
247.738 220.269 li
248.358 220.309 li
248.36 220.309 li
249.001 220.349 li
248.999 220.349 li
249.618 220.389 li
250.238 220.429 li
250.239 220.429 li
250.86 220.468 li
250.858 220.468 li
251.479 220.508 li
251.48 220.508 li
252.12 220.548 li
252.118 220.548 li
252.738 220.588 li
253.358 220.628 li
253.979 220.668 li
254.599 220.708 li
254.61 220.709 li
255.226 220.739 li
255.849 220.779 li
256.469 220.819 li
257.089 220.859 li
257.101 220.859 li
257.715 220.889 li
258.328 220.929 li
258.331 220.929 li
258.971 220.968 li
258.969 220.968 li
259.589 221.008 li
259.601 221.009 li
260.216 221.039 li
260.828 221.079 li
261.448 221.119 li
261.46 221.119 li
262.075 221.149 li
262.711 221.189 li
262.709 221.189 li
263.328 221.229 li
263.341 221.23 li
263.954 221.259 li
264.568 221.298 li
264.58 221.299 li
265.197 221.329 li
265.83 221.369 li
266.243 221.395 266.599 221.08 266.625 220.667 cv
266.651 220.254 266.337 219.897 265.923 219.872 cv
265.284 219.832 li
265.273 219.831 li
264.659 219.801 li
264.045 219.761 li
264.032 219.761 li
263.417 219.732 li
262.806 219.692 li
262.804 219.692 li
262.163 219.652 li
262.153 219.651 li
261.539 219.621 li
260.925 219.582 li
260.306 219.542 li
260.294 219.541 li
259.678 219.511 li
259.065 219.471 li
259.063 219.471 li
258.422 219.432 li
258.425 219.432 li
257.806 219.392 li
257.794 219.392 li
257.18 219.362 li
256.565 219.322 li
255.945 219.282 li
255.315 219.242 li
255.304 219.241 li
254.687 219.211 li
254.075 219.171 li
253.455 219.131 li
252.835 219.091 li
252.215 219.051 li
252.213 219.051 li
251.574 219.011 li
251.575 219.011 li
250.955 218.971 li
250.954 218.971 li
250.334 218.932 li
250.335 218.932 li
249.715 218.892 li
249.096 218.852 li
249.094 218.852 li
248.454 218.812 li
248.455 218.812 li
247.835 218.772 li
247.215 218.732 li
246.602 218.692 li
245.987 218.643 li
245.976 218.642 li
245.355 218.602 li
245.331 218.601 li
244.697 218.581 li
244.084 218.551 li
244.071 218.55 li
243.451 218.531 li
243.439 218.53 li
242.827 218.521 li
242.212 218.5 li
242.21 218.5 li
241.58 218.481 li
241.582 218.481 li
240.962 218.46 li
240.961 218.46 li
240.34 218.441 li
240.329 218.441 li
239.714 218.431 li
239.101 218.411 li
239.1 218.411 li
238.48 218.391 li
237.841 218.37 li
237.226 218.351 li
236.613 218.321 li
236.601 218.321 li
235.981 218.3 li
235.957 218.3 li
235.337 218.3 li
234.697 218.3 li
234.077 218.3 li
233.457 218.3 li
232.845 218.3 li
232.229 218.29 li
232.217 218.29 li
231.597 218.29 li
230.957 218.29 li
230.337 218.29 li
229.717 218.29 li
229.097 218.29 li
228.477 218.29 li
227.847 218.29 li
227.227 218.29 li
226.607 218.29 li
225.987 218.29 li
225.367 218.29 li
224.747 218.29 li
224.107 218.29 li
223.487 218.29 li
222.867 218.29 li
222.247 218.29 li
221.627 218.29 li
220.987 218.29 li
220.367 218.29 li
219.747 218.29 li
219.127 218.29 li
218.507 218.29 li
217.887 218.29 li
217.247 218.29 li
216.627 218.29 li
216.007 218.29 li
215.387 218.29 li
214.767 218.29 li
214.137 218.29 li
213.517 218.29 li
212.897 218.29 li
212.277 218.29 li
211.657 218.29 li
211.037 218.29 li
210.397 218.29 li
209.777 218.29 li
209.157 218.29 li
208.537 218.29 li
207.917 218.29 li
207.277 218.29 li
206.657 218.29 li
206.037 218.29 li
205.417 218.29 li
204.797 218.29 li
204.177 218.29 li
203.763 218.29 203.427 218.626 203.427 219.04 cv
203.427 219.454 203.763 219.79 204.177 219.79 cv
cp
.653773 .579889 .56878 .366613 cmyk
f
204.552 250.07 mo
204.552 188.92 li
204.552 188.713 204.384 188.545 204.177 188.545 cv
203.97 188.545 203.802 188.713 203.802 188.92 cv
203.802 250.07 li
203.802 250.277 203.97 250.445 204.177 250.445 cv
204.384 250.445 204.552 250.277 204.552 250.07 cv
.75021 .679683 .670222 .90164 cmyk
f
.653773 .579889 .56878 .366613 cmyk
MCBLKO+Helvetica*1 [7 -8.57253e-16 -8.57253e-16 -7 0 0 ]msf193.307 252.579 mo(40)[3.89307 0 ]xsh193.307 196.989 mo(50)[3.89307 0 ]xsh204.177 249.695 mo
202.327 249.695 li
202.12 249.695 201.952 249.863 201.952 250.07 cv
201.952 250.277 202.12 250.445 202.327 250.445 cv
204.177 250.445 li
204.384 250.445 204.552 250.277 204.552 250.07 cv
204.552 249.863 204.384 249.695 204.177 249.695 cv
.75021 .679683 .670222 .90164 cmyk
f
204.177 194.105 mo
202.327 194.105 li
202.12 194.105 201.952 194.273 201.952 194.48 cv
201.952 194.688 202.12 194.855 202.327 194.855 cv
204.177 194.855 li
204.384 194.855 204.552 194.688 204.552 194.48 cv
204.552 194.273 204.384 194.105 204.177 194.105 cv
f
.75021 .679683 .670222 .90164 cmyk
MCBLKQ+Symbol*1 [12 -1.46958e-15 -1.46958e-15 -12 0 0 ]msf207.257 193.749 mo(b)shMCBLKO+Helvetica*1 [8 -9.79718e-16 -9.79718e-16 -8 0 0 ]msf213.847 195.949 mo(z)sh266.251 250.07 mo
266.251 194.48 li
266.251 194.273 266.084 194.105 265.876 194.105 cv
265.669 194.105 265.501 194.273 265.501 194.48 cv
265.501 250.07 li
265.501 250.277 265.669 250.445 265.876 250.445 cv
266.084 250.445 266.251 250.277 266.251 250.07 cv
.193668 .150057 .155337 3.0518e-05 cmyk
f
281.672 250.07 mo
281.672 194.48 li
281.672 194.273 281.504 194.105 281.297 194.105 cv
281.09 194.105 280.922 194.273 280.922 194.48 cv
280.922 250.07 li
280.922 250.277 281.09 250.445 281.297 250.445 cv
281.504 250.445 281.672 250.277 281.672 250.07 cv
f
297.092 250.07 mo
297.092 194.48 li
297.092 194.273 296.924 194.105 296.717 194.105 cv
296.51 194.105 296.342 194.273 296.342 194.48 cv
296.342 250.07 li
296.342 250.277 296.51 250.445 296.717 250.445 cv
296.924 250.445 297.092 250.277 297.092 250.07 cv
f
312.522 250.07 mo
312.522 194.48 li
312.522 194.273 312.354 194.105 312.147 194.105 cv
311.94 194.105 311.772 194.273 311.772 194.48 cv
311.772 250.07 li
311.772 250.277 311.94 250.445 312.147 250.445 cv
312.354 250.445 312.522 250.277 312.522 250.07 cv
f
327.942 250.07 mo
327.942 194.48 li
327.942 194.273 327.774 194.105 327.567 194.105 cv
327.36 194.105 327.192 194.273 327.192 194.48 cv
327.192 250.07 li
327.192 250.277 327.36 250.445 327.567 250.445 cv
327.774 250.445 327.942 250.277 327.942 250.07 cv
f
265.876 250.445 mo
327.567 250.445 li
327.774 250.445 327.942 250.277 327.942 250.07 cv
327.942 249.863 327.774 249.695 327.567 249.695 cv
265.876 249.695 li
265.669 249.695 265.501 249.863 265.501 250.07 cv
265.501 250.277 265.669 250.445 265.876 250.445 cv
f
265.876 236.545 mo
327.567 236.545 li
327.774 236.545 327.942 236.377 327.942 236.17 cv
327.942 235.963 327.774 235.795 327.567 235.795 cv
265.876 235.795 li
265.669 235.795 265.501 235.963 265.501 236.17 cv
265.501 236.377 265.669 236.545 265.876 236.545 cv
f
265.876 222.646 mo
327.567 222.646 li
327.774 222.646 327.942 222.478 327.942 222.271 cv
327.942 222.063 327.774 221.896 327.567 221.896 cv
265.876 221.896 li
265.669 221.896 265.501 222.063 265.501 222.271 cv
265.501 222.478 265.669 222.646 265.876 222.646 cv
f
265.876 208.755 mo
327.567 208.755 li
327.774 208.755 327.942 208.587 327.942 208.38 cv
327.942 208.173 327.774 208.005 327.567 208.005 cv
265.876 208.005 li
265.669 208.005 265.501 208.173 265.501 208.38 cv
265.501 208.587 265.669 208.755 265.876 208.755 cv
f
265.876 194.855 mo
327.567 194.855 li
327.774 194.855 327.942 194.688 327.942 194.48 cv
327.942 194.273 327.774 194.105 327.567 194.105 cv
265.876 194.105 li
265.669 194.105 265.501 194.273 265.501 194.48 cv
265.501 194.688 265.669 194.855 265.876 194.855 cv
f
266.147 248.97 mo
266.767 248.73 li
266.777 248.726 li
267.397 248.476 li
268.017 248.226 li
268.037 248.218 li
268.657 247.947 li
269.276 247.678 li
269.299 247.667 li
269.929 247.368 li
269.933 247.366 li
270.553 247.066 li
271.174 246.765 li
271.191 246.757 li
271.811 246.437 li
271.828 246.428 li
272.447 246.088 li
273.087 245.738 li
273.104 245.729 li
273.724 245.368 li
273.731 245.364 li
274.351 244.995 li
274.36 244.989 li
274.979 244.609 li
274.993 244.6 li
275.613 244.201 li
275.627 244.191 li
276.247 243.771 li
276.252 243.768 li
276.892 243.328 li
276.908 243.317 li
277.527 242.866 li
277.533 242.862 li
278.153 242.402 li
278.165 242.393 li
278.785 241.914 li
278.797 241.904 li
279.418 241.404 li
279.431 241.393 li
280.07 240.853 li
280.079 240.846 li
280.699 240.306 li
280.704 240.301 li
281.324 239.752 li
281.339 239.738 li
281.959 239.158 li
281.973 239.145 li
282.593 238.535 li
282.597 238.53 li
283.217 237.91 li
283.233 237.894 li
283.863 237.224 li
283.867 237.219 li
284.487 236.55 li
284.498 236.537 li
285.119 235.837 li
285.125 235.829 li
285.745 235.11 li
285.758 235.094 li
286.378 234.335 li
286.383 234.329 li
287.023 233.529 li
287.033 233.516 li
287.653 232.706 li
287.66 232.695 li
288.281 231.856 li
288.288 231.845 li
288.908 230.975 li
288.917 230.962 li
289.537 230.052 li
289.542 230.043 li
290.163 229.104 li
290.168 229.095 li
290.809 228.095 li
290.818 228.08 li
291.438 227.059 li
291.443 227.051 li
292.063 226.001 li
292.068 225.991 li
292.688 224.901 li
292.694 224.891 li
293.314 223.761 li
293.32 223.751 li
293.96 222.541 li
293.966 222.53 li
294.585 221.309 li
294.59 221.299 li
295.211 220.029 li
295.214 220.021 li
295.835 218.712 li
295.84 218.7 li
296.46 217.33 li
296.463 217.322 li
297.083 215.912 li
297.089 215.899 li
297.719 214.389 li
297.722 214.382 li
298.342 212.852 li
297.647 212.57 li
297.008 212.963 li
297.602 213.93 li
298.201 215.284 li
298.207 215.295 li
298.827 216.635 li
298.832 216.647 li
299.472 217.968 li
299.476 217.976 li
300.096 219.215 li
300.102 219.226 li
300.722 220.417 li
300.726 220.424 li
301.346 221.584 li
301.351 221.593 li
301.97 222.713 li
301.976 222.724 li
302.596 223.804 li
302.603 223.816 li
303.244 224.885 li
303.25 224.895 li
303.87 225.895 li
303.875 225.904 li
304.494 226.873 li
304.502 226.886 li
305.122 227.816 li
305.129 227.826 li
305.749 228.726 li
305.76 228.741 li
306.401 229.622 li
306.412 229.636 li
307.031 230.446 li
307.156 230.574 li
307.776 231.074 li
307.849 231.133 307.936 231.179 308.026 231.207 cv
308.647 231.398 li
308.82 231.429 li
309.44 231.468 li
309.522 231.469 li
310.142 231.44 li
310.166 231.438 li
310.796 231.388 li
310.81 231.387 li
311.423 231.327 li
312.037 231.278 li
312.652 231.228 li
313.257 231.189 li
313.892 231.159 li
314.514 231.129 li
315.127 231.1 li
315.742 231.08 li
316.357 231.06 li
316.97 231.05 li
316.979 231.049 li
317.617 231.03 li
318.229 231.02 li
318.23 231.02 li
318.842 231.01 li
319.457 231.01 li
319.468 231.01 li
320.088 231 li
320.724 230.99 li
321.336 230.99 li
321.957 230.99 li
321.968 230.99 li
322.582 230.98 li
323.197 230.98 li
323.817 230.98 li
323.83 230.98 li
324.452 230.97 li
325.067 230.97 li
325.687 230.97 li
326.307 230.97 li
326.319 230.97 li
326.944 230.96 li
327.567 230.96 li
327.981 230.96 328.317 230.624 328.317 230.21 cv
328.317 229.796 327.981 229.46 327.567 229.46 cv
326.937 229.46 li
326.925 229.46 li
326.3 229.47 li
325.687 229.47 li
325.067 229.47 li
324.447 229.47 li
324.434 229.47 li
323.81 229.48 li
323.197 229.48 li
322.577 229.48 li
322.565 229.481 li
321.949 229.49 li
321.336 229.49 li
320.717 229.49 li
320.706 229.49 li
320.065 229.5 li
319.451 229.51 li
318.836 229.51 li
318.823 229.51 li
318.204 229.521 li
318.205 229.521 li
317.585 229.53 li
317.574 229.531 li
316.937 229.55 li
316.323 229.561 li
316.313 229.561 li
315.694 229.58 li
315.072 229.601 li
315.062 229.601 li
314.442 229.631 li
313.82 229.661 li
313.182 229.691 li
313.169 229.692 li
312.549 229.732 li
312.537 229.733 li
311.917 229.783 li
311.297 229.832 li
311.284 229.834 li
310.673 229.893 li
310.059 229.942 li
309.493 229.969 li
309.002 229.938 li
308.605 229.816 li
308.167 229.463 li
307.608 228.732 li
306.979 227.867 li
306.366 226.978 li
305.755 226.061 li
305.142 225.101 li
304.528 224.11 li
303.893 223.05 li
303.28 221.983 li
302.667 220.873 li
302.05 219.72 li
301.435 218.538 li
300.82 217.309 li
300.185 216 li
299.57 214.67 li
298.953 213.276 li
298.906 213.188 li
298.286 212.178 li
298.138 211.937 297.866 211.8 297.585 211.823 cv
297.304 211.846 297.058 212.027 296.952 212.289 cv
296.332 213.819 li
297.027 214.101 li
296.335 213.812 li
295.707 215.316 li
295.093 216.712 li
294.476 218.075 li
293.86 219.376 li
293.245 220.635 li
292.631 221.846 li
291.997 223.044 li
291.382 224.164 li
290.767 225.245 li
290.153 226.286 li
289.541 227.294 li
288.908 228.281 li
288.294 229.212 li
287.682 230.112 li
287.069 230.971 li
286.458 231.799 li
285.846 232.599 li
285.212 233.392 li
285.216 233.386 li
284.603 234.137 li
283.992 234.847 li
283.381 235.537 li
282.766 236.2 li
282.77 236.196 li
282.148 236.858 li
281.537 237.47 li
281.541 237.465 li
280.928 238.069 li
280.322 238.635 li
279.709 239.179 li
279.714 239.175 li
279.099 239.71 li
278.469 240.242 li
277.862 240.732 li
277.252 241.203 li
276.64 241.657 li
276.645 241.653 li
276.033 242.098 li
275.402 242.532 li
275.406 242.529 li
274.793 242.944 li
274.187 243.335 li
273.578 243.709 li
272.967 244.073 li
272.359 244.427 li
271.726 244.773 li
271.115 245.108 li
270.511 245.419 li
269.9 245.716 li
269.28 246.015 li
269.285 246.013 li
268.667 246.307 li
268.058 246.572 li
267.447 246.839 li
266.836 247.085 li
266.221 247.333 li
265.606 247.571 li
265.219 247.721 265.027 248.155 265.177 248.541 cv
265.327 248.928 265.761 249.119 266.147 248.97 cv
cp
.653773 .579889 .56878 .366613 cmyk
f
266.251 250.07 mo
266.251 188.92 li
266.251 188.713 266.084 188.545 265.876 188.545 cv
265.669 188.545 265.501 188.713 265.501 188.92 cv
265.501 250.07 li
265.501 250.277 265.669 250.445 265.876 250.445 cv
266.084 250.445 266.251 250.277 266.251 250.07 cv
.75021 .679683 .670222 .90164 cmyk
f
.653773 .579889 .56878 .366613 cmyk
MCBLKO+Helvetica*1 [7 -8.57253e-16 -8.57253e-16 -7 0 0 ]msf249.167 252.579 mo(0.03)[3.89258 1.94531 3.89258 0 ]xsh253.057 196.989 mo(0.4)[3.89258 1.94531 0 ]xsh265.876 249.695 mo
264.027 249.695 li
263.82 249.695 263.652 249.863 263.652 250.07 cv
263.652 250.277 263.82 250.445 264.027 250.445 cv
265.876 250.445 li
266.084 250.445 266.251 250.277 266.251 250.07 cv
266.251 249.863 266.084 249.695 265.876 249.695 cv
.75021 .679683 .670222 .90164 cmyk
f
265.876 194.105 mo
264.027 194.105 li
263.82 194.105 263.652 194.273 263.652 194.48 cv
263.652 194.688 263.82 194.855 264.027 194.855 cv
265.876 194.855 li
266.084 194.855 266.251 194.688 266.251 194.48 cv
266.251 194.273 266.084 194.105 265.876 194.105 cv
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginMCBLKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/k <1C60D8A8C9B7A73D847F857A1BFD24ACB75840E5C7CBB8AB7BE870135525EBD6DBF4EAE3173F6ABCE16E75318AB6C78B406BDB> |-systemdict /gcheck known {setglobal} if end {end} ifendMCBLKO+Helvetica /Encoding getdup 107 /k putpop%ADOEndSubsetFont
/MCBLKO+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven /eight 8{/.notdef}rp /A /B /C /D 28{/.notdef}rp /a /b /.notdef /d /e /f /g /h /i /.notdef /k /l /.notdef /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y /z 4{/.notdef}rp /minus 128{/.notdef}rp]MCBLKO+Helvetica nfMCBLKO+Helvetica*1 [12 -1.46958e-15 -1.46958e-15 -12 0 0 ]msf268.957 193.369 mo(k)sh327.942 250.07 mo
327.942 194.48 li
327.942 194.273 327.774 194.105 327.567 194.105 cv
327.36 194.105 327.192 194.273 327.192 194.48 cv
327.192 250.07 li
327.192 250.277 327.36 250.445 327.567 250.445 cv
327.774 250.445 327.942 250.277 327.942 250.07 cv
.193668 .150057 .155337 3.0518e-05 cmyk
f
343.372 250.07 mo
343.372 194.48 li
343.372 194.273 343.204 194.105 342.997 194.105 cv
342.789 194.105 342.622 194.273 342.622 194.48 cv
342.622 250.07 li
342.622 250.277 342.789 250.445 342.997 250.445 cv
343.204 250.445 343.372 250.277 343.372 250.07 cv
f
358.792 250.07 mo
358.792 194.48 li
358.792 194.273 358.624 194.105 358.417 194.105 cv
358.209 194.105 358.042 194.273 358.042 194.48 cv
358.042 250.07 li
358.042 250.277 358.209 250.445 358.417 250.445 cv
358.624 250.445 358.792 250.277 358.792 250.07 cv
f
374.211 250.07 mo
374.211 194.48 li
374.211 194.273 374.044 194.105 373.836 194.105 cv
373.629 194.105 373.461 194.273 373.461 194.48 cv
373.461 250.07 li
373.461 250.277 373.629 250.445 373.836 250.445 cv
374.044 250.445 374.211 250.277 374.211 250.07 cv
f
389.642 250.07 mo
389.642 194.48 li
389.642 194.273 389.474 194.105 389.267 194.105 cv
389.06 194.105 388.892 194.273 388.892 194.48 cv
388.892 250.07 li
388.892 250.277 389.06 250.445 389.267 250.445 cv
389.474 250.445 389.642 250.277 389.642 250.07 cv
f
327.567 250.445 mo
389.267 250.445 li
389.474 250.445 389.642 250.277 389.642 250.07 cv
389.642 249.863 389.474 249.695 389.267 249.695 cv
327.567 249.695 li
327.36 249.695 327.192 249.863 327.192 250.07 cv
327.192 250.277 327.36 250.445 327.567 250.445 cv
f
327.567 236.545 mo
389.267 236.545 li
389.474 236.545 389.642 236.377 389.642 236.17 cv
389.642 235.963 389.474 235.795 389.267 235.795 cv
327.567 235.795 li
327.36 235.795 327.192 235.963 327.192 236.17 cv
327.192 236.377 327.36 236.545 327.567 236.545 cv
f
327.567 222.646 mo
389.267 222.646 li
389.474 222.646 389.642 222.478 389.642 222.271 cv
389.642 222.063 389.474 221.896 389.267 221.896 cv
327.567 221.896 li
327.36 221.896 327.192 222.063 327.192 222.271 cv
327.192 222.478 327.36 222.646 327.567 222.646 cv
f
327.567 208.755 mo
389.267 208.755 li
389.474 208.755 389.642 208.587 389.642 208.38 cv
389.642 208.173 389.474 208.005 389.267 208.005 cv
327.567 208.005 li
327.36 208.005 327.192 208.173 327.192 208.38 cv
327.192 208.587 327.36 208.755 327.567 208.755 cv
f
327.567 194.855 mo
389.267 194.855 li
389.474 194.855 389.642 194.688 389.642 194.48 cv
389.642 194.273 389.474 194.105 389.267 194.105 cv
327.567 194.105 li
327.36 194.105 327.192 194.273 327.192 194.48 cv
327.192 194.688 327.36 194.855 327.567 194.855 cv
f
328.014 244.392 mo
328.634 243.932 li
328.64 243.928 li
329.26 243.458 li
329.266 243.453 li
329.884 242.975 li
330.5 242.508 li
330.513 242.498 li
331.132 242.008 li
331.133 242.007 li
331.774 241.497 li
331.778 241.494 li
332.398 240.994 li
332.404 240.99 li
333.024 240.48 li
333.03 240.474 li
333.649 239.954 li
334.268 239.435 li
334.28 239.425 li
334.921 238.864 li
334.92 238.865 li
335.54 238.325 li
335.55 238.316 li
336.169 237.757 li
336.179 237.748 li
336.799 237.168 li
337.419 236.588 li
337.424 236.583 li
338.044 235.994 li
338.057 235.981 li
338.687 235.351 li
339.307 234.731 li
339.311 234.726 li
339.941 234.087 li
339.95 234.078 li
340.57 233.428 li
340.573 233.424 li
341.194 232.763 li
341.205 232.752 li
341.834 232.051 li
341.838 232.047 li
342.458 231.348 li
342.462 231.344 li
343.082 230.634 li
343.089 230.626 li
343.709 229.896 li
343.712 229.892 li
344.332 229.152 li
344.339 229.144 li
344.958 228.384 li
344.959 228.383 li
345.6 227.592 li
345.607 227.583 li
346.227 226.793 li
346.233 226.786 li
346.853 225.977 li
346.856 225.972 li
347.475 225.152 li
347.477 225.149 li
348.097 224.319 li
348.098 224.318 li
348.739 223.458 li
348.745 223.449 li
349.366 222.589 li
349.985 221.728 li
349.99 221.722 li
350.61 220.842 li
350.607 220.845 li
351.227 219.975 li
351.23 219.972 li
351.85 219.092 li
351.848 219.095 li
352.488 218.194 li
352.49 218.192 li
353.107 217.316 li
353.725 216.459 li
353.723 216.462 li
354.339 215.617 li
354.952 214.807 li
355.574 214.006 li
356.178 213.266 li
356.775 212.592 li
357.366 211.992 li
357.946 211.468 li
358.499 211.049 li
359.052 210.738 li
359.628 210.506 li
359.761 210.436 li
360.366 210.036 li
360.965 209.678 li
361.571 209.325 li
362.19 208.997 li
362.793 208.696 li
363.395 208.414 li
363.997 208.151 li
364.597 207.909 li
365.194 207.688 li
365.812 207.486 li
366.411 207.302 li
367.003 207.149 li
367.601 207.014 li
368.197 206.899 li
368.797 206.804 li
369.384 206.737 li
369.973 206.699 li
370.574 206.68 li
371.19 206.67 li
371.809 206.66 li
372.444 206.65 li
373.057 206.65 li
373.069 206.65 li
373.683 206.641 li
374.297 206.641 li
374.31 206.641 li
374.923 206.63 li
375.557 206.63 li
376.177 206.63 li
376.189 206.63 li
376.804 206.62 li
377.417 206.62 li
378.037 206.62 li
378.657 206.62 li
378.668 206.62 li
379.303 206.61 li
379.917 206.61 li
380.537 206.61 li
381.157 206.61 li
381.777 206.61 li
381.788 206.61 li
382.414 206.601 li
383.027 206.601 li
383.647 206.601 li
384.267 206.601 li
384.28 206.6 li
384.894 206.59 li
385.507 206.59 li
386.147 206.59 li
386.767 206.59 li
387.387 206.59 li
387.399 206.59 li
388.013 206.58 li
388.626 206.58 li
389.267 206.58 li
389.681 206.58 390.017 206.244 390.017 205.83 cv
390.017 205.416 389.681 205.08 389.267 205.08 cv
388.626 205.08 li
388.007 205.08 li
387.996 205.08 li
387.381 205.09 li
386.767 205.09 li
386.147 205.09 li
385.507 205.09 li
384.887 205.09 li
384.874 205.09 li
384.26 205.101 li
383.647 205.101 li
383.027 205.101 li
382.407 205.101 li
382.395 205.101 li
381.77 205.11 li
381.157 205.11 li
380.537 205.11 li
379.917 205.11 li
379.297 205.11 li
379.286 205.11 li
378.65 205.12 li
378.037 205.12 li
377.417 205.12 li
376.797 205.12 li
376.786 205.12 li
376.172 205.13 li
375.557 205.13 li
374.917 205.13 li
374.903 205.13 li
374.291 205.141 li
373.677 205.141 li
373.665 205.141 li
373.052 205.15 li
372.437 205.15 li
372.426 205.15 li
371.786 205.16 li
371.165 205.17 li
370.544 205.181 li
370.534 205.181 li
369.913 205.201 li
369.889 205.202 li
369.269 205.242 li
369.232 205.245 li
368.612 205.315 li
368.58 205.32 li
367.95 205.419 li
367.924 205.424 li
367.304 205.544 li
367.282 205.549 li
366.662 205.688 li
366.639 205.694 li
366.019 205.854 li
365.986 205.863 li
365.366 206.054 li
365.353 206.058 li
364.713 206.268 li
364.686 206.277 li
364.066 206.507 li
364.046 206.514 li
363.426 206.764 li
363.407 206.773 li
362.787 207.043 li
362.768 207.051 li
362.149 207.341 li
362.132 207.349 li
361.512 207.659 li
361.496 207.668 li
360.855 208.007 li
360.83 208.021 li
360.21 208.382 li
360.202 208.387 li
359.582 208.757 li
359.554 208.775 li
358.997 209.143 li
358.447 209.365 li
358.36 209.406 li
357.719 209.766 li
357.633 209.823 li
357.013 210.294 li
356.965 210.334 li
356.345 210.893 li
356.313 210.924 li
355.693 211.554 li
355.666 211.583 li
355.045 212.283 li
355.026 212.306 li
354.406 213.066 li
354.395 213.08 li
353.765 213.89 li
353.759 213.898 li
353.139 214.717 li
353.131 214.728 li
352.511 215.579 li
352.508 215.582 li
351.888 216.441 li
351.884 216.448 li
351.263 217.328 li
351.265 217.325 li
350.625 218.226 li
350.624 218.228 li
350.004 219.108 li
350.006 219.105 li
349.386 219.975 li
349.384 219.978 li
348.763 220.858 li
348.768 220.852 li
348.149 221.712 li
347.532 222.566 li
346.895 223.422 li
346.896 223.421 li
346.276 224.251 li
346.278 224.248 li
345.659 225.069 li
345.662 225.064 li
345.043 225.872 li
344.429 226.654 li
343.794 227.438 li
343.795 227.436 li
343.179 228.193 li
342.562 228.929 li
342.565 228.925 li
341.948 229.652 li
341.332 230.357 li
341.336 230.353 li
340.716 231.052 li
340.719 231.048 li
340.096 231.741 li
339.48 232.397 li
339.484 232.393 li
338.87 233.037 li
338.242 233.674 li
338.247 233.67 li
337.626 234.29 li
337.004 234.913 li
336.39 235.497 li
336.394 235.492 li
335.774 236.072 li
335.159 236.648 li
334.549 237.199 li
333.935 237.734 li
333.933 237.735 li
333.298 238.291 li
332.685 238.805 li
332.067 239.324 li
331.451 239.831 li
331.456 239.826 li
330.836 240.326 li
330.84 240.323 li
330.199 240.833 li
330.201 240.832 li
329.589 241.316 li
328.974 241.782 li
328.968 241.787 li
328.353 242.263 li
327.734 242.732 li
328.187 243.33 li
327.74 242.728 li
327.12 243.188 li
326.787 243.434 326.718 243.904 326.965 244.237 cv
327.211 244.57 327.681 244.639 328.014 244.392 cv
cp
.146181 .770871 .77734 .0289006 cmyk
f
327.942 250.07 mo
327.942 188.92 li
327.942 188.713 327.774 188.545 327.567 188.545 cv
327.36 188.545 327.192 188.713 327.192 188.92 cv
327.192 250.07 li
327.192 250.277 327.36 250.445 327.567 250.445 cv
327.774 250.445 327.942 250.277 327.942 250.07 cv
.75021 .679683 .670222 .90164 cmyk
f
.146181 .770871 .77734 .0289006 cmyk
MCBLKO+Helvetica*1 [-5.51092e-16 -9 -9 5.51091e-16 0 0 ]msf335.876 212.149 mo(fitness)[-2.50098 -1.99902 -2.50098 -5.00488 -5.00488 -4.5 0 ]ysh.653773 .579889 .56878 .366613 cmyk
MCBLKO+Helvetica*1 [7 -8.57253e-16 -8.57253e-16 -7 0 0 ]msf320.597 252.579 mo(2)sh320.597 196.989 mo(5)sh327.567 249.695 mo
325.717 249.695 li
325.51 249.695 325.342 249.863 325.342 250.07 cv
325.342 250.277 325.51 250.445 325.717 250.445 cv
327.567 250.445 li
327.774 250.445 327.942 250.277 327.942 250.07 cv
327.942 249.863 327.774 249.695 327.567 249.695 cv
.75021 .679683 .670222 .90164 cmyk
f
327.567 194.105 mo
325.717 194.105 li
325.51 194.105 325.342 194.273 325.342 194.48 cv
325.342 194.688 325.51 194.855 325.717 194.855 cv
327.567 194.855 li
327.774 194.855 327.942 194.688 327.942 194.48 cv
327.942 194.273 327.774 194.105 327.567 194.105 cv
f
409.382 250.07 mo
409.382 194.48 li
409.382 194.273 409.214 194.105 409.007 194.105 cv
408.8 194.105 408.632 194.273 408.632 194.48 cv
408.632 250.07 li
408.632 250.277 408.8 250.445 409.007 250.445 cv
409.214 250.445 409.382 250.277 409.382 250.07 cv
.193668 .150057 .155337 3.0518e-05 cmyk
f
424.802 250.07 mo
424.802 194.48 li
424.802 194.273 424.634 194.105 424.427 194.105 cv
424.22 194.105 424.052 194.273 424.052 194.48 cv
424.052 250.07 li
424.052 250.277 424.22 250.445 424.427 250.445 cv
424.634 250.445 424.802 250.277 424.802 250.07 cv
f
440.232 250.07 mo
440.232 194.48 li
440.232 194.273 440.064 194.105 439.857 194.105 cv
439.65 194.105 439.482 194.273 439.482 194.48 cv
439.482 250.07 li
439.482 250.277 439.65 250.445 439.857 250.445 cv
440.064 250.445 440.232 250.277 440.232 250.07 cv
f
455.652 250.07 mo
455.652 194.48 li
455.652 194.273 455.484 194.105 455.277 194.105 cv
455.07 194.105 454.902 194.273 454.902 194.48 cv
454.902 250.07 li
454.902 250.277 455.07 250.445 455.277 250.445 cv
455.484 250.445 455.652 250.277 455.652 250.07 cv
f
471.082 250.07 mo
471.082 194.48 li
471.082 194.273 470.914 194.105 470.707 194.105 cv
470.499 194.105 470.332 194.273 470.332 194.48 cv
470.332 250.07 li
470.332 250.277 470.499 250.445 470.707 250.445 cv
470.914 250.445 471.082 250.277 471.082 250.07 cv
f
409.007 250.445 mo
470.707 250.445 li
470.914 250.445 471.082 250.277 471.082 250.07 cv
471.082 249.863 470.914 249.695 470.707 249.695 cv
409.007 249.695 li
408.8 249.695 408.632 249.863 408.632 250.07 cv
408.632 250.277 408.8 250.445 409.007 250.445 cv
f
409.007 236.545 mo
470.707 236.545 li
470.914 236.545 471.082 236.377 471.082 236.17 cv
471.082 235.963 470.914 235.795 470.707 235.795 cv
409.007 235.795 li
408.8 235.795 408.632 235.963 408.632 236.17 cv
408.632 236.377 408.8 236.545 409.007 236.545 cv
f
409.007 222.646 mo
470.707 222.646 li
470.914 222.646 471.082 222.478 471.082 222.271 cv
471.082 222.063 470.914 221.896 470.707 221.896 cv
409.007 221.896 li
408.8 221.896 408.632 222.063 408.632 222.271 cv
408.632 222.478 408.8 222.646 409.007 222.646 cv
f
409.007 208.755 mo
470.707 208.755 li
470.914 208.755 471.082 208.587 471.082 208.38 cv
471.082 208.173 470.914 208.005 470.707 208.005 cv
409.007 208.005 li
408.8 208.005 408.632 208.173 408.632 208.38 cv
408.632 208.587 408.8 208.755 409.007 208.755 cv
f
409.007 194.855 mo
470.707 194.855 li
470.914 194.855 471.082 194.688 471.082 194.48 cv
471.082 194.273 470.914 194.105 470.707 194.105 cv
409.007 194.105 li
408.8 194.105 408.632 194.273 408.632 194.48 cv
408.632 194.688 408.8 194.855 409.007 194.855 cv
f
409.298 250.082 mo
409.918 249.821 li
409.925 249.818 li
410.546 249.548 li
410.555 249.544 li
411.176 249.264 li
411.184 249.259 li
411.805 248.969 li
411.813 248.965 li
412.433 248.665 li
412.451 248.657 li
413.09 248.327 li
413.099 248.322 li
413.719 247.992 li
413.727 247.988 li
414.347 247.648 li
414.364 247.639 li
414.984 247.278 li
414.991 247.274 li
415.611 246.904 li
415.617 246.9 li
416.257 246.511 li
416.28 246.496 li
416.901 246.085 li
417.521 245.675 li
417.541 245.662 li
418.161 245.222 li
418.168 245.217 li
418.788 244.767 li
418.8 244.758 li
419.42 244.288 li
419.439 244.273 li
420.069 243.764 li
420.074 243.76 li
420.694 243.249 li
420.71 243.235 li
421.329 242.695 li
421.334 242.691 li
421.954 242.141 li
421.969 242.128 li
422.589 241.548 li
422.598 241.539 li
423.239 240.919 li
423.252 240.906 li
423.871 240.276 li
423.883 240.263 li
424.503 239.603 li
424.514 239.591 li
425.134 238.902 li
425.142 238.894 li
425.762 238.184 li
425.775 238.168 li
426.395 237.418 li
426.403 237.409 li
427.042 236.609 li
427.055 236.593 li
427.675 235.773 li
427.683 235.762 li
428.303 234.912 li
428.312 234.899 li
428.932 234.009 li
428.941 233.996 li
429.561 233.067 li
429.569 233.055 li
430.208 232.055 li
430.218 232.04 li
430.838 231.019 li
430.846 231.006 li
431.466 229.937 li
431.472 229.926 li
432.092 228.816 li
432.1 228.801 li
432.72 227.632 li
432.727 227.618 li
433.347 226.387 li
433.354 226.373 li
433.984 225.054 li
433.99 225.042 li
434.61 223.681 li
434.615 223.67 li
435.235 222.25 li
435.24 222.238 li
435.859 220.748 li
435.864 220.736 li
436.484 219.166 li
436.488 219.155 li
437.129 217.455 li
437.134 217.441 li
437.754 215.691 li
437.759 215.678 li
438.378 213.828 li
438.382 213.816 li
439.002 211.856 li
439.005 211.845 li
439.625 209.776 li
439.629 209.763 li
440.249 207.553 li
440.253 207.539 li
440.892 205.079 li
440.899 205.053 li
441.473 202.467 li
441.733 202.195 li
442.039 202.19 li
442.075 202.189 li
442.695 202.149 li
442.718 202.147 li
443.357 202.087 li
443.978 202.027 li
444.6 201.966 li
444.61 201.965 li
445.23 201.896 li
445.852 201.825 li
446.472 201.755 li
446.481 201.754 li
447.111 201.675 li
447.126 201.673 li
447.746 201.582 li
448.365 201.492 li
448.984 201.402 li
448.995 201.401 li
449.616 201.301 li
449.624 201.3 li
450.264 201.189 li
450.28 201.187 li
450.889 201.069 li
451.466 200.976 li
452.045 200.929 li
452.645 200.9 li
453.256 200.88 li
453.888 200.87 li
454.502 200.86 li
455.117 200.86 li
455.128 200.86 li
455.742 200.851 li
456.357 200.851 li
456.997 200.851 li
457.01 200.85 li
457.623 200.84 li
458.237 200.84 li
458.857 200.84 li
459.477 200.84 li
460.097 200.84 li
460.727 200.84 li
461.347 200.84 li
461.967 200.84 li
462.586 200.84 li
463.207 200.84 li
463.847 200.84 li
464.467 200.84 li
464.479 200.84 li
465.093 200.83 li
465.707 200.83 li
466.327 200.83 li
466.947 200.83 li
467.586 200.83 li
468.207 200.83 li
468.827 200.83 li
469.447 200.83 li
470.067 200.83 li
470.707 200.83 li
471.121 200.83 471.457 200.494 471.457 200.08 cv
471.457 199.666 471.121 199.33 470.707 199.33 cv
470.067 199.33 li
469.447 199.33 li
468.827 199.33 li
468.207 199.33 li
467.586 199.33 li
466.947 199.33 li
466.327 199.33 li
465.707 199.33 li
465.086 199.33 li
465.075 199.33 li
464.461 199.34 li
463.847 199.34 li
463.207 199.34 li
462.586 199.34 li
461.967 199.34 li
461.347 199.34 li
460.727 199.34 li
460.097 199.34 li
459.477 199.34 li
458.857 199.34 li
458.237 199.34 li
457.617 199.34 li
457.604 199.34 li
456.99 199.351 li
456.357 199.351 li
455.737 199.351 li
455.725 199.351 li
455.11 199.36 li
454.497 199.36 li
454.485 199.36 li
453.865 199.37 li
453.225 199.38 li
453.212 199.38 li
452.592 199.401 li
452.58 199.401 li
451.96 199.432 li
451.937 199.433 li
451.316 199.483 li
451.257 199.49 li
450.638 199.59 li
450.615 199.594 li
450.001 199.713 li
449.373 199.821 li
448.764 199.919 li
448.15 200.008 li
447.53 200.098 li
446.915 200.188 li
446.3 200.265 li
445.683 200.335 li
445.062 200.405 li
444.449 200.474 li
443.834 200.534 li
443.215 200.593 li
442.587 200.653 li
441.997 200.691 li
441.395 200.7 li
441.195 200.703 441.002 200.788 440.864 200.933 cv
440.244 201.583 li
440.151 201.681 440.084 201.806 440.054 201.938 cv
439.438 204.713 li
438.803 207.154 li
438.186 209.352 li
437.57 211.407 li
436.953 213.358 li
436.338 215.195 li
435.723 216.934 li
435.086 218.622 li
434.471 220.178 li
433.856 221.658 li
433.243 223.063 li
432.627 224.415 li
432.003 225.721 li
431.391 226.935 li
430.777 228.093 li
430.165 229.189 li
429.553 230.245 li
428.939 231.255 li
428.308 232.241 li
427.696 233.159 li
427.087 234.033 li
426.475 234.873 li
425.864 235.68 li
425.235 236.467 li
424.626 237.204 li
424.016 237.902 li
423.403 238.584 li
422.796 239.23 li
422.188 239.848 li
421.56 240.457 li
420.951 241.026 li
420.339 241.569 li
420.343 241.565 li
419.732 242.098 li
419.12 242.602 li
419.125 242.598 li
418.505 243.1 li
417.901 243.558 li
417.289 244.001 li
416.683 244.431 li
416.073 244.834 li
415.465 245.237 li
414.837 245.619 li
414.843 245.616 li
414.226 245.984 li
413.619 246.337 li
413.009 246.671 li
412.397 246.997 li
411.772 247.319 li
411.163 247.613 li
410.552 247.899 li
409.943 248.174 li
409.331 248.44 li
408.716 248.699 li
408.334 248.86 408.155 249.3 408.316 249.682 cv
408.477 250.063 408.917 250.243 409.298 250.082 cv
cp
.653773 .579889 .56878 .366613 cmyk
f
409.382 250.07 mo
409.382 188.92 li
409.382 188.713 409.214 188.545 409.007 188.545 cv
408.8 188.545 408.632 188.713 408.632 188.92 cv
408.632 250.07 li
408.632 250.277 408.8 250.445 409.007 250.445 cv
409.214 250.445 409.382 250.277 409.382 250.07 cv
.75021 .679683 .670222 .90164 cmyk
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Symbol AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginMCBLKQ+Symbol dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/tau <1C60D8A8C9B76427D01852E70A802F53B3332ED85B4602CB20E1C6FED338814DB7751C7927CD18A1BD79AB419809A2D6B3E35B03FEB9D8110F08F384A782DA2CFCFAA8B8132D5D0B0F4FA555B564AF418641C2B838C1661FDE86D0AB01CCFD77FA3E63E826A62A552A5BBE227D526A7CE93FFE3164ADD0309D3A10C154A1CEEF8B2F995D9ECAEAF4D9C7ADE502E507822BD4A89FC14DDD4D3D9E37D7B772D3D452BFC048BD19A84F8518CBD221DF582063AA924C5662446E2CE0EBE78DB43B122D2322F9BBC5B5879F79> |-systemdict /gcheck known {setglobal} if end {end} ifendMCBLKQ+Symbol /Encoding getdup 116 /tau putpop%ADOEndSubsetFont
/MCBLKQ+Symbol*1 [97{/.notdef}rp /alpha /beta 17{/.notdef}rp /tau 139{/.notdef}rp]MCBLKQ+Symbol nfMCBLKQ+Symbol*1 [12 -1.46958e-15 -1.46958e-15 -12 0 0 ]msf412.097 193.469 mo(t)sh.653773 .579889 .56878 .366613 cmyk
MCBLKO+Helvetica*1 [7 -8.57253e-16 -8.57253e-16 -7 0 0 ]msf392.297 252.579 mo(0.02)[3.89258 1.94531 3.89258 0 ]xsh396.197 196.989 mo(0.3)[3.89355 1.94434 0 ]xsh409.007 249.695 mo
407.157 249.695 li
406.95 249.695 406.782 249.863 406.782 250.07 cv
406.782 250.277 406.95 250.445 407.157 250.445 cv
409.007 250.445 li
409.214 250.445 409.382 250.277 409.382 250.07 cv
409.382 249.863 409.214 249.695 409.007 249.695 cv
.75021 .679683 .670222 .90164 cmyk
f
409.007 194.105 mo
407.157 194.105 li
406.95 194.105 406.782 194.273 406.782 194.48 cv
406.782 194.688 406.95 194.855 407.157 194.855 cv
409.007 194.855 li
409.214 194.855 409.382 194.688 409.382 194.48 cv
409.382 194.273 409.214 194.105 409.007 194.105 cv
f
139.197 261.68 mo
331.376 261.68 li
331.647 261.68 331.866 261.461 331.866 261.19 cv
331.866 260.92 331.647 260.7 331.376 260.7 cv
139.197 260.7 li
138.926 260.7 138.707 260.92 138.707 261.19 cv
138.707 261.461 138.926 261.68 139.197 261.68 cv
f
327.937 263.17 mo
331.376 261.19 li
327.937 259.2 li
327.937 263.17 li
cp
f
327.937 263.17 mo
328.181 263.595 li
331.621 261.615 li
331.773 261.528 331.866 261.366 331.866 261.191 cv
331.867 261.016 331.773 260.854 331.622 260.766 cv
328.182 258.776 li
328.031 258.688 327.844 258.688 327.692 258.776 cv
327.541 258.863 327.447 259.025 327.447 259.2 cv
327.447 263.17 li
327.447 263.345 327.54 263.506 327.692 263.594 cv
327.843 263.682 328.03 263.682 328.181 263.595 cv
327.937 263.17 li
328.427 263.17 li
328.427 260.05 li
330.396 261.189 li
327.693 262.745 li
327.937 263.17 li
328.427 263.17 li
327.937 263.17 li
cp
f
220.877 265.95 mo
249.707 265.95 li
249.707 254.83 li
220.877 254.83 li
220.877 265.95 li
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
220.877 265.95 mo
220.877 266.325 li
249.707 266.325 li
249.805 266.325 249.902 266.285 249.972 266.215 cv
250.042 266.146 250.082 266.049 250.082 265.95 cv
250.082 254.83 li
250.082 254.731 250.042 254.635 249.972 254.565 cv
249.902 254.495 249.805 254.455 249.707 254.455 cv
220.877 254.455 li
220.778 254.455 220.682 254.495 220.612 254.565 cv
220.542 254.635 220.502 254.731 220.502 254.83 cv
220.502 265.95 li
220.502 266.049 220.542 266.146 220.612 266.215 cv
220.682 266.285 220.778 266.325 220.877 266.325 cv
220.877 265.95 li
221.252 265.95 li
221.252 255.205 li
249.332 255.205 li
249.332 265.575 li
220.877 265.575 li
220.877 265.95 li
221.252 265.95 li
220.877 265.95 li
cp
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.systemdict beginMCBLKO+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/m <1C60D8A8C9B6B41C87955CDC3639140F8FA33C70CE271539122DB89AC63FD596C1AE79761050C7D5317C1A1DE3923CB96B736E4977F68D67BD6922E1964FE05D51AB32C479ED8218C444609251096F1947B0C4960920FFF6AE70BA15738BF1106729A839E228137A715EA1C031F63BED533B4300B92AAA320484B5BAB342D2B48F6B68F518B0142254C333F20247ED0EA3DC72FEE0> |-systemdict /gcheck known {setglobal} if end {end} ifendMCBLKO+Helvetica /Encoding getdup 109 /m putpop%ADOEndSubsetFont
/MCBLKO+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven /eight 8{/.notdef}rp /A /B /C /D 28{/.notdef}rp /a /b /.notdef /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y /z 4{/.notdef}rp /minus 128{/.notdef}rp]MCBLKO+Helvetica nfMCBLKO+Helvetica*1 [10 -1.22465e-15 -1.22465e-15 -10 0 0 ]msf225.847 263.189 mo(tim)sh239.176 263.189 mo(e)sh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/MCBLKP+AdobePiStd*1 uf/MCBLKP+AdobePiStd uf/AdobePiStd uf/MCBLKO+Helvetica*1 uf/MCBLKO+Helvetica uf/Helvetica uf/MCBLKQ+Symbol*1 uf/MCBLKQ+Symbol uf/Symbol ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Kevin Bullaughey) ()%%Title: (two_env-func_of_duration-param_limit_test-all_five.eps)%%CreationDate: 10/20/11 6:14 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6LO(FCXtY0/J9N]U_.5Tg*AH.IgGn,]8@DYJRBU>t4T-p5F`jDl_.Voc1LAsjVRsEk8lA51WT<U1LU0:Y48@#1s-_PrD1olf%=>IE1,SD_jkGWaXR:lsrd\=hS)dso,`R61`Rtum"F95d)8()BPJ@CEReu[aH9P`ZsX#$.XL:uPjP1_8]h&'su2*TtjA)j93lOEm!%Omb/2hl9c#_nd%Ek1[^bVq/PQ[c(A.j/CH(X#'.O)W]NChu2]AVg@TR2B)8"Sb=6\kDnS@j_h8#*fg,Wkm#I&35!?@Du!PFf05i"%S"4P26VJcq[eN;r;4g,B@3BehD]]Kn]ihsGK4/lUa*i1p_$A(@Edcc3:'#=\-QX0ZS3<CB6'BpZ,"[;%&)W4S3ft&s"XaQW>bjAD%&_le<?$/?CPNfS3m1'@SI]5-`iMbWNIm_0pr/7D]%3`j@B/cC\W7RD[aD;/;DM&bclrtq?_^80sYnYD,Zl^)^)f]2[O-SDar7134%,6Llql40]/aVP+IXkTT.bDiFOh1#GfpfNL8kU1e!2=#D)og'C,,DN\Uo[U9V]@/"?OPVYb)P>G#TE=5=(:\(;5<DfZ^gV/9_p<.p%=:6fIe]-L;nO0B/rH9p\$uUg/UrQn@i$*0V9ccLo%A"BSNC8@'*$n<)&f\KFQ<WJ(-`n:;_J33OJ,l/Z9]j=(qq3!#_L+J_$QMtC%I$-!@iK\DlXituefLXC#17h$/ofp_#duFM=VUNgU)@.HniCp5+j!&-f["4]"^r\m;MZAG+8gZGod'Gj-a.V(P2W-28UgnrCs4k]q%4[hKoi(k'W1QfK!F;d@O"a3r]nQQ^tW@6b);5@"2AUKu]Pt5;^6iqia&m-WG^f$"W\]j>4Vm/oVNFgQ-LMs*>==Tl];L!nf=K535%;M>1d=X`3l6358obP8GL7`L)<pq0k/n'E-)rmLem(?nbFP<B]_Mt%HRiL'*J9Au8j8EhoM&Un1,*"dYZ\/?RU]/V/8`*YJJr5>$P%S7p/,,5fB!j#>i60k$OcR^@JoL#^$G/5n1]4Z5OWEscCa71(@=Ui4\De)&Qfe%X5\Z0,q`=:+hZV/UhWM)EZuUnag5k`"IZQGW0s%)5^6(n)F-3'7]!)kksHgm5a%>:Fq4[_bW=O'MBiZC&?O,_ZB*a_]LdL[!reT=GjtT_1do>p)\QUqaK8927*+Q-.j<*_9k!]`6mPu%FO]q3NXn@Z'ZFu1+,(#L(I,/5Nm?`pR*B<"6B8K>Z(']+_\IoCfQ2p!'GhTlYW8P!VnJj%VsRBl@F*VcYd)Ti@k#tiXe!1%T@6$Y%F%Vi7S*?GAf[(PZjH&<(6LFCcQ\SG=6<O^l$LUjZApCN;+24l8&>O>YQ5PpPH,(IU8E/A21g"*fIp'Cj?MZ"pF6!kH.9GT,5=(r<%P]-DR9,[^Xht57VM9"j$jdZ5qPOu?T:&e*?qE'sOD5X2E>`M!F^?Jug:OanPoZuVJ(?lk$S,S[FoXFBcs#Bh8noL<_r1rpVJ$WMS%)oa8D$F+idQme9Da^QlVs7'I%M#VLpEfl:/qt(>F<\DD@=;oa>HsWOkBmEm7r,.+6P<U2sFc\QBJrhP$gH>*P=2sFaJ%<e+M]DPQ%$ZUa3+XH(LXUjPQQfAI`QLaYTrepP9%=j.^4Sb=Q4\Z4KMG)s@n4tUrJ/[Vd^5_%>2LZFiKcD$Z[%([qno=LYek=oGna[]NOAnD0%7mP,?MtCl]a34MA';7mFiL:88E1Nc3#X!Q'5DhddNg;tb-X7a+,0-#b\4J:7b-ZZhf\*dVo=0>>d2Cu&&gX[j;&T]3L/1@e:U:tD%"IEYCOV2Y7=HE9J!`:l5;GYcC<f.8e2gq1HNd']3adp<H>H&IW!qLMtE.PCo9SNek028XH/,1a&4+M)Zk2_[\][O62<g2#g00PZ+%&O2uV,2t)iD`.f*X#U?5AUKX&RuNPh7;49kYU<#@%qeJ--sA:4D(r78;NXA6;N7]jb9NA-/o*ttjqQ]Bas(tI;ZFmRTE@6=LhfJA%,oDH5Ubn0F,GB7a((#tW>%jt@M9Sc*+L(Rh--<[=4B&s[BoG>J1KS/A'=jsPe93m@+=5J.ScWce.WcG/?fD\f8sfpt;o-]qEZ[/V%PFeg_c,UZlds47),e%!@hFUPd@Fo$`AaG9OAm.FVRdho@=.Xoi8qM!eTFX)4Btb2Vb&Rgegr-VuP]0dR(HUGg8B>aX4AihiDpeQj%[04#UBsSrT$HKsrqNp'*T;NA58cP!GQg*:=THlh>KYf#@;6G_)PTR[gYH21'9GIirUaqnX#P^:?9_]Q.-H[cK>)^oGE$_6\l04hS%Xh[Je/V&O/'A+XPFeFs5m2<:"BB,:Zg+lPN`C`adFsG$F/#Pqa,jI[s-X<4?*.a)9C5nIq<[^DaSs-FE)%MiX'"6*U3!mI/:8!c;%14R_eJu^K)W2UV#=PI^gePg&!-jHqWZ#8S^cD`LY8fm%67UN6f\E4eQgVeR2)Z%L_'s7Vq.0TbchC%!f3_oi1&"2B3`<F6hYm45L%5g$l>d5@9M'5\9KUVql$P[5P7+Nt7fQ'D+V2d?fT.Z#UO_GeIR$=j;fe;c-/[]pXU2u"gI=jPT:UU-n,.6aF>MU7fe$Q]8C(bF"/%`#\>A"hRa/9s_C);@hVSW7$.CnOYF$\:R&*3nd-'=!oOb+cU`L?I+ne)Xf*7V_a(Z<+b)ufE7!_C7LGp,M+&ZQoV;m,\c!_/2r_3%T]WO*@5CK7Pg)iV;jhYQr("r:)8p<D#F1O=*`?_UWCK>M$>62P(p-"0h(ec'lOSW.1j>IMmSXC..%cc*,)P22/>:Le*b4>X%)/j]%jZLAr39)qINWAjoAjNg;+]Ti]<$f@S7oe9jbAq?Va[hk`3D'aj(?0_+;j<I7MU"/tR6;d`:5\TY/UZ&2@T!C#21r<'6!%4fo;iHr%1S_9D\K^(oau@45ZMjo))"fV_PKj0PGDY2*d&!0E92HCeZCJ`*C0?Z]e?Dm6<6\^)hBl/^eqBPb_Mf+m[nPio4Y.GIVC>8=IYRfr%>b0eLMV]q_.()U\A9e<(/ji#Qkn"^j=Z!u,l$8D3-<\qpZ?`,/!ok\^GJkA+TbKba;lEP&;:7hmEUn)o=[VUEJa)(a2d(?'KPQK\%hTF/S3*KH]X4-9BN-5p'8[VC3P=7@Snd/GgVK2hi9YNcf.Reqb9']Q9b(p=IU14ne.km15Yd[f,K&NjM%T5Ee]Sk&i_O.6c,gDt\%537kg7r9<+.eM4WqO1ntTqn#irmOkd_>fHHFDjf^G5RuT9G44A)Jk\Rp".?9U;]a7bqfftnSq,6i_,NrZh9$T_%]fs+/ekd25:7B%DPc7UeQS\DFtM%$?HuD@LTD8kfeBsjdZ1]gQ"A[,d4:'7(208?I9@piaAb!G--<QPFJ=4g\]a>Jb-aW]`FPL]/(,=bYB;8&a>19D%*u*L?gd'+;e@$U%".PWgFNW`;Bc3V<n5S+^=eQ-/+0n?ZQ.!9dVPm4c9OpS'Ku6"=?-5UZ`E8#"O)-sU1^KIeQ">kV_Pf:L^G`'6%1bltZU4SqUBt`Y=%"dSM,0:tQl=W!$]a:+9`7W<)ZGaiUC(="A8rVL:R$T,BQ\6+7SWqP\hNoq/Ur&$&UCqt]C*?OMPP"tV.<:u\%;9AA5PL>^2OKE>8APd=JB2$]H<1H7;'U[*W`&B*9k>H#Vg-6$+MlKQ.IEDCV/Meh2M,[*t96jgh.JG7?'`"#B92[a%R*lK_$aar4%ZrTaK\'h"e8.'/bPi\2nRuM\GWog0.#YK7e7=mIEVd.fcU\eYL8[;I>V2<,C6Qj_/A8kSmHZV/VQnt>:Z+_[El77aI3$U%OTr^d`%9I<d_TS9h5<>+Yc[DpUme^h3sHJHdh-,W;J;sSd5H;\?U@HDuAXW&bFSEa'bg@bShV1oS-RrJEs&nB9[kOS.0Nr>ig;1?j5a@S6W%olZ[4Mc4:<4EQ&-N1s:5V>,goj(2ptY/fI;M0nOX:MGsM07A2=Z4n.Sf%i+K"0i,)ohsI/Bp!/mb-u]Hg/SEN3e<an5NP\J-B4Oq%m_@8W_A?1aK;\LDBj8$UC\p0E#H"Jeoh\Rt&#CksqOjf0l;2fP+JPrB$=toLK>Q@X>UuUMV<)#5AQ9sRW(lQ:K]gMVU_1Vo\hmoX%bIkeK8(Bso[Sf[C#ffkPO03+(ZViQ]V7!/BM@Req<_R*Xlg&&-(1h2eO7n-&QARcEFRMjId;pZ-I]AugZmum1<+B`Fkg0[6P!)f_%fc99j=4,Wm_/gVDl0(Tk[aLVlC*;Q*1)l)tbA&KLfMYaILa4?^3Np9.Ukbs`EGbq;H<XsoZ<9gW1+\V62)&+L<jIO;b1p`4d#p.r%`A0tV:emh?1XsQ3C:r_@$'%Tf.QPWOHcVhTJZ,1h4_NISgI!a94t:ob2s+0D[8(4<$SA3)gSE/PH)a`OK,,POZoeR`H)3#Ap(hqu%PP=i<+"GH=NQaop4]@5c!oHCO$?\XKG73l[W'1@Q)-@d=s/X2bYas%o,&^ukaQ?l-O?AsoV*Q%@$L(Q!fLKT$$$.u*NJG4+-[d=K%P:+tQl"oF,Ef'&EcYPT.9Y,l&?=tLRLjk@'Is'+P0q)m%4(ELjM<;hI3*L!<g>-)=&M5kDZY:e554/'tS`g5-k).aO2]B%oK@CZR%[(>;KXT-]6r%m&'b0]l%V",;%]L1Ot76C.lNp>/Tr+_R!hkanqW\Rkjb^`[]M@O@R+Y>cTPo\"YLU8Qf>'*5lcBP'+kY*V`DL?nV%`mH\dYg\H;!8c,FZnq./-mkK#qS#FgZX0gkNK+oeKYZe%$?,PUK6FR+:`9up@Ap:KD%0!bO1V#ke*(o/BQqft3(j&j2]!>?VsVc"%1foQ@9R;]?QV5%MlHL[SmU2n+@c)ZZ#1<EDJ(lh^NdVGYm>h`VeK&c$]&/m^Aj-(.$8g\TeG@Lm1VlAcL]82Z49'-i)LZW4f[Xgr%HLQOaejjWaP<7Z]cP]E!Va$^F3Zh;^(PP8TfB\H9jHEH9eVWGPAE5"HPJ0Z:+l^S9%:+j7qW*PW14Y`kb'q\uaY2a>^"MiQeO9V'%JL8;46,*142s?3dB&b'!.A7HdhrGTQc5$<A_LNs)J<lrTBP5se"<higcrm\0l,Xkj5G764CH.d`MR]B@'oJ;Vf/\^+-+S(C$CYIN%s&b8`a)[k`>3LPR\kpqt`dL-Ge7jcN\sb[.eAdoF9Y+*OgN4Y9NRes:IGCO8)D+8ePb]`s]:rZ=_.R7?lh;=(.F@$md.r^1)Xs?a%VF94Lj!Sb(P?GYaff4bBe?b^MWR@Fs`+XnL`g[ShTT0n7MQ.^c<Fr,<prt%c%/:pFMS=N1pSd,^BfRS-'qPC7b<M^n!U?P"eEkG)%[TKRepjpCL5^W,Q.c#<qdM&82,sJ`Q-cILXGNWVikeW<JZoe$_HCt2=iZ^A&U];qISH`OTrc%BV*gm<gZY?nrCNi!,U<rWu$$(i^%`l%MO"g"j72,99J6hRF#oV17=Ci$WVF?Bo#%2m%fT2%ip,C&1>;D6ItBX-$U2Dt\%-;c",OahKXT,e>l^qr7-:MJa*7O*smYe:&S%COgNjM!mAHiKMbqXZ(l&Q18fO3Z`YW>s:%8)s(C9gtA>2r>RrkPC5q>h3$Ucm:,6g3:8<#e%;Hm?_-%mUoIJ0"!kR"f,0S8X02+6%K>r.ggm;fZG%!822.1)ih9%nX8oM]d&G!AOdJO)^'>,mPO;g1I_>Ifab&A=$JD51N1&]hIpOM^-j9k*HD=?[OqqbVf0UuUbOWVmr%?Q1rA@8F%,qadkq\kVU%q>ZC3C?1)b`IJ#'^*Tb/^89V0qB+;rPW!F\*r[P=?>+lY5U<LMbGYGokAj5ffcl5@fMQk@=7Ae(VhXQD%ea$K?%C0<tW]#M7nDZ>Kiq9B7m3oXgp.#tF[rMAs(j/B?e#tMUGqE)78)CH3J)RUh@nb?!(_AV()d'g)H9)'%NVqGM^u,Da!(Z[o%dI1n)>g_kT+1O"Ob&(Cn\4@er-Bf8H(Jgo,.1D8p-W3MEQblQ7*hS6.T2+k[(\\@TM]Un:mf/"`-ZJS\DZ+&i[W/bGoYPIPiU6XZ%.<c:(&S6I(XpnJc52b1g_]*(5VU'W@!=Kc7nKk_FP$TEQ(jpBk.a?q3'ITbL31gJo8`2"M,Ss7QI]^pFRm,R1*(h5THgdQaDI_7e%^=`(=`-Phs9eY]pd_dTu"3NVF&8s<HK',B9$C9G09!&+D)ebhqBW^O/Zhg=j,'VoDb;C(E>&1Z`H+=lq[7*Wo$Iu+'B5Ws0^bS$'%kNF/5^p':-:V$uMl#)qh0(kJ5Uf*u+>Eo'jSAAQ<U.mMbJ(*<LB@ZT^]4:VTGJj1$5,a\4:)K;)EOQ8.#tQ'[/=IN=)uh]oXJ()C%WR_l!:#jNLQ4Z$L`rI"Q.=Otj7S]"?IGVg$mB=NSZ3sWV4[kW.>P,*gDoTrZrJ=+V!DkI%-M:oDq=VK:3mB:6F6=PD#Cq'TR@Y'G%fL&283qVk],:jI>>um#i2f*ndg.oZ-9!2n)<uaAA3I43eg2/Zn*@HY]4-T]6#X.dG@oC@As(3h%iO(qk*;9EGSF$">0JdF9E.i!J%YR[Spq!3#&IJFE=b5WQ^FRns_s5;H&hb46<?FTUBSJMZje40)1e**21o;dN+IODJF9)a250-72-M^RM-j8)9T4oKCV/?.RBGuWj<%,J,]/dh*2k]>qdKB<iE!hbFCIpV2&/0IQ\Tcsdj:i=n\2C?K)!&*\'hWqgl<"."APn#hGPEN;H%h>4Uaqli-[]=ZGY9H.g[K3%A0%HGt>L[3`G;'C8U3`]K$%>`;>CkDn"1NUaA9ClI*f/NaeaKAU@bm;NKeF2pDX_5c2`*e9h>S4tq+l!BB=dI(P$#Co+2*MUkPdh([Z%2o$K)FXCH7<t06ikl-LmP;\YX[ceZM+XX#/4"Y:,/tg\!A#:K.S>IAEZfq`bA_e"c<V(=f(edC.R+BjGd"?4_A((<Wa'gV80\am/%C2gUmjh^JU)6&TWPKrs,cGiTAT@8ct]/sjd]=mY)DgD2T.\Wq[e08ce)qDsdF4U-QCt+1a2Vl*FZVJ+ol`7gRf$sPhgB."W-tuYM%FMq9o9Y3.;:miMLN*OB%7^"<s^6mDG)!tE_LZDcge;[#n&o:`ANOBlJPL4?L_qBKKnh$%umW]s8Rgs!dR&>Z1`i(VD!DL*'=g+Nl%#&cOU=s2jfH+@pmOb;'\`Q#'"F<A!.rp^SHAr^DAk/c5%lnXli0E'rhl'K7#U_1`9@1uO?'4ORu]?@(Mcku]2Qs@gEjuF/_E#Tni%e;XcN_LH]3;a@p+UXp?i%![O'(#TnlEjIJ(r,YnZ1*$n?fo!h>'Q3TT,ChN6VuPO;f;%<?k)BtJK]-:/nHb,edL/6&(',8P=R(+u%\30*M(jKp[isF3G:DpG<QF2J-G,IKa^DkSliDfE9=(BTbW3j=e*KVEQ-Y.SJK"b3;-#<RU=qHmDpnV^,+]XUHFesgl;ILu\-q4*u%/Y1b2H?qHMS!L4M#6YZ!q>sK"Y2bog5"f7_iXFk%.)&)oP5ZbS&F^X8g9jird)+p1QnNe0iSh0_&(RnY`>eu<(1.bZoIYE/fcZo!%dn@`YUPa:6"a8Fk?@EeHOs-mL9r>TpS(:,L\0KCScanFM9e*?f-r/V:[JTI'2fRQO;;6*Pe9WLW_98j9]&76YNcae6eHgKA3@d*1%9$:d.*O@@Y<`J<o>d,hR[0;tRc51>+fmaDp4sli"?*Q%gYrS3N))_MmPO@V,0eW[o$^.K+9%nksNMPM%UYG)o.+ahC]@24=A6kFc%)=,A\W-#(!NjONC@)#VS"t[?C-"T!j`:JO3b)Y5=i>>.u@FI=QquAqQ2&uWh64]8XA49>HAMAtn.eKss(e).YQM\k<DkkYXG6HD#%OOp&N%s`^=O><;#hLR,FG,Op/7teAqemhQ"Bk5.3_i/<]7mJ3Q_8jp"fN>P*D,Z\?Dp?:H@KB_3&4"f\"#[(QK7h#rMf;Kn`?ZFf%<jRX9BlS08ZaSHq$Hp,+:fc+^#Gota2Ic411!V*d&C0kAdt3HA#1H,T2]@/S#?Jc,RRBsZ)l"pf-!Etd^bJ]Z*'dB7(8<GWcV\5S%B1PE;0Iln_KQTR@M/t+dZk8[iE`@oSYAr>=:UCh^)pK!E`e<Qt`4Y245Je]4<r[(gI]4#$:;8i"$\6,U79PQQ?9fBBl'H@K2dJmQ%N$OfL/Yt@Dq`oB-%b0?Krk2/KK@2ZdiGe;#,-"`rdMeE`[R><rF?^:,/4</DNjpaFQ(#E)Y'ML5fe"T3:\uFCb5A)6-B1Ym>)cjD%eR_t1@elaP7_RC1('mOTZj%0oO@#@L[jN,r9NQuUqBagZ+l(4XPo2B<C=Hh;^beu!=Cs=(Z;HIuN2tS+X4+CcD9X]5&=,`hS^3%"%\M.Tk+Q*^1bOg$i\..##j,$9Lqpf@i]S?Z?)H#pun><"D:^(Z4A#q@oSKOJ+o&/K*AKbNE!Y^KcP61.),,R3Qldc24RItCCEl8M[%l,I,Hb[QHi4]fdd$Nj1+Ygca8>Xp^?3_`G\)cL.9cbA_WMqYLej"J5<$,r`,V&^DP)c-aha=]8an&gA[[&E%f_$sA%p#\93i9Le:%F!_Pf$NOg?l:,*BD00c-!#'J[`)g@-T,-XiBLTV+FfEK,G6BtM^g[bm@MmiVSoh2`@qX%AgSXT8L:s9!Ross^!7>1d0^Y[-%%HHY%DEOb;.WdJhR2U3cN6IC8NP@Me+@1*>]hV<aaPHZ+<8;H#?D6!eobPM9fJ?SCn#Pn"C?2N*a2b0(Z%LE@>([(MpLGt)gPg1#i)qb$%rL/Ug-,fL01SXg*;SF=cG/`gm1gg/O=2'a(Y4`gR&+8CAIOYKpY7b2[J%&KuLMgJB/rr*dp#deK<n$Kp6,i5N9uQEldSqcEnUA7o%]q8i?,H9Te,-Y)6N:XARn>pq;4?[jpZ_te289>J/MYER9TAj?@IZupO?\J"=B00Q_^"(p_@l`d@nQLLn*Hr=t(UQE&o:1:l`UVa$%\F<@@G3:JaDsHGt;X=o5>'2SA$^35fYSB0=LTe$cmVkq6E<e-UGEo>C4KEQfrI.\u0AY_O=,52Fk?d;IG*XaE(:.A[=[!SBqto79%_TQr&kjjt0hLc8$O@p(&(me-q$dZZ7kiN,$ItXSKBm=DX\O/^Zg?gtjKO!TXK/C+:O_SP7,QHVV^f).^j!q5M/fi:L>[<EQMS+'=%P>lgH,P][tgFa#gp@8=9CgbT/c]cZh[%*RV(a2Su=LG,cGdk<X!C&(tGk[o1StXu^j7m2pG/6UWf03aaTG?0sKn#-=IoSjjNP9f&%O%^Ke#_/RdZUUGEf4aX`>1#5Y20tkgDq.@kW_oOTXk,ttXO3eqbN.S^f-n'oRZ7.3K=e7D1W)[@bHEYL7_*R=o['D]`7FWim,'2_%@PHBc_^egf357@h[,Ts6ngA?7L5f5oKH"3lU_O3O_W/JW4)#B?]33P`php!l4/cV`r]0IKHk548O7u#:Z/OK.<q-:uWS-"NNc%nX%nc%:aXO4NIbLb[lUs[(L,$EdbPt$>uQ"FC0moO+\*c6hLh.Pb;pY7EcXfp$8EMJj(^WU]fZe_f'NA\6#b8cm+Rb6?jR6;mV)i[!C%ETPZ_RaNUC7?'q<ZmU$']JOAf.hB6>VN#oJ/ij`R7QZ.BQ-6:"j0>35ELuX_m56_h*9i;lVt)0,NBW#D\jk^Ehq(r:dF.VFX=p#S%*tPmHEE^:M"*=6ao_ju4jg-\:7_*:6ULW#VbEFt;]f)-f[>hn@(VP`Bj$lgg*`"#RRi422I3p;+7WEk(1g@*#:1GW15/k%$j(lD$%UU03-[ITP=C)#glQCE%la*Q2pO+*KSHHb3ZmMm'&>#"J@qV:7:d\t?a+7!5-ena"'?-]pkA_(O]HOT;V)E$gN9K(4X4+H%fJBneB%0?q`tdmh).]q#h#7\@$BlYA+B)FYXpNV+L*3=5a\)E.FEhYTtch0aGV7#`+-H&t>%a5_4-)k.;^&^?#K(u.gP[@kpkO.I*3pqa)^%k]](\C\6dAfcQDI>omG;^iuRlX1oFo%&YCf1c/"-2c7mipZr5*4e1_+=umaF;PV]W:h^Vg19s4W\,AdQ7X1>5::(GhOt2g_ASa2t%CNM[cpUGE.^>oAQ>+XsriI3V27iK?liD7?Prk!GsE^L^tR&sGj)@:=CE!qA6$QJ3i7X?RKs1'fN"ea6V\'c\363'+hQ\'%)X7^V+%EXV-l&+c].lSr_W'Z;ZKb\6OZjrKpTj[sme&:8^d[k(SkO.P"QgYk7p<j-DtPim*`g[?`cVe>GSVpSEL@bb+&4(A3_`U*J_q:"Za%FP>a==%QQh%A)H^%51DINi+%O/S^Q+3U4;[-\'dtkF[$Uh0p,Ob4@VG[p@asGa`mN)*MOB]0#j=R_Se<IgVW/IJNSBQp6#l`U4Is%)*IqHm?g(kjo+,Qr+YLUgou;G^E<9MS%kLia("1,cO[sf"iU1oT?OJ&gDTHnph'BPm0sijm-38,s)e/)i*1b7;pY?r!a"`X4q6od%eY:%3h5djPPX913/$>Q8`Bls`]TUf/Y=:B2)d'+P8,G6aDn_<oT%k'i3[`OuD".9*A=0UU4+likm4^TW.?s:nbAC>j2N-WbW+'P_%5j@0`G5%JT5_7/mX9R?.%Gr.D$9S-mYb^X@51DEqJ$:6e&4Mb^4.3t7K>O^bB;r]W(Yuiu&S23_nZc`V.'*Uj?IpU.@]W_8bQZ9c%)?k72H0'N1C%UB;Zr%Bm8"snW=-&WICd$?D)r3Ml7QstMQ(GS74h"eSB^?XZA2SmQEC&,gg[!Zn!I-!V<R=^p1`HDbqm'!\j$mPX%(P9coAi4(86qeOG\q<SLM(R3shN^Q=//eN'=Ys=8:7*ttRY+2,W?[`7-'F#)=<F]i)bllqhO6B\nq`%<5dT5?4="9f-"/=.+4\ZN%8NF&k=dNWgs#lIc3N/&GC'qG#0gETUAhFPOmL\"jUlVta8=K<>\oM-hG-]mX!_1\/q$o`fOQrSP%MWGR?a<#7]dnf*!2sme0L)(t%1Piki&Ie^dd^G/n61aafr:H_sAenb`:]Xa4k.3s[B>f[4+-HtACCdX4mNh5j-m&[=?i*<U[rjSi-k%+Zr1QP9Fu04]S<&,AMB;]J%P$u7=I]6sr^bCA<,2_&03KaEALA\kRaWl4ecA&c5.KekCm*ldmWq.D3GZ*:3[.[2qnuT$:C'o!7(]c\nB\XC=S_Rn+iqDeSeS]d0%Tq+F$3i\XbSP>jseBK)`kFGd$1)M)?^'%Dm^2Gr_VW6\tIlb'iq!$3-bGqkipYD"RXr7[6pE<miR8hag=h>7LmLnn?&,E]>"3SFp%fcK]+Kuh`KS,lcRg-PjH4pWR\#HpaGeg'526ECD8p(/-X:fm(jQM#?7&MFmAk$_=X:&NYN2oKGogB$/[(6W+h1P+@t8U-Zb:Q=&9%+]VEESe4sdKJusS=uLGIVS#Rgr!&gCpNm2U))M&Ccq(#fX&2kl^%1M/TR5q6(gb*bJL[V[0JXM\0\qX/=/OHbIIN^:Fr1KmEI"Vd%A$nqlI1jupT1.GKWBnTBP=It=0n$?DA\'2&YuqBJW=EdLCSAAu5uX/=cD6BgXK>0PHq7MhBMT5fU9XO&WFfDTe*3RT.3#Nllb7rk%jZ+rlY3_899^C*:IPjR/8\`PI;DK2'oP5<!T9mDGVM**KROP4t$'BCVN-VO8f$gekJc).GnZi9\`)\F#7TK!IeC7YE0V)LO/dB:g%o<5L.85BtS:WkgEF2/-](L@c>K._:)c+8!FpBDc&Uf/$Qh8PXQZf^kWaSbF_SOhpgrmDkDr5fMVS\]SZh1hIE"-\qN.Z5j7=k\:7%WNta1Q-!$Gl\$+i:5B5BKUB8AA^[k8+^.E6>U>1,&q:sBm@?^\Aa*=<hmX'j#1[&QWe<)I9XAWWMN&KRINE4TpuSJqRbbEiYrP7@%m,f3QB54Q4WaJ22I7F2*/dWO%2I*0M<k%/3C74)(A1VXWFKBT&<8Ya!3*5WD4$j6T/LN1P':irRee'B;R!-H';Y?Je@rkg.=J1\1%eCU3A@T<a"9\aA9/RNK+"TD@sp%;ne3OQ,RkSc-2CA^*#<io[!m)+cI?7%n6CV3B.eClG;e=%3S8.)A.fg=S?_>mo>54;tW^,aQZ%m-W&cF,iE@-+:P#9YMKFZJ$I5%Vq-IL7iF3bdV4nUuFR]IdWc\1C3A@>5A()(8hP/'i!g$jop8M>8sf*$/Bd-S-,(;`;,URNl8p(%oOqj:Uq&Sqf_,(g=q\<L,q,urYEe*j`j]fa1ceVd:3?'=WJ/9A8[a,CQ/BiAB#4:OBJH-m5&=rikb!rJ=ef%NDYF/oQt]Pm_Z@:V%B1mk=5GG+qmEk9B6<\[6=WK1<);h3cX\Wj;0t,^GkZHJQN*$+e1e9B\<g\p4KPBYrkYs')gGY]:V)@n.XTu=9K\bkAaOWfX?l*,T%1RC0u0LB(MEV<*D.1@f7._Ud9aU1R%LDSuCRZ;W;#GZ<BA,>HFb.#lNTG?:W[fcfS>e7>DSK9=7Vgq>u!0!m.X'56nkE\/=kW"`:%EO/:-hN0H0n#ep"WhBG,%dF79U@DAp6ij/6B$L/DWuY?^%+dSB/E6_\H@)\i<J4TE:KPKbqeP"7Kc*[phP@qiPBG9l0jZ[53^n(G%/JG5)JGp7`_BSY4gSn"a1"],CoiS>DNn6Et<?^pD03srFVDX:l2Qon(DrSHd:(s70)G][>=;bbrIpA$,0!$U3Z0>c.a!Zl'BO7hH%qTW&Fn^EYrU$nr2,OLZL>o-##I#%+O`;rIR:)+6uRM-&k<`V(Z:)n40ebXl_e_I3G[(6i>>FbCqee[C]7Q?.qXNo4d(7Cr&<G^?7%f!+m@lHsW/c.:(7ZB&KH$Re4.FNU\DA=BVf@jtub#rhJ]NGRYL\*MauXZVQ$e7bs@DC_.6K\CB7,:73=^Q4Wd$VC$R9GXW@/bWKk%Z^K85Z]3]!E^7pZMHePm9L5*FPsp$tMrXr5X$psoZ*.dXKj&+0-1s6<4gHD%<g?(+Nr@!L=2X3nq6^e%a_N']r(F5J^rN1MCO?:n%,kojtQkO6NSc-EgrY-^XC?ip]cj"9FBQr%u^!fsik%t:t?<mqC$WgKMTH8mb[Il#(odhTM)qBQ:r]4(I3apV5jMb3<n@Wc,rn_`K%,i!F6eaREl@8p:>:8p^$\s%q5CPkV/;kaJm6BGfkDZpaSdBo2fS_C(O:t:okHD]m':8f*]qmNr,lT)'^`12q!'BSe%N82h^SQfsl%+t5o29\4e,A6p8Ok)iDA&ZGqRaZJtfKrI)#?^R:G-'bhtT.<kibtX<q4P-t=,"=gRl_k,8RA%d@)SL!]17e0)_n@"7??DJ&Vq#o4%EHC-dSijbH?nddACZephT"'W5Jc5f7P.h,FN4Ymj>@OK]%)Yhg<@+BTBrEA\:Mu<SjcU]]+3EMPq=aY=3mC`!j4F5gUDQ&X#WcEl%>XJpjR\JsikgXYD.PZ%r&TlHX3\/7tR5^!8FJdH;$c^Or8'n61"]pPSZ]:^-E6Au*kc?#m1spn*`6_XWcridF/eUNa*C6TqrFKL&%X<Zq.EI9:Ud)l4@0S3'.OK99dB,s8c9<^I4AFi?brK4btXd88)R4:[g5S)h2M&rltQO74A9mfUOi6B.A-OsBV>okAu!d[MC4e,1t%]g_m7^GMI`omUM!*SDm3L>%@<^sD@`W$kn'O&[mdojDce19-6,?-IS'/NH!nk<?9^j"/jMffDgVYY.HJO5?S4F.^o6fikO0i2#Bj%p*"J]IS((^[e+r`)Btq8l'Q45Y9geD0W.[n%q2q'9<Z%^(l%`lDYd7VWS,4EC#'pKEs7[g+YhVD^\,@GrOQNS04)`JMns:(\UnMT%?6;KYCM+1`)\*,h]c*Wr/0$&^g<(CM\S"8ic9bHtecdQX017Y>Fum0$Sm8^)HP]M))eJX^>q3qF+HGp2P`A>JfL!/4!6\h)gXpHL%&@4&1`oc[_hl3j_EPg+`'o_G7I*9j7[hbZO+EX_;NmH.kGbI+2Zq^H+U9;h@9=eE#G"(`_W"1LcUe=o-54H_U3=E4B=tiZ;$Q[7W%Be>\[c_!7Y:N+'S!?$!W+;!;H$C+bLaKV[D;$.T!fm)%#"u2U7R7.=Zh$@-q@Q$_"fKi2DpmiK(kbDe]pTN/a3@_:r8:>(Op@MbT%Ph8\[OJ:hfU7^eQYW59#g9'3&jMNnH0n945:#/RQ3iJirjBU@o(<)<8fn7K.U^FdOJ]1;%8l'tIp7ZN81NY=UL_FFe$PR96aT=ib%ltG8\(^C!;Mh8i4N1<PM^mRbH3$::D%p7K([;r(ZDWdX%];Si6RV@Z$`s\>[((H='BbjlpeMJJM['_f;lt,I%&4YkkF7YdG]8\r8%$r5:0N]!!JSO@fa'rMG-GK_X?L9Y`!Q3OBt2Q]D;X783f9@bEP()a^i]>Z<VAmKEipM'^VX[P_7:4GdA(7CB^ZTFJZaGAT=9cK-6%#@;0DPEd^TbVfs<j'@^7#):.dk_?OU#>tM3EJr&rSiDIug%[Th#Xd('Sna%)d4hp2/2ARBq]n@D<Jq9;-18jLgHO-b`'J@&COo=R%9Ppej6d=1F2SM#$U0[U_mgMOP[T5hO;l'@L)0JEHVC!=MB/-.k%*c9Vcnp)s,g^:7V`ggE0qIW^_><.>Hu-(_;8[ge;cC0YL#VA3%4`u&=5m3.A&/%pRV%u,6'nYc(m)uPX5(fEUCHK"JB+#aQlrr'nDA*O.E>YT;F\B`l)<+b,h=5HbGc3ZaLU6\N>us/D3[.Jhj5Cc0%(0i"(:<U[[7,3rjRE!-YI'2Od\95j0Bsjaj6T#k'_n!-iQ`9<+C@Q8A=3a=S/JAY-[HjlO(HYmp<!!IlR[58+nRBdl,3oX46rF?B%lpM5_b^iQcD8_daZc\l>*-rHDkQts-O+UpolumVf4j+jWU@4(m&AMm((Y3)i2k.<fR[jjVK'UVi@eSa`)BpGqpqpd:%,p%MA>g\=%oP)[D5db-5Q*!#!qi0?miU)f2a[Wm\=P;tMpb:,.iA/h@Y2LO>13@UV0WA\"1/ueU7(Ct(*OHl7?/"_J)cD_qdG@j,B,lY*B"mYI%>FF%l]q[Y%=G[ipg)Ma(aM"YFr3M]F<.<<Y&=#[.;Ya$WR\Q(&<.6X3Nel3)B#c7^`^rS`h3oNcn(&,6HFKc-e@RS,Uu"*r#27@u%<?T=I>O75.n6",$TtrJ1(lMDGH.srEL5nUZoW+?n[*D:;E-e!OiE&A)CsIT=;^e04h/[A+E&t]'D>YoXE8">.32V.u:cO_1KOp,9%EhRGG0U/qG;pfRP(u_;dKU5d$6H&eXK>lm9FHV7'm[HSI.]gjf:S>n^.hLamS/c)'8;8Q]<\[D86J1oG&ED6HXBZPqrm5,r1L(pl%5)QpH3Q)3(`Bc('A(EV,FI)'>VEk0'LBj/aR(Bta.F;GXiKJB*%15c0Y9#Bip^MZl@T)_0GGoad^lLPi0pLO\-e,3_Z?2oL!?4gZ%O#l["2F8k$.:gl<W&'\7BF*7ff.,E)&lu=h9r#NfiUbKndDQeIeUB95Y^:W%$?l;V'k-iVI][Bb*FX_;[9I7&[]O#Do%0m2Fm7m>%e[0(ne;&Q_Wp(n;@(-Bi7KL1!<Y9L[3R++a1n*(N^?Q*0AoVIL&U'A*<J4X(oR:T0.-?]k15dH;=@Ur.X#m2<N[OK%[qVW*_jBkP%AkkF%epJjIb^Siu?[-D]9hVM/^!?HVgN&.QT@_NiL"[3gUh'Br_E2Jr`1WmgS5'W,<Z5=pDE0;p`YLYK%U<nZ'!/nZd8NnlVTSIL%1prm[M:kI;2/tWJqIQ"kbI1&aVECsl]QC)Sg$Y*e2._q,Z7]9jb-Of(ib[mVn6Nuqas&KB5dR?AqXptT6r"+;<E2)ndQWMXoC8e8%WYh?1ms'5gIa\>b5-dVT*.+!?G)9<9m.87XLQc-f'm4+[6[..9UZm^qZs?FeJ6F@ic4j`'NM\Lp7P/\$/eq)n1c1t+2-,X41Q&$8%g94a6RVos_a#.[CZWOfhXO]kgF@OE.b=5Q;4IXQP(\I"?FQP+E3htquoO\3+onq.=7^7&Wp=C0VBC4H[Y%Tk[fRu+Pdi#80WcJp+%'MW5Y>0V4ZQ]J""MP\esNiMV[l"E,kBj,Y^_A]36N93oSl!6H@:'$Z/L8j:0l&;W_]#3hrRa+cXjiYtmlDjJ?MX-1t>7k<SUZouF%[bb[YUMU^5o<0a7cDUf2a'f^CUZm_N>AYBd:GeV>/=g3sj\!pB7MY,Ibj*St7^7%>3?M=]VDF++e'\.5U?RWRDp2"N=Z2_o.$i.L%k$K^/:>7(CCk=Gue1-!cbG6$'.Y,Q/7lTZqmMlGZ%GV=FSCl1>R_r44-$D0@c*Nt?A4sreO'.hABk6Dn0^Hn`B-)u-fb]99mApOf%]"M*:5%]EK?afc:=dQ5g/aZKe3U7=&0"2BP>BS%U!\c^tbQ:Q0`Of[!@B`\\f^ls2;gZ*sr`%:#Ph<GYo@2n1=QYRkgb%_![:G^f%_q5*?U:Z-W&WP5oXdC]`@@B9Ea!QmcjYO_m`a,1$>nJ*Q\T9ci0O-3S*MH*;7!FY%ZSbBsB7S*agn,?TF19f4E2S#o_(t1YJRiNU%k3#^;(:3\0.eqOV<n)]IIHo;_fIE0lL?;i'kY[6!=Zqkl5,cQa-pc[h0)-9Q;"qo[!>omU6fT/cAu7d$1L)E$M#!.r,DmCX4*):J%)K.OT@(O_Lr@P4>UcVijeJc,pTX+696e2$.e%/`@(rG$!G"CB/8&'=gY?DjRY:$PbDq*01*6E<0N_tLP[4I^nd3!PY)b6K*=IDn!%SV+^]7C2L\k?#CpS$hWng_2p)2+`&F0,%r0Q"e)LP\mV^,YsFYhlC<:_u*re(l=TahVQ_Nr[ae9ee6W33pgJ.Ls=&N%J*[IKAknG%;4]BZg7LJ&Gfe%Iq*9Z\EX^J7%qIB<!E!4E.064[8VjkG::IFI4LLKt=4QENJJS253)fd&M&kFn"4%=5`@G$md&@3*,fe`XJR+"7%jB<W<LLdo6L-(=+eKi2klL@90iGL60O1+RH:,D"6(/L`:b$1DFbqn-,SgeTG%!RFG7[<"OTup''-V3C'\bHJRNk6SX/QhYoeRWed%G3;iKEH(=oVNY4]bYda)=P;tj[Eh',5#+a=5)'j\X>N3)MU\te^fmg.k.[.,'(,")GXrS"`Q[XN4MKWb_PEACf,3C?_kOM+86USV%CEZ%^eW\ss1'[RLXMU@cLp4j]K+SF@+sLhdcAN=Reoe>[<+Vl641AF/+dQ5s?3t[ulWd"=iIUaOW>b)ZEQ'Pu@g&t3$cfd>miTFC%(g"CdL=)tpc=1%JPJu!6R]jdCCJ=I.KDaT5OiO!4\E\K#bUeX3@U/O!;[7?;,8oWPD<W+2'=*1!H&AJO(g"pOB:80b(%lAbisM>\%0&<;Z:Iu/OdCltL0ka>qr@gpe*B;m:8WY!Joj,0sDs\Kfi$Of+X-saWGPW*<UA*P:VB[2L&&6ZNA(DrCm$,gY*\LHNEb]i6io+.6%aj0U!UgE=CH.[MhmAk031j>6'k?_/NJ)p6<D&?SCEFI:/@V^<5m_5(miOt[<$=hbj\DsGrjXQPcKA<Ch#]K#V0mbed9iK$K;/'8K%qfd=ac6K7s9agC_l=N>,nZTae?!q3mW69g'237\<!.T$dNH4-IUFVNt'3h'sk\X7\PP)21%?!\+>fO.un`9:PbG\:)LPFbND^F[\%!"N.ko[p46;^BUABqAS7fh\0bg($_M;AWOX-fm6>p>*<#1t.,ljEUClm85I!39iMtP7]F[)tN6Z:7_6WbPcO&A[(#o,pB44qmtUV%3SWd*=j0@d/fk34'(bmj_^2U9)0BTZZLMFF)Js&61A)iZ=__7^pJOq2m[V9%E2kMLJn>@f*L-`\MG\)rq+mMNV$.ZgdsP.H-Po_t%=q;YkH"gE-%pFoFZ;?l=U,_O'[@MJt>8OtTH"gR6bq`#Wf[W?&TP%>afU+73VEBOOX4grSKKIqY"7L1Fn$Q].rjikAJ02Xt9+F\8%q+Ib1"-(-77Wtm;m:.!*k!X-r3S1jL%a-WI!,<2NK5?Ll!95b>/8B*Y_9*2aZlIi@A=!mbO6KDtPG7KrE==\RN"YJ\FQBa80j$FF%fYO^L#2GXDbZPba%/hd$QA=E\1"g8X.RAp/BH.<3(#-)N:'8U9'<>'W(/2oK[8n4-9Q;*\BQs*c!\m^`,o3cLdPQ<Fh+:R!CUV[$%[S%NfD]T1_XN9OtJD2T0E_;K-FFIVgLrUrm<fFn;jtqu".^R64XK"me(TY^FZKO:3(U_%[k#Rb4+D)_=ZTr([4-tjkbV#O564iIM%Ef%>G@<:\[,R2V,K>3F',23r"f1Jnj:1F:kV/`Oa5Rh*P@K74N-SLrd:PHn`6ilTM?kriXR)R9h'VNnm;T4MG&I%AT#1+L8Aq;?q%1UK)$eU5Ie5iVmiDm3F1aL4rr`f^YmNFl-BO+I59p8!)iN,67oPgA%j\#uNSAFJ'%Bris:+3odCVI:-2BT\P*BI@fu8br")jmOJV%F*<l'W_*#&IGi_?PY]S3\O'1X?'bt1B:1,?rNQY<2U1Q#XlVT))p1HQ5=^i@CH<EW/?@Y`B1!Quoip5+G+$!lEuiY=oiq-+.",Dd%lN*F-?l.&QB/31Z<khYp.p61CCNGmWcXA2HrN'9?2;E5+]RJE543l#1o(lL9/(.\KX69/^p1KOE)CUEH<*hffd'P"k;Kb]c]RJH,%Bq1`&n[s=jF2\j^<BO72H2XfNf-\5[EF(kFR?to=Y+F7+8Qj&9rM\5T\j=q/X5?6@Bbl!m(-@(^ft;b\rK=J_XlKY6m;t##4s/[^%1%/"(55Pmr7sXa.QFoZWnN!@0UKWnLOk'%!c#lUQ_O>Jf7J$AT.;(iFT>;C59BGh&B;fq.[u1l?QIjGDX.M.#X6'#\cK_=7Z<CR!%L#S)tqCNMK[V0o`WGK+Q?9cX&cMG1#^'sDd%^"i:kP=lgO*d8#>cjOJ:K>RVnlU$.o(jpVc-]ZDYFk'4&L'%pUO2O@#E,[4QMSc+%H2Z;,Q*t.d[45X!V7_9.=oFZX,+-^B[u</XG[<V`=pP_C,9NP+n>E%/I#F3IS2>,Ff5IonI(CpJAbB:$6lg\^58LbASCPr)B>cRX%_DnaV&lE@9jRk;:"V^8IlPI_0\,*'u:@e6AM0iMkY90gafUB3m5/(TUV2Y!8X`gQVX$s^g:$KVN*.FToIYPI,:<lUA.'K8N>t_H<%YEmed3ielf'jE,jT+7*sXF>oe>V2)icWY103Jr*fcg,4P\(!c]>qo,r=oE1/9#l5U<q%/8+KqEF?ms&AXdI_d=tk&Des"]]%NdJh%ej7_8<mL#D]jjFlAIWq`X>e@ZUpPlhIPShMNK\F18PA4=1UhIpm3O?Jf?ZLYT1-3G,m%Q=O!$'j^!EZH$nio4]0f9jS:PDK8S?]+%7h!p"*UgCEMe/GNX.Zn0]mG'o*F:5&adI?$A!VZ'<rqG+?5kB`e7kWoqf\22]=kQ!?2i+YpT@"aOge'dA)I!6r'C;C_<:M#Otl]+%L+Bk<_s9t)OL[O_me/F3i5,Ef0N^R<g>PZe,EXLS98?dJjlM<!KP":j248sRW_\[-mOU&KE7_]`EUNZTS*0'dRVhJ9BCH'9]<1Wg%h!O<9S%Hj%MqlLppF5hlNSJSna5I'n*k:c[msD8;nb>5Z1S3Z6''%*\HT[m2VGEDX;>qda<`:e'ZL`->4%S_Jcg#e:ORtDR3jl*E%`uCD4mD1bcp'S(6o:>XA9PX1]U_OBrP\W>cQ[>8k:_!Za3U/_n_TAhP%noR!N+$X5pUL)5oiuUbY)'T+5k_KB'^:=dgIo/2^"B/.%"XN5oN;4QIH[F_1+g;Lt3*\-2Ice7!*N@O\E46R7\%1i+=2)3qF-Wk9D*1DG[7MXC*#s8<glI3YYToVo-F$PH'-0l?LV%eL9.-rB%)F<pkia,,).?fW&P.e8l<q".DI15=U]Td&r)tTYucO?B#h7J*o`[6GmT&@YlbC`ADC[Q/kqhecC^hfLdQqB/oh=IRaRRf6*l!]In%<N\Qf:3*7VGH\hla>5@DNfK/ds6Mt:hu$9J5g^*^PW6+6_h<h_Hn.m5Vh=d9"File-6,8(Ofs/"_lnj(+AAeV'VJ=<Y[3+SB1Vl%%Ld^`F7"-^+/D]/)\NJN:B/+`paqqXK.*k<m@Qq>t03m8pbHM5>JF\4D]k6ujK>WfA!1(+Z!IIY'O9`.X(KdbF&)!^-VnAdB^68$H%8H%h>.u-CoG3YADjfn<+6u^buE46a^.mp[a_;T*I6#f!BT>JpcJ9;*IY>!DC't$@>MhL"53ImaB@E)#R1is&l<?n:F8Rd;bD!d*I%T$>/C)[)S_4fqc/h@(TM#6!9g5>_cukehBGT0b%3ITL:Vi?CTl&b@G+[G-!"Ih]U0jbnL>[?]0bG*/amQ:`[VCTi]g6]G/ElPbcJ%e*OfneQD"!)ADfB9HdL3m_0LOP,G)19l=o?W(G&p"^WYWqHN^M_qh>>%-VgY'(j%dH,okUAU^+K"^)a/RZTeh]8@_e65[`&VcSl&%gG$/>TO.rf<W5iX6=PEE7+s^L=45#F5N<BiOB%'oIb,fXq;>]<;ENq?e=H3YX2]<k?g>m[6]cZDKEg^Ep>@`-/dZ/]\;tWD/GIqc%aoXfU/Zhi.i"BNUR3gLEs8:7L>\3($3)":W+]82.mZ9Y[A&)^K=aDBQhgb,-%$ZMd?ke)RP);)Fd,"5#N-fr[R#d/#IE3AaVJO&h%>gRQ'o;<8?T7.[nr3>i\I_s.COA$Li[>4/d1Af.$6:B!CP8!??:C/K.);X+F-:jL\#ahG%,81J.aS@8REVT\Ye=i-Q;"R'%Y@9YZ%;@iJRXM^r('*g^V3XCc-'GtEPp8IK[SSP9='t=_iDk<[KEQY>LE$bOJJB@W"J-Y6<H$k(099mpmV',;=5@E%s/68%r#b?$L(pR_6%&a2^%S^]8%pol-(47?;q'EdRc+*&`oj!]H]H,k"A-f/oRDZ"t-SNQ8:1$VgOhVC7^m^0KF:*_W](\XZ.GcH];dgEY>j?pYZ/DkbG%PY'"Vm_dZ%$2u2o@]X@F[KlYiHn5+ti]>?.!VG7kkC_[4B]k.jE=PJ=5kqMNMr$_W&5OQC#fZL\;=omh2l[H,g;d0a,@3<1M09uD%%_,H0-dI.1\I4SC[Jpf5PH9u5<V%DZ7D;oAJ7_Y-KV9Xd>-o6p'ZAe[l^O.+(RmIlK#F:Ykj=t6$h&;QH^mYn.#-JFm\G-iA1"8j%NhV0q0&BiCEf:]of6p[JAk+._88-t$)XSRc+)iTW"sW9o:C$gFp8B*HRW&CiK]m-^F(.>eb(sA$49AtE*:T4jk1KbhW/opOGFEf/%?;tCJ`N(-N']'o2Pdld`6l"\&"(pq5`4Yh-6f9Eh?.dLnhKr<:F/AJD65uZ.PUHk>pYE5UG_1&-IeRh'm5FEo&03M[-)8+@.`D&C%!1s2G"2Xa-"NXEo%fgo%WmP_G\.&/<h%%m)/tAT$B/\H+S$2K9&t0)b+p0X^m2\/t'X/eEUG$2O[c:Y$B$D18W/"hGmE[lV20nZ2%M;[j[e?K'Pb]QP^i*PXu"eN`GeS5L-ZW5pE;o&"aT7(*1FncfImRrKW:@L'(J9`SuT6A?OO^Lt8@*99mL$k6_o]eXKrhl;Sas`Bl%!QG?o0LLPU!XuuqJ5qO9(7kgfNG8X=29Ao`?]1-`3[Ro.#-hB)i8?ZRLImT@>,TZn$c&G?L3rAOqDCs4#kq5I@BdeM#02qcDhe]c%EhgP6efb%5f+)KRI-ZZbi.,C7HiVsfZXC-Q8UHiQ@RO9CU%l!=)?'F$jcGB*JCYY9'(tDePa1B2kJ4-bOj<SJ$Rg:(=e,N?$9g6D%]^XLu?_K8s)Ya"BkJ)TG"n:FJJqVqurbF?]oD\Z`o5@-K!#mHc_53N3s-[dGD]]=):YU.m+/,#)_803QpUdZBpMn[\5nlq<q%E1h%qa9E.KUHrH":Hm?g2;EjOnRo;P^d(qCAS/@W=3spe0'ReYV<t/OXio5[;&ihRpE]g?'5";!<0jL9]@M8_V^]1#7d</9PHrX/+ofG%_=-'[&tDGE,cd97CbT=:YG>P/W9CDinBjIe/A4\Ud@">.!S?/Q9AA+-4G(Y?>)3@a!7CT#*qrOX]JtZ/d34W(h7+[+H%9OQ%j]K=%JE%@^i;'fej=>r1,FM'g_A[C+kBo]&E0P)mMh;b4^Y],G+m,UQF=/UqRM9goD0RGYh8L,>N%9:Aq4frROT?GeC3:=@iouQG9LuKd%UN_+LPepi%/$Jn==[3R-/Cb.okGk`dHKC3MAZ#7Lk<=9(T(`!&=5Zd+<<6J=%V#U$1s!GPIcN@t\MD3=!Nu[L0GXs-+V^fW?rZ0U%Ugm_P'\PR"eb?(;GRZq.Z=H@8F*<!A,YkP9o:(9!fgEQV2m+^6c&MsckUqYl>a=M+6rZgOU1$:*ggZh*,9OT\LQutE,D$(Q?D)PE%:Bq<A5JMqFIKDs3GW@cP[,?Y$Rk*f+;G4@sWV*rb8kau@@Z^e;b(&DsOJj`r-(taiX]\a`b-2Addi`5PN_;i>QI`Z8/&hhLklSN2%9pXm#1?%5%\5E(U.0>PYlr"jLnL@@*^+2jO^RqBblXYNumTg^H;sgWYJS;*ERT5%I#:M3iWAO$j8j7,Yn1T<0He[F*k?[udH"AX6%OIW]uW=i@PV]sNl,uOL`;\=mWqbK]VBpA!$FS8P=IR"$c+I[Bi;*:ai,PEPb#V6;_aQOY@n[G8bM9%1T./h2#@eh-H^mmUM!7>+A%dgGa(*EWINI,=DR0kqqQ,1$E^T@F_(QM8[4oUZ3;p/XS5(,.CRLga1Mp)"R+f+Tn5p1KEsh7<uGs4Da5]f'ZtM[=hB[+jXO:+4Om%UUUU0"\lVU."HR9?B^V)M#2iRb&f#YRHVig6+R>X7HD4'CBDo"6/(;:Ab6Bl?U*U="]*>k,d_MU4LclY,S'Pp?u2*hjkPHJW^qa,%&j.<&0I79EF4ZQ,N1>BDS>B<jl[]??.=fVVSN1$+JQ'6'11T$*b_T+Ud#etio,f%^`Ek\P0aac_3T](IahdG`$tr&tHVe4/E:5qa%'q(HUp9LYQ`"Flna6OgPJck2PK1\cNMZ(>a]HU_9E0t:s]p(*F6"X7JIYE?H1^eZK&dB=f@>50&mAL4/]=]eR7eQbS,\!.>ejd5Q%'Q%8ed)E_+L#oi+$_VW(:T8&BDY[-O!F:,12)/=]JAb^&aAMqP#Ri`-&ckpjlYC#q"$4mgfjt]^?^KJOgG:7<a87IU6)pKmGeA5m%>pW$M(e`hb),n=Hmc)?uB<6u7O1pKSZhC0J$26Uj-RpAgpY>WVI4cGMRZ>G*">gM2&\_e&qOsdh,!IRDWt:>aPU`hM"jAG<Vu$[?%9;29l,P_03,]]91NXnPK:C[n7p63+uEtXT&I;]=0#;@e!Ej\pH)t_co*:rM[_Zr%Hp,9u%4ZnORM=t*lP"0t.p8OtCZ4?]oNqqOL%s%;,bIo5pXal1%fbtYK2Y<CRkVk06%pFodFB?cJ.%k&Ef%HIV[T4,Qp<M2R(7"_n0+bSFkNK(Lu-tAGg0>bhjNS`.?G^:.4p98!+%6;n^V+<67g+F*V8mgKK,Vud%VERE9GP(K>d\Q2H`-:^SL5aX]?a?[8e![4?>_%[%3iMFjJJY8.=d.+Bb6iqtiW*;D2o0CZT+NpBN%,i$`C:Lt(W]gOdY!%'4`@#>1up1DH=8=[?fQLI/,nS/WB0$_]1@#+/Pm7@0k4thmmaf5\*/t,aiZYrhIc,d=[+%S"5k!QEg77`I.%p3iU@Dch]3-'oMSc$UX"Cq3tN?SR=aT_+t^Jf\^4!`J9eP/q-k<T-kd-)5?ng=C7mW'Z3)cDo5kTZ5.93/ip\31KAh%7[:,I\.N3%9rh+b5n?Qk.s9<4+NCG&B"eMOMLZb4$=5?FfMi[Y/VKH[_bdSc#S+0?R+7q/i$ESH]PblidLW_Hr!N"7jdWp<f7t/*Nqj^SR)Q$%%7\#P!QrCfqc#Cl28Q@b4=)_t9MYET\4q3NT=/!L97ELhSQs[\7-&5o`A'\<uZ_2QXK,*(Q;gc<D.M*r<S.bqjMS'AX$7K"jg'<tb%\ediKDkT@.=6*p@52ZPoO_lNtZCZ%>Q<fW0VfLrr-S"rc`3-<+G7mKn_Q!#^3b)1;)6;uX/uECOn4EHkIobAKTmYf/]sT=nO/t@\%9ib=$m2*A[9+*q@!uqi.:Hfh2pG>obC?Ue`3*`6LOcm,fF05/5l7hIYj:*Er++bg$CCSa@:q?32:HIW;qCn4_'WD<S\ru&grp8Sr%f!pXZSrZZ_gRZL1A+PcB9R-TNKdbIO*$\U"@/Q('Dn2H-2/K:K$'In`\\D+a]s?QtH),._k?tV%L#5hFK7s7MFdZ!)b(i'LS)SF7%h^qu%\ELgnchtIo"N>RXnB]hGbjFmPUj>j"g;d(H7Hg\-O2jA*c7HCVLnh)N[Tt!gE(5_sU978H00;Tf\Z6h&Cs[hQ?GWhTmckd9%UM&1C:jnl.;;)PtS9OQ#!Tu'C:W:dmpGFe3Il&2glo0jUi:Tf!lYA`Uq/lUAh4&UqT*EZh<Xc:"984;a(.Y9Uo5CNd5.WW)$eBOB%M1^-@4I:G0q^D%2+0XLsf(VrY!<&_g7)#/%DN^q!CZeEWCKt0UA%Ag5>ohpf?.&>?Xq#Hn.^jfUeKHQmpXbJ;L^.?7HGUu=LT<!g%-[eTIlIhOt$71$L(AL//>uZ3$1[W6LK8fMJCdk5rFM+r<!GfDpA,+?3A?sJLC"t!oKTBkSjbJn]6[X2[Nm%7!gN/e!m@re5c1I/Y%Y9G#95r)u":F0r/Xil7Qn"6282$l>?(-u1&R2f6pXdYu^]lPA3gL?+D2:9Z%7kCCa2ZBAOqhdG\CK*6,2Im&:M/@#tOSlG+FC<TH%qH^J;O8,"g>R_`2?[0//NpqcA!u9Sug;?:&@@@>V9IL4>HXaE)g_/IIjWm0406f/a4JMReZB'?68Q&<h?numnI21$RCF8:nq99lW%)Os?a3DI<-.JeZm<$&&C7o['P)uSRMkF8*9*:Ar^)*W=r@j0Fe69?\3T<]9_VhO_2*c_4L'0WJ>OdM2a&,B&!^<;;3T6]]Kk']HD%$i\&7&ofK9I%Td-HEHUu0'P,48bOm/Gb3X=#bn;$o\g3[p(6b#-=W5mk_L;0@o@uklOk;Yd4%o1iIln,!B4G1]k;"B)MrVJl7dA8%aY8$,8#+mqM_b.@$[cXN9-(T36)b0U@T9=P1iK6<(=beHhI1N;G>_1SDr/90TGU?MgfO=Go/J9(_>$T9r0i$'`6O:-N:j,@Gg6AO%2Pm%=*$W@'?6`l]S-Wj(JIp@"@,:gL7UX??/AEIYM4j0i-5Jq.1B=ECE0n2m-ClMbZZr\,p(ean%l_=HN1Z!!piK$j'ZVt='ssl_%H*h#?Yg?ZVpQZK1j^Dpml8*WIg[:@KgGKD.]A]"T#'J_D6R/H8?Vn_(1bWOTJn.Jket^Xpe\((l,GKMN<uL^3Oi\r5U+@Yre[+ce%*0;C9'N]_jj-RkhQqA11U`R"RLq)t*_M0D\$k"Xm]<HkWfOBseb6T'eQ'7PuPC5:]>2DVDa:NL*O:j/j$Rh`UFeQ(5^^Y;Xm953#%6>c;p>@E?6\/Q<n&-Be1&<laH>2/W:m_`4K[E"h;P((dt_!PUQ8ZjN8iVkp?Wt/i-ELTjZ)Q<i-_[;7mRX5T*c!akJ?R893j80ug%P)uVq:^.S*Ln1/kiWt!)/0RbZ]"5M[,E1>PWrqGW++/b?8Q:60S:a?pbd:GgZd<A;(%$bN"7G6a)4"@*G>][=N0M8;ZVT@Yp$@j6%_Y]lc"7YrpL%jC]fl70U_sa!bSgnbkrI[kuQ)P3,f?b*_YL7(3,SRuC]L1r5&A#qF:T.V3mO/aX*jY<3\7N8XMq&mj+;QBA0Tq3Y%/M,"lSF)R99!r$"Xoq_`d*FmJ.F"al?hoX,\<D\o(4GLDM5.]PIU9$n+)fn(/:ngOMO5/>'4_+GfulORfLD9eC2;'t.)E#A-?2T-%*hCM@e"=G`),ejYgNW<U6`E,1mi;jt,m.m%4,E^^O[\gNn&SZBRHK@8a9^6?L7u9`Ii?!$?<s5GirTZ1BC=]QDpKI#)*MEXfcfji%bsH;H[Ttkt6q@h<Kb3W,iig5##ql>,[W&7bc"[,bQ<>3&%`Ak<0IDCl)T<2OGDBMo=JOM7EQh8K0G6ICdo@0;/EQflY`571"9U04%*SS`#<`Y5\`""R"NiX5$L`OJN73a;f'g&`!N%RuUr-`M3?t(S)eHE01carL67Z`o.rO(=>N$-:tfbh.Y%:pCr#8+KmcL8QkTs\kC%k%u*l8Ai[;^/,I6A][T)!le'"5S7M_no88P&kO0.bj[lt*%7KkN@G8X6'N'Cq"]SL2oXI65XW-)5q(oifV)-q4$AiUo\khj>K;*?%I9POl9E4BI;'[jt+=aXYqsO_((7E[MK?7,<ca_A*LaUL.qNfOKJ^Qt&)Rr6WnNBVU(nt*1VpM#$I!S*,!)0nWC%Q==d0?n;Y&e=J%!"C*'1^li6FDBpf(CI(]ai,\2CI\E-*<VO7*n/'P-r8ibkGFA[A3l"WkG62/n'!sd*)?b#_Ykhm6GuS:X*ll5>3/tF5+Z`Gq**T3%_%Enp(WG1cAX^2mG7P#adC];JVF=t&g0*/datl/Jk$j:D:R'Q/[-(_VZO.+P)#8[t_Pq4-"'p\5\]E1UTE&i"qF'dXl[is#&./%U%.!eOQ2.?bg8Mg(+&%.Uo_>['JIs?YD.f_:/,07n.#_CX@#a2;kX%l"U*=<oGqIs*ULJn4A=t>rHHoMj+>b4qH+,0j<a6R/77MTr/%HqZ`mU+(V/?$LZ`8bc/.BAOI?))?IUj3CUB;=/qMN[jN:Rr1fp(X*e6'tg,gIc$L2I'gN+Q5`1!o]<_PG+55[X'XP67n!Fa/JD*)%96*:UbU=dnJB#q>A:>W;RIh)?O50`*e;SQD<S\1"U5R/!5>emW+u%*<r]S5<bm;I(NFH"pB:%c?j>Ccfp$p?Yn75s3Gk^*nn`1T0%]i!6leWhu3r;BCm!BgP\5*D.Pc/#9+lC(;]hBgYDeFu5&3HUDXl"[S`+n.<HN3?\MB&]%K%d6C:7H%NsI4(!%kjSW3m<H7]SasT"%nDX6qGFE4[Jb,)@]oom,iK#0fJf:2fH5A8[$kb"#j&GKa!#+<3TOjpC)6l5])0)HrnT79hZ+;mL9Wk%bW(]th!R=3,^>b7t=70JX%k8_eg\j6gOo/jON*u7oVpjYaLMk7WK8,p1O]$dbFEZ2jq'jXM](Z`Z%`A[?=&Mk)>PXn54CUhRZ.qSq?)G\o,[@7bMCUhRZ.qSo)%;_U>qCeaJ_!a3)bqE+81!a1k&:%FDmA5s[=$T$R4Y>_;`c;Il])*u:WJ6m]BN1aYfC+J)&%+bNlFa8FScV8b`rGV)6.?LChoe"C,%%lO?$TQRQFn9D>#6]X(-GdnV`(BIZOYA4<lMo91>q`pSdXin\/,J,V:14P`,Se<0<-hY3?Xt8XbilqG`e;(.[I2V2A3@nsh@Ds*P%-!Lum'NqlOpHKfRg(Cc#\VLKJdO6.U<"St_JMT[JbhMIkh+T"q,)rK__HX2ndOPmmkrD%u4eg1MPOtc":bKJA5;T5C?nCfMQTQRl%/[5_oC8V-TMh"oGpe]ou_PgAo\?Z4RHT>d/^l*t3KN&K3Q46sjdEk7.>@a^/nSZaG0NQoNTCA+4qZt^V61B<:(AX`d*h$j7(jNSu%?ttarU6-".!O2^5J!ueDi>q>3g9'-H0ISWuIFS9:n<L3E;^p("Ta7O9.]+116Op8)6,epQ3/i;JM?JV%Q9/+mi'X^t![oFZ+sadj%n]hq@Nt\lT/?-I(]"LO-Tik+;EhI%'=t*.OW'J&-K<=X>TfXpk?.Z#X^#2m3]mJWQEpP+/kphh9f!2^8=i.G1HJ5QDkJ1b66AYU*%P#%Ai=C6N$a]G#EnnUnt:Q2f80V5qIkG_B]&D'OGVbUM`O=D(=4On=t44:>E@Wjf`IslXHIF8Go\%;/`<o*s,4%Po,*B]qi-DD&#%Zm(]Jk&[b*0CP086RegB<;.$C'<o^AeEreAcW"1jIS+UNPLf]o:)/egiL*EKA3bnrTO&CQ-,#5BgeVn6Tsq-^bnc/=:nL0pl8D6(%;]AahH<U8$n\&FUIe:@<I.)k]a?49?JLoN>SAB@`a9':"_KH[8!`_:7m2TZGZ<jG&JQgu5@^lo8K$1JU_f`a/e>G/Va`&9)>F3AZ%Cfc1hCNYBt!4":3Ws2E(mG//W=YlFt!K>!A[%)J/3,%5VJ>[$144CZ`m`Cgm>Wr:3:$r0;O/[cJ)Vkeb?;fFs_8*=&6.R+o6+M:H%&EH+JU.R=@Y3s&CM:Upc/rcgOVGQa:`18;U=$rIOf7/o*.P<o(_u(807)?j0M??O)Pm.CNmNpR+ongWc/::1Aq&Q]q2mqhbY$^@;%@/D'8:1W+cn5UUA4,=#TkI".TK0"=dF+fZ"Gkg09<m87LP7=iT`c,IBGO]_*aD6?OF\WTh]j23IgQPR5$MOq$Qo@!L:caSZ\+Y`3%^\?Ff0'BW-`aYY.RX6W"@W4<m,.P\&?@CHseR^6doqLA'_ii#$c(6oaVf:oq0t3A1`1OmcbeH1J7O8*]>q>;b<m8(j[d<\d2teG[%qSWKJKmn:Zb2lc/4EVc5+has*T%]#t!,^9Qk>b:"c5e0n@g<JV9"^PP+q[f&5<(jUhUXtZkGrQkq@s5AZ<!u2,cht2:eP!-^Rf`&%X"D#o@D3Hg:CL=!K1aIlpc";`)F[G+4<l3rj!hum9_fFm=)PeU[e3Djk0M<b$+Rl?l]TnXH\[g<oe@MUG)f)G4ck1d4QnFOk"=k^%epRh1d4YiFr;c]N,mqGhK3@X'ijg,#%qZ1ub<4$T)c7AsVr;HPK%]je=!UZQpQFZKeWu7qM[bZIB.?S]kI-DrH:HuV?h.%?AB=^,%%gBpu`k60U[WStH[b]N^/NhO+&XLD*Ksu3o&?bh&.D""GBXs99B4(PmNnP0;=8$fh>$!;U^F\HI"gWHe;!(.0Bk6(#lfj/k^Q<]0%rZ_],m1P@(i4^?h^:]g@KMT/(oGGpJ`T+abIB`4sM_sRLajEJO<=ut4n?I?d]>Dbpmc<=._hIuc\.OBA:PO8oC%T/$PY^-!9*cJt%q6d:fTOIMk5"S/Lh#NO[Ga5,\J@QZihB1Og;UP`o8%-^Bd?JL=LIaqVBtuDKZr>[,cN!a$#6.2@8%$^(X2j3ZoJ"I\L.t#G9`kp&%h)Eh(,3h`8]HY@1PmpYKR"ZTM"s+Be@hF$cfeqLpWHZTD;@;Ge-cju95.,V:2)At%0_>qOk"7*a#db]k4mc[2S\[KGEeuLG.I47-%1e%&XgiN_e<?.Ts=q\MYHCci+NO4;b$(fWCh8i1N$Z@r`C=,TA`pf)V&r9#(ab<,-SR@+uCn7<Jf8WW=^WtkW?)!HV0[f;7r'j3i%Z]>$&8CH:b`UEU8&_k;$73fI&.Y<dh(UFp;nG!BnBQVBmMARF>Q'+\:ZdrAQg?Yqu7QSAANb.UPO\RT.GsX,4)Vs[H,8M@PSgo=(%H9tNW#kJtcSk^S,ALna6';fJ3UXRF8O##0EVOgTI"=%aE(ITL=?t=LKa:\Gm2,1.r)X.AL_T14\)X.ALAWQ;Hgd\,Vo"XNLWq!T'%ZY6-JN3F%d;]0?K`PZF9Rh7Yq8!U]PB&[Q3*MBl@H?$!J[EV7i`7Go.UU(gMWG`5H,AWb\[D;ntWkJA0X[[maO&?l:TY/-U73`jP%p?fcDm'3O'U]isNnu25o5e%6Hm/DgEe9s&71L%\EmII=k%u;rjJcd7+@S^=KnZ"&7(G]I'YZnek&Y!?>?_<C5OV&OSYr2D\(`BS9%\H]G1?HS)kpDY!1kdb[+nr_fOeF'=$;KuZ^0gL*"I6sl-\"ftRP1CDSXkQ]qXgFuuH+UagYfgPA(/0oJP5Kibl<7U18+@lr%\ppu%GVVskRd69^R%%TtImVB8YXI#-.=N\#:^j?l^HVETJ!?m@e2)*@eYRE]V_Q(gSi`A>M8M/m0gX6'Pn-lIEKV3(48&QOaSB2oZ+jnq%SW$?_5lS^6^%^utKf7UX\W[31/AB7"?U(B@2VG1A'1UV7i_M)C/,03MI=IhQE?D[X4C@pCC<GuEiZ93&`.Oo^P>gn&3JEg_:JSG6%AsG75:HMoLB^0>Ab+C?s;+8^rjcAT7'1qa(6Cct0A=eDFe0Y:sPSDu77`V012`Mh-U5h5WhgJ'gWT9""&\j73Su*WM-]RadXZaku%-`>bAc>p<6l0856L[#eRVkC[YZ4)3ig2SL+!$+i@R?sPs/Np*,pXeJgB#L7m\NS.+-St0)cq.$S/[bL*i(bAH.!f-ck>0c'Zl@0K%7IN4_0pA3g(l2,qAZsB0g^1+6KKiJkqg@LJ;O,['Y#fqtm(V0DVtcD[(Eag+34^6*l@\3_[Ju4\=@6nV$JN[q2\(M3EOl[Y=F8[4%TS+o\o#nb*@Son0)\YC%5Y4R*kfh\T[.6jB8ua\Zls5kF*6I<%9k;SE,G;GW(RYdukG!VWE#mGsA$)BO!NKQsQM!476Ap&Z*:nd&%iLD;#.,::ZhpM2H%HViM>g?,bNOT19<R.>bWrPMjmgAN1=Zh0)D&:Ou5/C4QB7spf_=%HT/XDRN8$NVbn!@JdOZmQ6-`K3Of6!O?%&PnR1UorI'?cS@hcA5S(/=OG>W(4ep`1e\CM+-(ME[<<M(Z\03,6B-Mh8R&0,bC7jL%K8HT%RYH-7]7Ya-6-jigCeVS6=MJDT\.k%:L94kgsc<VT6IOM'=b$r,_;=1/\+pc3+,8fJ'*QU8VnTrSY";_pF;f=H-C/4e?G_97J,mjQmS;G^^Vr?0i'WtO*mFZfTGp)7Uk6Q%GQQDo<d5.NA,k,dTdKG4:3Rn2IEi_YP3e"C^\jsj7+dXE$MQVK&n+9KS'p#D,X"4eNF`,6M8Y0#^lHL8jt]:R7)G5uM2*DPiWrPS%O+j*h@.s!68RL.RC&Zo8hf)U_S'odBOg4md%<@?4dMt2[<qe:(FUho?p7^@MficGC_rsU%&8k8-;5)Ja!r]W9b*_^j*iQoGqCZse%8tf**bYECEG+VCP8qCpbF/W.Cs5VX6d%Re/F<9e[rOBDd/tV(=*!@8(0NKe-KUB/]"S<0*l]$3KEtJ,]FCs,cdPc3Em'QS">Qd)d%XiD'CBg5>qJ,cB@'*RF.V#hb4Up!`F\,;7B2t:"e3/b1*F8LRo*_X^ufU4O>$mhEb^(oK@N1INBKI#(#)ATV.7D!p1Vf[LQj6YaA%P[Zu-d2<.KTZhM%%Q`A+fpp?2:d5].`PsNS]";7"V;nt^db/[$46#T6oE'=r<s9`rq`>$rc=Ji:f%S]()XoeA,U+F(E>H;:,cS<8%0+(:>f]lfWP#Ppo5Y.nf%[QhP-E!GNKV\URi.'H@jA(UpkJVEGE4Sp+:*-RJs.-%gYKLd>S3(Jh[0`N05jW2dM@U#XY+j`sAf%9X%OUo-SmdmPkif_<dFdfQ\+8QVN$9LSG/7tq:bio.?nC^;VpCZ<\I)VK;LDV/aUaVJ_QZ_:d"t\Jp!Z(Ks=bn*W]WBeBj;B413hGC`%.a?P-'X[!olTF"QS0obrdai>.;L$W;K\^PdZGAXI9Xmu>'ha_.P?nd+P.n\i-0b)aZf4RU'\Z:m5n]VtRE+-%=HXAi`-1"hAP&U;%np6lQXiSetdTIF*S05hg-H17%l2I*lRre*H^fnhGbKQeDaU8,np5HN*$`-+_+<LlV6AJPh[oZ0MDO#UJ5/CaOWtfrPpq%r?`S=ea%"PHWZfMMc^VJc-YS333(a!=nmh"Q5?Wl-Kb_E#gk\c6gjD*>R%9QN^-#G&Zs>D/PXIMP/om_@pg070k0)VU>_ZZ+QRZL0<.m5KRO%o4k#XFA%)Z/D@42A.c'gS/R\q/&,k%P4HB?)4$)>`U\a0in\U\A$Pn81)$Olj'fN[a0K3j*-:Y*?h5NF0HYVq.<6NEC4RF2>.j4b%OMe`?DACQ5:2n?<m=DQeP^iub$r"kZaB:Hph6dbY.4eacn-Jg>r%Ho7+lN&P52,@Nb>g\TXZ_sqg0`O.db82&j#R$Q*_T,Fcdb--%XZ_usU::\o8o'J6,q^XRJk'Bc5"1fm*q6fMh`X(#GBo6ACQBcXjgWO^;EU7!;Kt3_b0G2X76QV=/D_e#$@pddE=s-Zk_7$rklagK%GWQBTKC%,)!6QGHHjq<7OsLfMgs-5FI]93$N74m?gi9^U`'E.b=)ppKBE*Lc]Xc>ogZ+?Xm]tbh+.]S)ciCbTUlUKkMN$RfH`mHY%p8<uY3Xh'jGoU&'an_OOKuZc*o#fO%CYQ>AZgN4q7^d7#VmO`sgIAViiX_f9pJTT2g@ND>p<@E%L=U9f>8OKD>OBfVOp+iPZoQ4G%j]Qf?Xq@G%47<P[^B6sVDen)d6;4LPL1)!W?)Z%a>J;K;#/ZT0i*H5O=]q6r79ME?&]'<CIS"W*fqeD<8G^J6E9]:')(*"-1?`J@%"eLsl<"f$6n)kcqS]/_4=ec;YeD_aG2_IcVIjGJe-B<!r-?)mndso[a?.<`5ptS_1<:DkjVUQKQn6N.HAcEVm\Q#WC(P<en$g>.1%]1-9Dd9_;OE`XtROkKc2aBdq#Grq+8i/JV;HOjDlq3:At2EK3R^luP^_HF64<R'4EBr8/]<shsWps<i[0nF[M85DhQI*^>ej:"/^%*Mp,)0Z[[(_s@aY9'/0gA#\J+=3i(nb?UqN;tG!Vc<L['<82F1ShcWSq,bF3Le[+mPs(l,&Y<g>lt%u>OX1N77klC-p0Qo5I%BaF%%s.O'HHqdQ%PYefpXN,b/go9>791:Ph5icF8jQ^PI3Uhm1`K[SZ7;Y2cuAMrHU@=:I?T&V>DEI=aaKA.'tKnJ]mGSu$$_cerUnhm%3-=jRi`k0Z0NonZ^$A*)Te3Jc?>?At36]81G>jc-_r_=;!eIuK.$]$#@Xcb7eioreTdl&I]MUf/\cr7dMngO*4TfHBT<bf;/J;!E%'>+Xi3Z/15W:9)20se2PoISPJ@V_Jp\J-M8DV[V6A=#eJH("L]+0'ePa`1j9'_a5K7*,'u9^mJ=$Y"#OY!.a?,Lau6"ltb]6'4,$%<d7Rh-[VNX5o+\%%X6:JP!4nL;-tmJlH:FacXpojdt>.J[fhT@0ePis9U(TgrO]0A]Y4d[rr+@X=W[e)j")J#hh8(rCG[.QATS9f%+tt\MO1d2`CEm!1r<<*(is(H-86&eSqi1Z-D;9B2%5qV+]t:s?F6CaFm5H7GQE2VD[%;@$%PuH'=@&oc91EG[]Pg3j5AA0uH5of1%XD.@rYgeEqDq*TZ@g0fL$hc`i4Y`O[IEu_*9Fj<hjPi\5mFEiKXs<Kp`/'..rRXR2A`$D9F-mjNSDJ;jXPI`1>T^+9=8nQbpODO?%j+1u?a;;4P4Aaea;/DAubP%EbB]I"rj\jSPb-qEN]rJW_ZO?3?'A2tV*[k!N++44f$OjjMV[78nY;&6GiT4jH*PSHmSW+=CN";R*%6`WgrqDSgfaDl$K[b[#h:.bfkc;F1#no,hdC->fYW>Zdh]m^+FTHr#'W$=KKTq@N?ej)=*?#=Of(+t4=pOfU;l6O0PgOUe@Rfm5u%ROKZ#8m%^&6ga9X5.'q:K.-_aLYj&X]%M&sdKfe/AM5&5$/=O]&A]G"]^MP(,\'DuKD0RG;TI-X]AniL$$HP.@@PSMeD6=gRK@oj%T0#=4,s5D^>4`j)TO<8&#hct/b)BY_F2RViJ`;#n<KGbk/fEmK59N$[OF?Wlf@cTN_M<K'B%h=RN]&!HKCJI1I&4q'iaNZpUPE4A%nHQ(an(1dPVQJS6D+)n>)`kEMj#R[3GNP1GDo$6sH"Z!Q``g<aIEN5K''kd+SsUSl/?qrqB?B`U6?CXRb=XG;CQG+3RHO;p*qfA'%eZK]liPP6@PIih"]k*eY*?u579r<(pbSa94oFnl!RQK^sB>hfalJg"L8S-2'Whn&]@-9alcH+`fGB67Ak)>[rO]fA4[giXbNN0\j%CUq#irS4&3(JtQ^J+2n*]s8Q]lg0/XrHg,_V+A8fK%V*cANd3hgu^tK@]M"`#06;i)aM,@VY73?$eol$kB9gAHE(gp]p-_QFGr?<%d+<EJAnjd>md<;SY'&pqrk4aF-PdYo]77$H#_$?d1i)a'a%Wftk(l)rN07dY0h67;^!j'*Yg@:^AWEG(*?-9kfegl/CE4t554/kC%Cug(?rI4:;;+_itqq=O+Y'1^@U9-\j[2-4%D=;u3*8,c?5Tb*^VVT_#c0DNq3qNrnhAp4\aB7a%5Fm,_8GqOg%NFZf6$Lhr7OG"Q%k9#O@Wo3ba))agQd^Y$ke>VYX+TH,h6e-sP2Hn^9.kc*pF2Y]C)#PU58'la%>lKkQUT,=Re3DZUDO/MoEkD/A]6H?kCYt2sX>JNO%61N!AnEsbgH].p.hYn!JO!(?r^JQmZWA[90[_J8u,=$OojWF<kqcsWYqSN+&bM>rIf:0P;[c`Qjnmq@bEM>=54uq9kELsl/eU)?6%oA=;c<-c3%n(B">,Br-)WnI^bfD:>`Y2)WM$HpB[#ht>\V6JnU([:EK374HlV7>&rOGW4+M&&h#Kl&ZQ>jT6oTG9_.dbrq>[(6N=%<l-do%pGNeh5.-Yd1Irm`e2D,$q@VNlIr9HeW&DTklY=;b<'!c(/$F`jV9fX]>)Qd?#22W>>:u]D2<hoT74n%ImFb24n#NEAQ:eu%%`)C=5\"'L*nBMXBs=]kqUpmh[9r'VJ_Os)#;X5a/V*Tf2qHieX4hm(B<]u7`95`f_:r=p9k]c<!&Z'X:bUG"fQI7ncL"!IIn$Hi%!79rQW5cGlos^UbEFe+c])#VEdj#k$f%&XZIe(S"]63eUgp]M@a2LuF]),\P]F4;?i&/cF4K`:thpoj^O'^X[IX'An+ij&8o:,]\%%^FY'!^Pe^Nkj\dg#&584<q8H]Hd5#m9;1/6o2lQqbZF['\6(+FuUQY!\2q#\Yib0m^V&'^!j;6c:DNo`fJ"q:-HuX-earWg+aHo%GW@@KK'^n7PKs.C<st$C62n@Eb40HV`#SHdkT1oJ2"eq"iXUc)R[>-<G<j@aB]Zb6"!'Dk2=:K(5QD(+^04TZAG]XPl:$)L#`c^^%=9:aT@Q*<BgE+S$mFjDHptHk\;=MLdK6/pV<Amp>J-d-\$kcq[qc!@$BJ&I`NqC4;%WT]!R3QRhX?i<0I&M7Ir@Jq01=?0,,E&5X%N7;P;OGkYTIb0@N?ZS&;+-INYjUT^o"D7Z"c/%;"bq1#V'iiTBkWc'XacHgL>63,A7`mMWMdJ@c4PmI#b*"bW[5iQ;Djk6A2H4=A%<4cJh$nop9JZ7uXbq1$R?EkSYILffZ@#j%<0;J3$^-39Qe9ct4@DXnmPfB182nbm)8K]_LW,oG3;('GEf/HG+JMBZL6S^&QI,:WR%=3XUrCB"/`gk,?e:]ENq9D=RRc:dH<XR("7dZ*&)mICZEa-Pr`@f(a.I,B`l-B#<X[VGO7QW>s7j2X2C>O?]BIQs]Qfk*k)QWF1P%X`2aP#gh&Vi%Y'AK;gqa2S#;r_-kUH6Zqd.n]*'sk&JY5S8]4A@o&mZn#hF`L1I1)Q.mHFHLP=lj!?&W/Mlao=p=9FOQ18+W)g0>%W1h5gG(&)-q_gNVce7bp^h-+q%hhpKhkf`=mB;^b`3R!c^Mc##3%\pij!EN,Hp&=B!R9$1F=2^:+33'<:'SfUNkB/"DZFIKi5n;Q%U[,g2Zam<CT.D+/ZZ#QnRXY5)>rG[Op=&9+G(/<7<aDKY!;\.H@iE'g96<hX\rZ8q+$[O-C5G%pVOtkEI97]ca2U5tHX_<F"jb1$%9h^VYi7V3V7,E9p7K$>_d'H-c7"a5%T(TR2YsaqjMrE49q_]gI2O::7ep>8e\?YUEe?4pHM/YfLJ?G$cU$LUl/5`Dfbf9s']Cfaa%iaQKNBW_O#aZInodTJN\BZ;`3pY\KiIFm]MjiM7>s*N]J1<m3eP1kRDNSen=]oGB^=SVghO&>Y.1qVCr>b_O;Nij`g]LWJn:6-TA%[!'hS;M0=q5?e+'>LNFG?f-H'C]q0-3ui8Lhu*i-\$6DC0Jt8uo(Q1=dRr9["*QoWqnE&Q=KXu9V'"WJD2Z6"NaI.lmW*:9@XW.0%mRNiE>&tDcoYs,joEO/AbLA#l_tlU:iI%U3AKKJc92HNG^f-b;Ib<E4;6SN\;hH8o"/Dh^3Nd)Zk2?g"kgic$H?n+YXM@[q8WQSk%+BG1`qWF3IBu;Eb-B+^jZ^&X?Is.<2^Uq5`M]iW*hZ)(KgkV5W%0tZH@fskPa\uA)2GF!e"1H,o*45?OGK]-BY0MW9rPagLDT;sF%FGm)-;4N[AT[g0DR*Oj$6E]WFr:R*:;\Va.dY8hD&2/M!=ql/o'681`EQh5Hg5aF&/i.h`TUX3^8m=>jG+pQSe\FnmGLZGt:G^g?%97Q0XIGn"<Ng`nSZ^jV?=R@qsK3o^a_.IZ$4C'2cd[=Q;Fd(j]*s">r_*$!#Y5]B6la6D2AkY4]r`S0B;lXlR4lq9M"+Pt-YQofa%cUNr*\a$M!2\W&RJUY6]\sS@%4N6$5CEr[MEB=mH2^Q#RDZ9L*De3s_7E.,EOq]j>G6XlXpR:?g^B(rK-f^A=fo9U<ej0Q$ne-AS%Mb3<F*^;`>)S+YIE76c<dDU%Op[.o_E,^(D_9:N:=h"R<7F)t2X-HEIBd[W>ln8D3MHeXMOXBqq!2]RfZ#"&-^&?I37XsUSO^:$i%GH7D[5'PHjYWci#V"j"P*\E>Tc\h8*`mLQnl?NimUV"/,2$t,8<pQqj?-QQ_\+L:poV^E14Z_9F<i%Y]jH==gN1EqdXRUu!+`gR@%a+N6u5Ll<mH##O@3q+nK*^RlP"8MlCq4]c2c^2&r7@W=NeD1807!GX;[]!WiWG#f=H-k6](b8ZG0"8lRoNqC:9sMOb7cEAKb_?PF%C#O;U:TrWWmj9*Ob*9ShJmBM+)X`--c2l[GCHZT=T&f88pH*]Y^CDh(nR6QafCl.OS##0nMeu!M4gq>1r=/.CSLit#jg6'rr:2Js%KUE"3IQ?SlWj\M-\tmJ[2sA^;Fj"%GA<m##8N(cIU'+ItS)d=Tld[KL`VFYW0:V%JId5H5ol$$&>!8C^eUsn[4Pt2)2GP6RDcqi#%pn6tiAL9'G3o>POlo%(55$rs9G%Y=C>F(h^*aC;gp4m^tHK89?l>3.s8#&7p[]1t*k$!kR.b+0Y\\7KIlJi?k*6>p&[\%?MG1fWV%,\QG8KcRRLSK8UL\8Ts,(Z(PY.&sm^X*oh.iDnpS*_p,;%,4n.g'p2FHHEeNO.Mt;0"cLV++'$Hh'\EX<t!Aqn'a&iVZhM9*_f=(%cG+b214#j7n*f.FDU6[HTk;'iD`3*Rp2/js0eXP*0g1hUR$S:5bnKP)+Z=-8eO.6DdX/fnV!WkR%<"r"]A>b#X4N^@Km[3DGD/AV%S73N24O?.di!;64"]4o9&+m8dl*1q%H>F/u)1`5Er)uhVN*nXVh;t`9j_XKtA'48_EjiZSLWT"2S[ghBh1/gH2\4cTr#8j)%PW!.%J%()4g0Nh<c#Qp)T<5r4U=AM"[2g*:r+tSjdge"m%,T>@=LKt\?&%LlcK(Zp'#[-KGd<*HS[dWh'H]TpP$fCDr+nAQq"Y;$,Ymak%nD[R_mY1NWC8^dfbrg2c"QH5W:IZ9r-Rrr7SLg1$;lotEq?=IqY5b8?eGEhDjf"XBTe("Ks5>BmU"ukXa[c/<A;OB,=7iA,2m"[1%Zu#;[=ml(a0!;pll-SN05Zu?#mBWQM#_&2mqg4DJ$*PDB^33C.HgUN)G^4bH%e*Q"2*#!&2Eq$F?GYYHm7FC_RtS1`^98Q=j[4Yp%\pc(s_pU'ecEhInlEXb\Dq7joFuoHRNqg!\Y6/9!Jr+P?Llh;!Mcl(Ds"lo&R+ngs<riEtb#kH%G^I!95jdIq]8Qq>9280)VG"(?%bdUsIrd$G/Ur?"*YChTl5@.VZ*"/NGNG'4h10)?G'$`=e1\n:q[Y-HVg@CKJdLsjq4[qG1\@_21h+ksN18,dH@7V;kRJD)K"67Lk%!CnIB_1a3PO,[sgSh*kKO,[sgSo!(U*eJ4;(*5)M9kZjN7kYPmeJKL(fdKpCfT`847t0;MYqM>%lg=CdCY=f\##&^!4Noe,FtQ_4%0/Y\*iJ6^LoA\SR=PnE7!U&2A`+%hGL/;(aV<3^4M)N)92ULAMUpetV`TMDt(L#,)Z-C_25]0&1j]9VS&pJQHhc3J3MiLtaNh;^$%qnZ]cWd"?kpJ$iYJE.57?%&KPGL296_eA)pFif^>I_?+hS/5noe;]no8\s.Wq`pr;49RTk(H;VWVK\,ifLeQ#)a&sPIY:.87cR)<%G$OSn@Li24=9k4]AAlDC9FM89#<d\Ba3!E7fCZ7$E-p/JGNts#4aU-qS%BMu,o/T/p?*N)PC@cR_pG!%gZ)sB@a?mV5LsHCGL%CU%dI40HrnTAu_qY'i\Gk;?a=?hE*9q;HT0-8l`5a`h:S+Y0#9*OT5'aFlGL7KCXoBbaD"8%<YGt;Sk(bi%,pq^*C*>,Q@X&+Jbsk"q%.#rE5[eF;[VT0ZU\=V-9LKW;q4A%0>m.`IZ:T8iq[omj$2trek^RNKA^UO3gin6r6p\3I*Ta4Q0f\"@'gcgUj.=3jLM`N0:.c,FE%U"f%]5HY.p0A;Bqh!TSPQtf?4baLOlqUmuj-#ps$dWn_j_1o#gLJK_eG.Aj!9\N_NhVpI]-o/7T]a2dL%6@eCOH`'baY3KJSmOFM%QeZ$@mr-p\e]5@D4Q3??2p:1:f#\\M.fJ5@YrKq/UZR=rZ=V3W;gM0Nhp<EcE'P-jI<rahqn^nm\uR4F_TFf4b?Fk/J+#E(bO3G!%-7oIhndT\\Qb_oa'bC#[LmY9qelsg=CDTHK]`_:.&-cQ+]QmsRKk]H1'J.8YH^TH(PDa@HJi3H;F6ocHo3fZ8.USpbSpD(!4Ud&b%\u-Tr8j!qgms!Hhp>2u&m&QFBFf6cP4G"rhE-%&7<$ski17euhU&$Y>n9ASmaDjK%Z?qnt>=8F^[V_,fW9-(.J'cufM[Z]brD%l8%M:pEo/8XPu^D`ED'.VSJ*3P(iMlELfG!`m6>?J))-$Ii>'KOp"B=A"%fhY;#^@\t[M!/Ha?uk/c_NVC*P7,X'cf:EKdr6r3DT^25%Vp*BEgE1FZ3Y.n7m/Qo2belaSGP1hla&UY;4)@(N+(.o`2$t#G,>>Rg2%%hpI3e'CY"$5O<eI]JH8Q&6P"1)^hY^n37YKaWr+(TB%O**+SS1g4-&rWD]606YNrn;l+Q13VFX\(BuLiuVWG):'E"soe@7iO\lbQ]Vso_r5Z*=XsYX,!BTZAU=6*,qtqq,'ZOl@*;jM>t!A%\VT1]ckKG"h.A26M'Z*9:fY3E?gkEAb6!18+)Ii4k1="%DIV8:hopT6D>a(5_cnW[oK17CHM2FgIP:BSGoU\R>h$LLr297#E:<qO%b)MHSK3S"_hlK3b+-''E+V3nr^T9qp1TqkQA;(.EZm*q&ir'+k`qp<UhAkuO%!Ba8CnUY`4'p'h8X9is*Ef1ZZ:N6D*6q0FU$)9S%%L*YkW@q>npU;6g1Z?>u]!qQHesIK0l2GgADuW7G-$M98*r1$K&5nPd/]4jHr(rGiA'=KS8R;;pDcYS^f"8nR_9,[AO:tnJ=%X1S%`n]Vn;X!7d*gqGkceaTY=%_DPZn[oDp+n49cq9/4'2rC`IguCA"n/#eHdU&JZi`aoMp]c=nm8\CI/M&Z5)Z;AkB?N)nnQkB]\$sM%\"M/^f2PB+L[jPIE:E1(a)WB%YG7D`>ot\e5.s%=Rih@X]>XC7HS7"]j`(h1WH5P"dEYA]3P#"Pdsq"k1m9,jZdJpMpVLcEIVX/<%Dl5BK:8c;"Fkt?$h[<7U]E@h2$Yh'cEs]FgXFecCH#o"O;hhU=>Lor`ga>a;;iVK.h!AZ#8#c7]kFp!p#&c0TZr?$B0g0?51?sFL%<Q/;n7i?Hj;4b;?FV3sE#CGjO*lqHK?g48u[/]F>M#lm7q^6f]T([T`QhFfleEm&k/SG`\):JYp$''"NnH2^Pa#gD:j)o.pFL0Q1%7Brn.N<`;OILK4cZPcGsJsR/<WU7%Rj0CHI7W/W'Btk1OQaQXS(CrHWGGg@EfZMe;\W9t8VBeC[Cd)WM=b4Y\msDSc=6?%9hSJeM%$St-,X-;]Mqu18WY>1[Um:ngWhlDt(2)-\sf+$."`U?s5//>`OBIDf[jAc_&D.7h8cjOpQ4$W@tKe0]uZ!>hV3gHt;kk4X9(B&+5%eQT([hq?V=Hb<u6A5t^<!<!1IQTLJ;Pklfb?H?"r@r][6!Mc4kBBg(]BN5FM1OLM/d]o7;PW_,'@Oe:#Q[3P9Gj0"U'#".tOj`BI%eW]CY0V!'I=sQ9,Xq/6q#oV24-c"8ei`KL!r4-6.:r,`WKD@ni"Lr'tDmHbl[\hVs3uIkfh!q**`'IF<8Ui+$l]o+<#:6<c@/Oo3%9h#At?T-F"SNi0C\k$67RpV__]:M_P*c.HLWILDuj=P_e9)[KipA4Wi9)[Kim&Rp&WS(@-\lYA335'`D-/U'*mV8/m)T+R>4h+[u%*NQpGUcpd04fOcl1$`X=IKEp<2XlP<[)Uc)hYu57P&/2noH3.!%HD9ti+fgOj9KNXHb6=i&`0Oo<ANn:'QXNUf%u%cV4]Q`q501$%^-dOHU((88rSZW0j\p0,^oZpY=,ho^XK;.)Rl415\"eq@O39JM[E7h*C-P=:2/>2GD&?od\%&`%ZdmdZ`kJi`qu#X71KRXrgJXIu%?R5*$2X91tQFD@Yq/s-n9%3I&UJA;pWLk&lW\82!m.GK(41Z5MpC)1HYHJXa^.B5%jMK:#`I@iK)p>`G$TI3'DX,ht_aD0>n`YjS%W7jSN,^;hIWH'NK!T1''X2V4Tf*crV'jFTm#oEXJ34BY+n$#`&#":YsGR)iKROKLapZ_F\`Im)YWR/+1fKfnR(A?[N6'"+pQMCfE%%_,HNYhqpSW0YuZd[("^"E1p4,s=H9UXt?O@^EhC%Ofqen(3^g6hEEaOrIrmr\#ZX?@af;0Rn[oO/guVj;@T@'ta>_cCQYfgA^YQ%6^]ZC0W5+\dXV%pD;asC6OUShjibGlh4NIlQYnR45/mDG&6CL;&`J(@cZdT;eKO;M^=nu:?L6<iOp\:)RZb5OT6ae&Zq'kCmn^[r%:[$3.4b33QIY_]1'@Z!2n,8kda+eLi3U]\3F<eNSF8?90Bp5s$A\H"uZjZP?+6LEU#;AAY8"AP@]kn"rl%=Ii":(:>2\EOtF;:g6%lNQ#KfAOa$Y(/rVjC,)DV2R-]L-@3Q#9+0o@6.(Qc^6^W$LEcfm@si)q3Oh8Co?'eHU$6Zn?*d<^->g&A#;2:lRB'[LU1XJn:4R?%;r)s)8KmdW802Z'=6ULlW]sfV@lEPp]s;7O%eL'7d@p;$$lpi>62/\_Lj)eHW;uk@Q2rtL%nVW![qrY@/qM,\J5lsK$U*AOHT:4[%V/BQ?<nFNE3-%p,$DU5[gI<frHd?<C_(mNdU`BIs`L:BbO0g.IHj;P9+]`)gcYXAQfRpYX=)7+P"0tMV]+*@2#Ogq2X].Bog:M+'%R,/i;kC-]@\_h2?YY!cdFRZGnT)98d/cTp^nm7YW*W<>TT^>?MJj%_3R@T)7="gu3"%J['O2>iiJ;L_Z07seQ^MO1g[2*pqf1Ci0%+)4`9/OD,S8=QA5CLDhf_(2-5I@_2@la5P7<bs)bRPC2n2k^=3/ked^;e>Fiq&44X!b9m0XJmQ!aR:)%$!tfTB$CQ"+#rs6lA`c_%NjqTgqK_`UhkSq\I;44u15O\2FH<:-6JLS(H*>WWi_<K>bf5]#(]WaODootF\po&Z?@TSWMmjWgCr'lu.MP\fV)Qu3etM0a43pP<%-l67Ia;8KSCuj*X_h<H@oeI5;A.G`.l")\rZcM^e^G5u0rR&<5g6lbCM;)@mrFIcDi5P0^=E.a2#$?@r&d%0C-o3CIbe0bM/YKq^%lTcuV&$OQ^TJLd4K!/ih)o,CW8sOV)GQ)tQ]ZQ*54f-^&*i,^NY^SF>X^.mIFji58hs;fZ^:j-&mQ;f].6VPZb.EAr#/7#-$?F0j%/,-?<egF#d^,Ua*5qBEdYIurB/*Fs!Mr4AlhJ>r$:k\=mkj<[+8cudabqB1A;i9J>XdT4,*OPJ5K5L!jDCpFiJ^I.%2dk=?!)mhe%RX+VtaOG.E:m+j]&,3P*K1n1a!M.;*Y4#45"pmn2pR<8uT'r_<h^=+jO9RO34a*C0AK(!Uj6"nFFjSYch,(k9CP$s(T3c@IAZgdT%.m$R&Bs;4L?-?=sVT7I7!<*_c=jPVbQHQ3b,T/,+%/]DaWC<ob63rjg`q4!<Apj951J)o+[*P%j\%gc>b4%>ThaZ3?^ndZ2f:Ib"%22[7CL:nD,*@=bg8=KBe-cnKiRgMWq.]lT&C(p0bXg/Z]DGR*8qb>`@rmL90mB<aC)MSm<<?C)LRl-SWo'$R#pd/2A09\)3qn&7e%'#?u!QJ,YP86o$Ua0T&oEL&p+kHEYTQ3Qg'J*qn)[]1q>o6'^e3WqNE!,;I$?f>&Zb4`<G%-khps.d.S%LlXk$U_073a.nO3:kI-%4?kmX!cgg9jAL-$?Z11?Rrei#]n3p9\@nEG+hQQ]X$G;XNm@G"d8RW&^+ljiFS/maT$kYP[A3[F]o*scCJSXR)SkdE"pZ6b4s.J9%A8MctXm^qqooI]J#MraB!u31l$fVuKJnX2tg-N7[0le!OVTZ]cq<]7Gg4ZZ[ToJK_$Ik_%67pMiGd[$^hphDa?0ohEbn%(/"Es-r%dBu<k(=(O>VmJ.kO?gVT"BpOr"1jqSp%.o.0H$O;h#1uA3k&4_F'C2>kuW'JX0ZmH.&tPb<K^[[QSaTt;5`bX\IUglU5$o7FYZ;;%;]8.F%53'=X),enjV/6GGiQ^(O$;/WE]GFm6p9s!k)]/DrVY(*bdShLV2o%Tc?'n?(^#\#P!A6mk"JGZS3L2*\8HmfoSQ[FpOEkj%H&3M@4'Sr<jSt\#2q4?t[4eWq1GO:,_a]H_^d"lLoH0oEf?pa-@sQ>tA]#Nj>+.),O&dF8gPRnYhc;JgXY4S0,dg(&[=`\$+#e:H%Bs#YQ_N'Z6*Zp[Vd^uD<.bi[3:)kcm]m[#rX,Erej&Tmko)NNEQ;+!te5Sf8mB_M,F!ndG]8W)`fmCKQ<bW_G3I^XG(tY^L:Gs-&%p\DqjbQqK!cS:lU*f4ZS95>Wu8[!WqW)&m>0n<9hh^3nKmair]Dj-]J#&KQndfU+Qd,1tX,cro]>ACQ3V)`m1OL@YH%nc>-d_rNE%B>uN_If<fM@okO0NLY`<\"Na\;n2;oOVE]YeREM3WI97b*S^SiM/s@&]khFN1ARS3$0qh#VKuF8REn_!ZEe5'=6`R'kXb.7b9OLS%V7*b.n+7TE8.PeVAroTA(SQ#`d*MLY!DG,kedh(oR@>b]cueKU1C(6ZZ#L;?BVP*j\oBEVS`TH'[2+OC?fjo3[Po'L;o(XcUaC(m%k?)RXO]o:/GVrM@9r)C4d#><i/6qjqa\Nt>>IhG5/_qDGF^bnZXJWc"E@YD]D>@/GNM6VNo3tcOdQC3fT";Wr;B'9n>MkRs6pKI!%bNp,i;?K]$_O\*2R7&^$p\S9uAp1n%m;uN]qpF/jY*5Yn@&WH!N3nL$9^7EH8!d)_p\oP/bHB*3[E*FkpJXQe_82'.V6IAa3]0Gm%oG(Rfjqrh7"1A'>L$*>\Y5n]Ncm>TL0q6E:ob+YALA@I/R*Dq0HYt)e@*IcX8F<I]:%)&"LS]/E^,@t$>A?XIg%N4+8iOu\)@]-`%@<^4J(_PG\,2&n)Ln"J[COXBI3.]6KOen)LRNl2NN\#>&2/tH-4i5]GLW%R@oSLecpE0rcMG<rf,_*UkJ6?eAgHTdN*PingO<7X5%lW_hX=?jK*;7.r70X!l]2^\:k48lU^?c]*Q&R:oF6PfW:I/.Q%eoM)JkjYF[>e(\482IYl,H(dK#&2PY9k1>Fr_rOKXtO%prO*13%egmDZ2[:nD1HD;Eg2VHpf[@pH]8o6]DlKM76!D=OPX/5<>n]`ih"W;[e<YRUCM808!ZGE/WE3"gX#"=j-iuK5A)$._H7A<X]qVR8%T6nu0n[!uknikVP!e9RcI\Emqg(P.dJ^r:H\bT[eoPeMnfK2<N;IjXISka0W=!sL)0"k<Un\Q!p3Ymb&irs3Y&G;tXd_EN/dg>+0%ig9X1rgnp9>rk`)"SosmG5pnNjI_gRFkYs`$:il#B&bB]0e7PAc(L"kUjqKiX\/oTn(0)<hd3FM]cmHIImR<9(A*#ZC[3QqEDMB\%ef,^%=!Zg`N),*5+n!_FGMbK\)2%!.hAZt=dRh*e?K/Ae#%BK4*D9XHp1+/_S@&CL[h]ohOS3Wgf6&Y<lITjPC/`G;UQ+ACa4MT7%5W_p]?^<K,55TH1(<ud(_7d9`#nW</\RmFJbi:%7oZ$B,*braZbs(gj#9;E@NLZ$``YMFlm9qPCfu!C$3Z<_ZffSMuJ'JY-Z$ohG%rH!uAX3`Nckhe@\mmbT"YOhP[E:C"5H.ZOHhrO?j%P">Si9NhJ]@l"/]jEFb%$Sg,fhgPHh_iMd;c(l@55**g0h:r!%Li^kVYtNI%K*VlLni(93G]^4qOhXhUCMiW@rG"Pm6FY?=?eO*c-X]#@r2JNEbJg3EpOT"3`UaNuGO4L@Ycr9tK60">Y6PU<$G=:j2/J^Cm(c`g%YHYHrY"^hkf$:?:^V4t7SR`JT<*8HoI,,0Goo$>_%iqh;HPrnZ8mb:jr_6<I7KE2_Y2/i&2.L'@K\#e)^",ooiRUN$J^7YoRU$iY%B]ugM]&oEUNnrmpLAPmF8#?qgmfmLAlEuK5D?d'H0$c^\Z%d^[JCR.C^6KqN>eb1D_dIcq7Tlg1m?fol:`"@i-;'o6Jq!p"C[8$u%<n?f%r$Us/S^njuYjaOB]l)gL9hb<-3pJqZ%9#%ZAKCH9^IJ-t0@j##S>//nIg#QGn+n+.j88\b^(G[<\Xo:\dV>^qXm\>T"m0!`%LA">>A"o4=(d)SUF-'uh=2SR.HD2A3=T`&iC4SsC!^+4.L%kfSBplC`Dmn07g!ll.d\a2qGG2MkE/Y>jH1Th/X+g:`@=@i0FL>B+%dH5@s1Yb'_N?R'JFD;bRE6F3clRQ$ndQY?/I]Ta?r^Z_I25-H*dlV6GW7O_*YQtGN1=AOeM"-hJRuI!$.?]&B4]g-_gMk5p;6HkO%34p"p)fl%!NNO%6Y3<dbq]dMI3q!G@e%[Y+Y,KrG;$RlQ85e($9[Q7>CmiN_4hXVH>g_?^4rAfuBU2VNp!YkC&>-(l`bZ4EY3IgW%IRKdSb,TbN\Pn`ueo*3;oc#l+g$.[]?!7RFp=:Bg<"&B:qS'.>+9,I\(esm@-Ta$(r1YEleh'fWiiMgqVpf$dl&kOuZr'LRTHraj%'+K]V(MV\IU)'P+IZ_Q%,9=BY?fi/-J#k0<BPr'Dd>iOfKe0V4C-hL$j"eC5$o4^W2"dX^BcF=bUoi,7F[C>.SQ8\Vh=f37K[$Te%GocG..&%BjNWT^o>JHTq=I\bKGP![mh0QR/*GP]GlGs"GV5Hk4CO3fIQdl;ubEdH;(MuN)Q5Hb+=-fghU+TV6\((+SOa34'o/*c"%Hi0^&e(jLH0Y1>&Q]cPscXDRTj+lGO:HEpoZ8nUNN4==djm1Aj#&->D1sqp])UKJWg4U%M*kRjcYV7:H4E`SP0XZ:-KZENC#arRn%)5O)^gB3lhd/Bdoa\;u]!73rSoId8j_-lE('Ar?bK/B5]l<(gYh&m/?N_oJt+LUAO2]AJ)aiH<b?/=4fhFN?mmD5lH/V`h$kbX"Y%XIOB2"N2RADn[XlO+nntp!FFn#a/&?*^jKT2uoAI>A6R%cWUi8fX!)W2DIA/WdV_03,@>??gjKRZR$N3>Je^f<o/k0/N#$Qfc9'4%p<MBhEO9'8?e-gdAK8#\Q?u1>9amXJ)JI]C#F\M.,bl9Bpn-nNl5Js:*hBGQ"s[+#['*QJqVMgD\3=ceZAopUU\>8Pf;i`B,5"!S%2PQVkn"/JrZ2^J6>-J<h2DHd;gA's^r9i7?QMS0Mnppml($Bi,e'),YN.9>Urd&%PWnC_Mf@="+j2bSKY-.qd#47lbc!SA49A$<$%hQ>3oO!*\l#k_mn,KsNLg4]8VQ_mn<gjlMdH72KL2l15uP)Vu2/ma!3Kkf4Pge2Jpn9se`edc-&fUi*.jI5Ur_S*^^%SKO%JS;1[%W+^87a#]N`mBp"ibq.MPUT*YMl=B(_I3lm)i^D@29%3^>FjHmuqEJ>U]k4QUjS`-1j3!D`1YFb4ACR`@]M/%;oN599GpK/AkqP7k%&rD7)oVn2sek$4[P)L`bDg.@rMN\_X]@p81hM0B5mF9k2b>2&\TFnXknh>6C?i"\XoI9f(;#S*R?J`rpY*fWX)sYoG5#6q+i`Do)%S[SG1?*4b"Phqs\gsBAk)2Q_G^X5>LT06=XF-A9WZtqBS$WW61pa@8S^=9P]c!()I>)W"Vnf,bjbL@S-:4LM,j$<J>.aB3!rgPCf%L7Q-:>GYMg#rsQbed5tFq#2s<>FBNcKp,f"po;X*K!;QXk%$E)PARu@e".q?G5d8ear"]d)V_N:2*(4SYRau"gI'pN`5oB/p>V]B%r8p4/aT]XsP73E=kCRMZq_+TG!-^N1ghf=6YZ]CP=C41E)T!/'ik1/X@1q=#lM#Wkg=G+nA+>cf`r*Gn9'+X2o><J`SXAi=2=8bM%BfSd(CD"=`J@MH7=t_mQm:*/@c"Xe276?*;`^)&_nCP6[WY@XdH7?pnS,oJT_c#*V[`r%d!j_LJ_B4/m>FYBuh88(:4R)RarUjUU%s%tR'r:SJ3U?!Dmd+Sa@_roK;Rg.U'TA-cEB_U6JAb0G@NS,M<kXaIhdfn>f>!-.$>M8.K^sZ-E<k]HagUc5q?#I(;I^>b3Y1!B/%7/"oM_TV]F001Ae+&'0bI67)i*uu"mr<aq<C)9k@qI"=e?[+GCGKK,CF0tA`6.</8`q#1hEH^'d3Z1]]88!^%8hl_t,bo+u(/6Au%*Hk%0RG,.,R+a5jCqpaKR4m.`8Wr&Lo\:eg$8(#RnD_XPNp3K*%eM>U>_b>n%hX6%Hr\c_ru`fe0ZQ&Lpc@!WlRP)(<=AOr^E4Re%Yi:_/A%K);i9)6L,e:'J+7t_B[()pFStilb!5cKfkIK+i@@l5Z@7$C`D'go8*fF!CW8#p&/U^\hgI-/!R,$1!GB[BJT:Lb!*ITl[%DI"tj6.Hco&@]@jD1$R;%6HKZ[E%r[&+X$fVE6qFMDgJ:5;r43S,0NE"8R'j-Fqd$g<k\g=ts;>[6&Na5$<kWSfO\PI7Wf&OGp@R%ab"\G_u0V2430M8h2kLaF/T1EK,>e_4sYP57f)#uLBPiTNq)tSN6Nip\Y9-t8Ck2H'I;KO97L(PZaY(_<FIFIXgY4:K=5WT?nH`k%M)7o3a^l'+ZULcZ4&3;DojE]4Ysd)/FX2ND=%bppF+tN]q`gLr]eC.q]3/]e]=)C?4B&GBmc!_1hX%-ZCsar&BO\Q:/^eS1jJQXK%fFm9u=XerB+dZhGdEL%l@Mc=J4bpRdmZVi-<8)X%Hdi;9YDiAQbc\X_4p?`Afs>I,k3lp6r_$kT/o^/9aR%V-UiIA",Ljq['_,Rd%<T*q^Z8L8brXpG4b1X0qC3tALDk:X+bb_;_Y)V&X,]L%X%sQOYjC'e*fsUUM0\Kr7]oF-eQ%.I6^*1m/09+Ct_0joEgnFDXjI*@c%F-WS_JYKNM?;Ec;KtcYu'&dM%YI=DZBgr`DVP@E6-+Rp7!0Chs=1']2Rbj0\mFJu@m+E"h'73sLi$hrRS29`OH$5SM`]G"k;R:PJ%PCI,Y\@EYa!;'Zi9^hVZI4F4,4gY4QT`Msm41<s)O_sS'!'MTn-Dj;hnR"F]SS`Y/-+*Su,aO`;oUf6k/,=bl[\$ZRd:-:7(3XNL%0gnMEo.._d!9g*W5`+#oc@,l#H!uMh,RZkr>R-;dK%E<?SV%&W..ZCWmjYiq>;M$[OUel>;;Q#MOcA8BOLu@>7cjD^\HP-+ZK:$#%<[6urHK/2#O_0c8F]sk<Y$*2:"BhC5#^:WLh2pkH#NZh53_<pJNAI,9]I/YE7me'Ul9/9t^VS*os)_-=(H5:dShdE.qeN(qc0W\u%''gChg6rQ_-Q.n%SQ)9ikX^)CA-&D3r:R`k'kkJ.a3l2s==d>(O2%csmJY/oY$FZ:^$jk1[&eKtZ]QpU7%:Q[4g,*+:gH0:fgl5-%P^]_82Kpu<J$lLAT[0G&V0blp17nm9^4FJ!%MR=I*7<S%"^klC!Y"o`Js`]UP?^/LdE2K!\jg&/[WtUl>GXrum2G?S/*k8<?A?#]%=?l>M=.<1K>Ma%Y+FH:JgXf;=D:3"mc%^e=8iG]!S.90AO7i,"Qo/9Al%TDu)TP+I6pnJq^)"sUqm1-O$[ubW1I#2/"KX9c%_!h?%:;;=IMk:!^rCRJ.="Zoj5K]^s9hK4@EGK>%B'SBeJ:=uP=RX?-8aJcVgpcW+SS=!?[m:GnAu+HZr?ADAZICQ]K6O5#p41;]5CWX<%D8tj`atq-q(A*TYo"[GQp!@E`2SPIR>-GRu-XP'F=&tCjM*\L's4k-+Bt="MbJujsk[3%I!4g%\::qBA1SPu.rcb]!bXZ0ooZ+'<%I;ua<`]=Zs%oBehkV<ZamN7<nDksT0iOo&cp,o[\%i="cS7cd9%o)d/hm_J6+%#-$H^k$83Tt_5m0O)9BeJZ>j1>,Cp[L-@Tjdl(%YVih+.MAVO^+t:)KZ;UO>AGVUnaW,R_[H)LGd`ZM?UIpfMl7rp,J,7T<spN%*7D3j>?>V;nCSfBBs/SMRaX`&55'c:h'Vr+6fQfd%CpQ9S0"</W(HFJ.r7lN]\+/\I?/+"TLF*P8NbS&?PmX)5m]r?o@X?u(oFW[-&*):<S4CdK)jk0>rtV8F9:fRWbr>EA`;b_^.<_#k%_#F-BcZjG@?Ll8dIJ[Tks)M-U1r8<XJ<uDo_o+D2C&??n]%Wc?-:1?5R_'A-WRk6n"s2kWrP6f^e>A">kNqNS&/J5IY=4WdZ!GTV%F,FYug!1Nn6Z4S*&:o@#>GXB,9(5c*,A;[U3c@ub20Ha:8u'G\)ErP/:N>j-2F/#@ZsmNM?/c+S5O8Wn*j!WEJ'9"A]`VM@n!^Sh%Mtg%K(X6g@L-+SMBBFe3bO%ncZqhaSpGTJkQG3V"nD+:QZr`>&rOht%rn#tF@;>g\ek\pH[OS]:^>Ha'gKU9TPBd;CH"J$NY[`$l%-@W"`c._UZhu<*06rkRA,Is.2.b4R&H1Lk(gE-rUI!G\Mlb3/5dR8.d57C?&?@U`.nb2@BDu\.em;H(@^V'OAle^X7k/NUerV\k3%IXCbTqQ2s:oHD>$US#SNNp^B+c&]58ZMgrYqpbK&AED)0]AUZ.ho)i:[8nUjRLcc+:?qe$H*VVkZC%`nrB^JJot/6)r9qTPPP(^6%gQN#]Og8tYgW\6F`S,p1Qg'j'b6tLt^Lb`5FQ*J@^f&Xqi(!\Bn\P'1nT-R+/O+%;IX;qsh>-TmbJ;U0m]LB->a^Sga\k^QVlSQg%DJ8IgmVcL3rr)B_AGtcgNkY:$cR3?AhV<n`4+R>^9eL6MO7Z`(S57^"HsW@Kq"jb=m?]a=nB6N::rYC'^@99*GI92R1\Ki_>K68B%j[F3"9,lH1BK(_HR^LPReuQ?e?5YW$,Gu@K.n0ser5GODIpK6YCPaT^:K?Hd>$i&3kn!*&#CCkF#qA_X>[+en%NIoXIXZ4_\BQo*%QaPsp>cF?eqqG;&jK[tTGcE_&]lk(6e_\1DCskG#*.+Rjc9:?&3jnheLJXl>dJeaIn,JtH<I*)3R"NbZI<6)%=;U9&>f4VFp9\"1%^1%V7g/Oi%0$T=Q\rCd<PJ0FHahpRsfD#!Op293bFS?q*@g8m55A>:%+7,8FT!A#rf3%]N/jkQ8i>XmmqP,Z)%<cJD30%<;bPUF/%phDJ>-UqGEgAp3]B`f!QTmgeQ"7la)+S<G*9PpoieU2ZfZ/)6?rTP6``]q.tBfgX/Gkl,qJg%NpiN_]@hcMFH-Pm^hj-pp'4D2L!%*e<'o"Lb0b=g+t+ftkm+q.@XLG\pfi:C+FFo4)j;nN'RW#JKqGJXgTu!jL.u]<=+F^K1@8=CWCn*3aM!Hgo?D-G*W4CKPNP_><4C%Wd323VJc6KR$Z;"nGHA*H=7o\Mt88T0q_TZah]'lptdVorf8KGeA%/\NF'kEY(]/I?!Wkr90PbI[XK,QX:N%64`,&Lrj6Z^hPs\K%+LsU>lemc#qW5A>B_KU/3PND"ri*Xj:a9dW=3GF$Z+&U=L\3U.Lf/r&>JKVS0M72cFhif^A%V*ggTH_Y1,>>mN_b,?_,'a?n!6++%pWo:TMY`)KmhG@t;enJWb"N8JROqi6Z7R$KrVNX2HboCIfBjYE<kchhotP*/rcs!;G?R`R]Y0po]i.%Crb-p[nR8kj!nU)s\si-f%G5bZK!!YokTCI(FMHjO\*ArCfVkk`jCo+=a?:8C4Ua6"\Zh*7#*+82Q=hT<de`-Dn+$\c=/'sg`p('et&!+N"]aoU;@@j%-*dka^%o_7/;Zai#@*SfQJnb`!:1@DCB6Z%#6m$5<3GYe>_Cm5:%9udA-?@G\eO&"Cf&H=jKFaUe;POPp)iD4s]omAqdG$`JZMu$M&@[jbm%j$/o$q5SH7j/IK&o=Oih)kb64^@Ba$QKN-'h=LCQ[XUL"L[^Z-&:U67jG36;["+2!SO[Ym,J'[@YSbM-R$b$n]t?P,LO^[BoFO91%]0$4B"ERMe,?W^skF7t>SDF0Q*e@Y>pp9Z;i%)A:+kQi1o:o1Vn.RteofMNI%STA5>RC<>R^0/i:O[*IfSAs+o>R+[K\=PJPJ=]1%KA*Eu'W79F?^iICZBT5h7Emn_%k#0X-U,LSs/.9;@(qggR.o%07b$]*?A%0F[=r%-UX<)D-`27'NTMqH?n?dZ(j8c12kRld$f6,c%HE@G>^.Gg"Etd$?SmlpP;m1C*7B\59DO2&$Z*'uQ?%[Wa7Lu[Y>(8XrCMYbrim$2pngT;s<,_nA;Yl4ZG)EMZ7k'm8FPf<:U/Rk;%LjK$4^N[1f3j(Ija%^uAQ6,")]3eP5\G;`IfM-S?m)A6`9]()PKd#&nZf/!j_)/mZo)dl.<]NT&ltn^_B4?1kgJE<(K3;^`<CF<3%>:X#?dUBi"L**Hf<'#U$XcDbh]fla&n,F<=*E`i`W)TP@MQ#m_2n][NMfWA:QY3a;7ohpZldEBL"KQ.cJ(d#a$+%QmLQZ]t^!8ZI%RZmJkq"?4MZCcVM\9UD:[!$cQL9$Og2P%k)YGTt0rlP>,O#8eH(t]bj1g+1i+(+toC[n67C3fV4`k1F"K'g(7=V&6\k!.(TEddV_%Ba/el?%>EMXpje>2V^O0?[9\ADuhLCjU??Jl<ito@B#/jl(El!MIRI7gAASi0CbENMoUC&Ip-P*?K/3n"iAISBa5H$4DtbAr#W^I%IOkX0;jIfiAIX<TdOdH)j1mYH5X.+Jn[)@NcU,d=m6W8t-W':s.;u2#kor?Z'#@IoIPST805B\"(N'4.5dNQtFTc@D82$?tm[<^c%bH([B">EOk3tt@Sh7CIQrB<<POS)B9bm")>]hdQ##sq9<fAVZA)lBm(](k'h^`pu.^to="CX<$H\,XlnV!r]pqBH);0k^G;q-IAG%`1r*8Q"6pB`gErmCmBHYA'7qF[Ye^pN$2Occe0d`a*Ps2rVXF2'2'"f!$Y_8I(a\(Ul">M/U?p\f5E&HgeTO\hnK-[[Jf7&hu8uK%n(I^Mo`)dXZf5;inp;iXoS3RFmE:>hF6pTEG-A"MOc/AAO'gW`Y'tfop@Z[ks1YrJU?>&6e,AZ\MtcSC(])d\HaEQ`Jd["6r_j8&%Wsa?0(DFWu%K1e&s(gW'rdPG+JjpHM=cqSL)Ced-R[S_:BbK`]"T!TlI:8*d#`H(=5G#X;B*fJJTZg-o'E>NW*9_m"e9COlpYpNi%pWd(KpTEI6:F;g1Om*fc;'X0TDgn+1oo6#^&Jt9HD>gH-$7ucgd`A1+[%]A_i&b'd<$]VE_E=hf'Gi3S_FBn3;:.qO,-`>5ehGNb%M!-73_GSrVM]`4TZI][Xaq7&Gr*C*-fCU/+F/HI0-n?uY8fCQ9Y:+.ab_T02aJb6^jufWW(&^'9atpQK-u52#N#Q2?53InZYi!li%+u;HK2q"']=f)@V5-mFT$^*u@RNL#QRbD909$E]\7M4<DR5E>+c32HM-BZ"a&=?g#)_-Ef`:,PL!NA4*M!1<#eL)c>1[>hh_iK?s%[=UBST9<]iUi`3@Tc^K8>Pd/Eq"'@@Ci7n=hHZ\u];rgJdCjc&085I>SkrisO7O'L_#D`,elibXk$7V&kg,YPTD=Hm@06].<ja%W%bO8bq;It:c=,.P*U%p-D6&B?Tcs:3dO9F].Td.]IEunYk8YiPt]W/@fo%(MjR:keuLfRhPKp%h1MA8jD:odD+5PqJ6Sp7/5p-dYj%1l8Lh![ZGk4>5V7BqBmlLse*hi@bdG"of[j_:F9K)FA9Z6>[VB=<@Kb0+@7hh:[HCRrE!RreK-ZT+e-$csau.I_t=EogF+E[W_-8%1\NPd,#^LH'T##AINm])A=9\CqW]7.eg0DXlf;#EX98k%Mb<?!$d,+*#$hh1%2#;e&.tB@=(KQF8X,L$+gY#Y=gLs<=gLs<H!_f6%;%d$L;%d$LiJ>QuPXO)GPXJn@*!+`QP/u@;P/u@;OpGlZ,9ZST&m=g'&m=hbLrat.7+QmQ6sr8"JMePrJMePrOgQ>YOgQ?mLhoUR%A8Ok/A8R-YfS5VYeqTDWer2R4CIUntCIUo?CIUo?CIfG-2'aK!2'aK12'e3<%>cTmMMd3!$&R[4Vi%(&+`Tr]V[?!nd5*BFoh::d%HBt@1cb)'1NQ>$%/b8R.MnI6W.XIs\8Ql_fRJ2&R7F/?^f/##$4Cq%jX_HY&MMe9FOfrJ&<7\EU>IVNa,]WY3[)gk*1p#o/(<'->%P^1E5.SnO#^t1Cpnhj."$;VC7D;?C3i9QdHq0J@H'g:$?337p`4\Lu.7H!L"(8[TPBMf@f?VEUGdfNn&[)gk*1pbIr=len:(AW9B%QHu(:4nAf5\)D"_Y@VEFd5!<E[7lK6:DL1.U1[Zjl^8OaHDX,bV[?S*29cg0HDX-FSn4prB3H"IT"rs`/?3BO(AV.27;6!=(#G7?%`L`Z8JZi]ijQfsGD-L6Wq0Jo,^7Jo8Ve90EH)dN+WM^),jQfs7H$Z=k^7K%9m\rO=>CWn/o(>\7Hp,Z[D=`uXM]tq7[)giU/b1bN%%m3S0+W`%]cFck!%kDCl7D>4);4:QSKr5EknoRS6HsP2F?e9>3UO((U7<.`%HqhfEMPb*MYA%1)VA55sBmJ]PRMP[eVFA%n%(Qj[%]IcX3b*o12^8C!p7FSUl8h)#le$R3JZon(>9af+8L)/k,QBN+"4jtT^ca:dFZU.kT:DpO\f/,)M26@-6RT=+fVCJ=Y(\jG"W/@Hd%OfrJ&</u!VW1mp.jQi3Lq0Jo,I]-1YlfN%F>*O9(I8)5TMPb*M+6dI$YA%2$CKcjHR\g7;Un^A-Uf1e=:",iBVJ1UbBgl?bFL3Ie%[N-sj2,0!V9e2)nXA]gu=@\9s?.7-&U21r&CE#ge_2`u^H>b53,05.S".??2+S.rAD0%3^&'2mc#81D0_B>kW*Q\/W#@pt:QGaNO%".??;+S.H$A:E_U#"_8X5aG@p^@m7H=p][D(5MnB;GR>2+KK/uaF"^*R3)WabZDY8a=CF"ZG[PihUdWW_?"2]*eMU;7$.55(kt=&%*!2P3N?IiC0atsW5(^uhM*P+e4bTN/W$KH3SHP@aPTVL!8eXZ/V$*3iPp!-+AJeKX,EV^m#`s=h)(&A&%$R]#C7-.dJZPT5@9QZ)%/b9Z49IiD,(hT$]$"Odie1sfS_n<":>38=I+S/ME+KHo&=B$#6bPZSkA:D=iGK$RsC0<t_[EMQDjaXAm-9tVZ8hI)WV,ESo$"SMG%">Wb-.7NLC.Z13:Id@1ms-n"./[_[SQ<I<d99iHX.$.HY;Th21<,#>a[EK/U5j%5Z5j#&Brb"YOiLdhfl@8Ym']cVOC8kbZ[8a]?%QE'F`.?O<r$]nAQ;AE3.N.S'-C7-/AJZPT3;-6iA.'0GFQMFr(huctN74eO/nC:F[.V]hi?=X5&MGe1l74G"AWg$]L#?W,?',b5C%GTWu$)'r:je1s8,19c\?Q<I<d9.fbb1<M(T(<HD5$Y1![e2%&Mo;Yu/R3-3qbYN!k:s)j4/ZYfr+<8,L`'G^1!a.rH!UK4idpdAE%8a$=`+S#%B+KMGPXK$$7AU`hH1-bI>j2b:q/ZC.1**!_PbP^QSN+4Ng!Kr=DC0<tWj.m<=J]nY@5ZUb*3;(g"9.F\UAUYI#1-aY.%`gO#r>#J5@330&jS6(:sOB'e.b:76EH\W;A/-Z_Om/aMM;?@-`.j^i2^/>"@i[YJr+MM"\']Q/>?m36f!Z9oI%A4l40<(lri$#g<%![-L'V3ZCH)#tkp;C6B`.CH7OPQ6[;8u#sH.O7\#?S/[]U6\AK<QcYi7V5h);+iLAW+D.fC8iMEa@sc,OdVM8e2#-o[FC@s>&%1d%1)&@.gltJ;7PXC,dNhA8%/ur=.fim8/YYc:SfF2Akl:[6Qmm6Ho,Zt@LH48(_jp0LkBhE?1Q1ZTk<$o`%WfA%SF>9Bc7$3?SF8/p%HZtkK]fXI6%Wcf(GF7tBk$4)*@Es(aZQm*"SF8.E7s9YJhdOg5j:67F_jl.s*TgUih-nTQQucCc1<d;dg1N3>!'7sO>L\.;_I*B]%0Q=455J?m`G5pn$g](bJ5Pb!>a+)S$V26rc4n+<G:+%+P>\\rTMFMinG_G6PDEZV(Rc\S#f:'W2P!QGV-`'AVjlD4ho[uIT^TNR:%fP]X)f5lHqKmYfAVF]e'(ARsUD3=%'oj%MH'$HY\U>NFiDcqE4@;[nG$hDO@,E%NS.'qIiLaIob"h,E7Fdec.Q3BjOGJ.]-n)E4\%i)Y.!Sk7G'GVZp4n.,O,S/I=urt(%R%h3g)\/R`*3&((/bTluF0TSgM)r6`H2Wp`%W.<)S.Ze&r0TQPLNL>%pq/1#k6d2;LU[=23%7n%/U%Yo=/Uc);pbTi=N[fU"[6&IlQO\I\IZ&LFXk#$\IO2F(0,/,O9*Ylio]?EAePk?LGk#$\g",D/t7<AjS4=UF0JsgmP.#u2-%!r*!(2SG48f"Z6M7ldFW*8V8-;Ak=-DF'1Wq2ffb97nJ44#2WE4bn._Qs"*p2R/9_FN>HQ;4d7Z+kBM^nGO$d8;l\W'C1IY4GS%^%U7=V0T)`6*MhbG*\[7g1XJ6ca3tCRIMbMLUY`<`L1H;J2*:qt03m'1NmBDWAgb*c*Fd-BBg0l!:J_a1jF&[g?C>p3JMGs[uT1)06%PW;5;AmQM'&HG?QapV!5S>.:)p-d+b1*Sb/_dd_6$uq:mSH9GW&>_ohUR?1&+@+8C,LJj?*.]LaOUY(n2MTF9.Lc+10TM$T(()jX%$H-Kr`_g0-*tI06+LKK:6[YXQ-%j'^,6HSdDcEP+[56\G"BKT2DZled6rq(<%U%%b^/:#TWF3G;O\ql$jr5&6Nm'F;3$/I.NYR<#%i381JI&%8,W6!&s+PWjQ/X"dV?p@!k=oGW;U;Ji<fE<n[#Xii50\<8EW/270NBi"q9jFG;Z_i>B7R]eX`CqLdipG>Kdmsl1nIs@W%7/4-GB`t*+?/<^]K)NTi8S/lla=7]VNO/s1H)5\j6M3^CO[2J(8Vh(+>88rR[)cL?___E,4sFGS)+`<W'JYTS."h984<kCOk"NuT%.WS^SbVLa$S28Ki-tp.7cU\H5p6fOr,('421ElhNi>EAt+(h+,(>pBFSl&A3%5Z>/.*)ZMc_r6_]pWM4'VqYN1BMY8J'[\E$>uY/%4<kRD(2XbW&Vs8)LhC6dG0(?B#XkU-`%qIW!S3'>Ub(j`/0b_!W?dcALi@VQb6ULLKe1CQ"Lu8Zb6UMGG_p"-!jh\.`s;h?U6&jf%+r/rJL(O]1>nY&rM!U^#$mQ<0pOliUT@$IK]a.$Yg<S-)N5.&*6SF&;\<RZ>8D1nC=en:0jV"m*7-8NH<s/T;>iHKL#T&Wb'nO.W%U*GF."LqkOWsD*_4c!%4#_sd&&I;2HLf:+$LeIhhMEli4'QK!qUpWT-73J8E!uXNM69iaNMEl\&Pe7P=ALK6U$O!u_&>'4r\=bFG%8-&`6VIPQKJ;>fiG6ni6911ZM#ge,F2A(b.HU9$1caXQk.M2sQ,;_e4pkTk1&W&b`;GKV);F+b6S'ZsVKUP?G"GlOfP62/df\S"'%Ld6Wn6o6)!TiE3R&W"Y39dCnoTQb'@6n1aL]Ffu+7(?#*M$QN3M%PFI"SfndKa7fp\;3HS,$]=[+TdeZW/*\A!jod3+B!dd+lj-t%:ZN91mLXbHaZX&BJH2e^0o&#Yg_8BQHq%b8BL<obn/,+LFGbl2Uk8N9n:gK^^'qY`&D8SU8;DF_ZWk*u1^fua_.S':8/21<RVec+%JLJQ/S!+0of!H#d#R'AcdlmjXqhgI^U^UJFr`VT;<05/:1a.t>k(to<OI/Ih,U)rA[['KO.L\kqQm;ei>g#eR!a-6.E@+!Q)$WW*%&lM+$BbO&D,T2$=q@j.0@S@@8)4hiT67QNHNs$VfTI7SZ+ctZp@Y,04E!\<d#\<.'1I4PLRL($j"<il#?6MU*!VI`#UTA']MYmT(%#_@r,&/'X]`_X\NkTE/=J-eOb1DYf25p/H8O6Jq[UdM5,Kb:^aAS)LpbgNc/+SZf&]bk&e8.rKMj9:)cV0g&R$Y4P(a&u-c17NM9%<fdA4N&C=Q$3HXc]9s<8'%C^Z"G)Ng&93:e7W4)B5p4?AP%Ec3mM!eM;IMmX.PlZAVF$MLbmV)0/+S6VJpS=*JO"sIc$UXqAJn+A%p4[=0R15t/PZJ0rJNu\NAD'3j_2*`s5Tkt@4Bk,jaO)3<JO!fu*HQcsJd-t?5Utif$FrDETs[Kt+HXuS,q]bMN0D:U+HWDkIP\$U%)0p>J"9KHJ"YtWCrNRqJ+HU$?MO?^ZjCj.55Tmu15Sk=aHl^91!Z>8MnUNko=$f"l'scGP4<Ta4FX[-L*X2(a5\;[#=?n"&(IBYq%OP(F:*$C@4"X"%@hc%Gb"\&\-I&>L]3#0MJ=V(Z@A@*nD!<b15s,[6a'&7Yt!<b/]T#:V,.cf\_$m:Y2!09JO&BHQ4@0R:a85Uo?%#UJX"1BRnnA5%g\">WkV@K7jR=C!K\#UE%$;9/_==bI!@(dK2gUHo;2OO9pq$m9+&1`hE$4HQ6QN!pi*+uWbn!<a%h?AJWXk]O7d%!<f\R7Yt,5,pnlO59RjGL\X0W^9k>QJ!>iDMA,kW.J.ACqZ@H>%@I"p1<`*/pBMr]5"FW3J;cB!ir1A)&i!?rmZ189a[PV.84YUp%qZF.6`;BWBW?s?L5\B\@GX!=eOGS6I8r:BC'(_5$,Op4J7Z3CR59Q`?8A$%+d;gMh&'4+_6*)/i'N%.OUPbQIB@[U7BFte`!]!p^%`;0KPH!ls2!tnoC3N6I7MZ?mE+N*Xkk=<A2V+"4B,3BT*1Zo!R(d0S9#@un6&a'C0et4))%nP&/B?$!1@MpcX#:*iK/E95<4i"BK%is0+7NY5=.Jp0rKqgaXL!V(T&ij8m\I8gnW.#!$jOB<$FfKLE$+-5&<MKGjMC`ebd)mF-#'lh*A&M]C+pQ4^98FtQPo`5pnJ)^;Q%d`8e8I6bfuhf+!/JkmJV4s8g^NuP\d3fE/kV@UcCq&?1A8GN!*dg'FYr%U,9&mG=Ro)Y7bs2=I/$*A\dq5B+;'#='hO0n[6Op_n+%qS_q*RC.O_nGrr.17@/)1/((i`s6.BQ=Q#:MIHojRH"B)Kbg1<4s2(ORQ*JR,O7]:+-9Xk@i7K"R;<BgHrS%/!&K!fAmImcpS]M!%4im2@5XIODnU!Mj3tUq/5_`EGk4aD-bjJ=`Ne#eG+LAN6EdQ_#=aoB(J;c$DEI0r?[\(&m+N$a;Tm@H1HUup5OO:A?g`DR(Z6O5t%aR$2WAe.F'm>9Ku1:um(Y6R8?U*F!*dWUZe*H?<hL+@0F#k,ic<t[O//$:r7?<pE/5)+Vi<tlDIHR.V#[>=<fKP*(0lA?4sMi0!]%]Jt`bGie<ZJ6,f_J6*=:nEPlbFe-u2']@LV).5u<"MC$g(4%Qh&/r]:/-nPF-'<mf9-Smm*J&oN"jUNF[E,FpB'<6F+bj;4kZ-OH%&duBf&V7b$]bW&6>n"C^M*3j$Y=1c$3!6?Q67Eu\?442=#eUp--(u3$Krc.YOT`=3O`ADYFtM?B7+`4W&IB!eU@BQ5\e["fN"!;;%'ZULGRS_KZY\R_B!<]n[AD%-.:%<uUEm89e(!)ZV4b6iU!Yi_@N>=g_)0rG=j@TIX>g_SU!E\nX"E;=NaTYr6efDPkn4j4-`<G6f%XostMO=Ld5E?J>7fNljh70:%U%P+2&M\'u!JUjmI@*hnAW*0%6!kPt;QkdDC\U^i1Ig!@R1D%ouG8u0>q0<>6RaPpufN%G$89>76%%=qe`]7C=UMQbe=?#a#WTIXHp%([(gm!u7K+1\U++eoP68t[uXXot"NYcI:;"E_U.[m7*J68R]F\JTm&1\*Y+HWJAj'',KAphE-c%*fEVQU03.@(SY&GB*E89KXq/d)+0Pq\RmaP.tDET(aT9e)(d]H>WEHnJ1C`P!k:"Z7K?N8*=:ZH*WlGG3S@40>]U5p"`V^(\rC7P%_M9^nCJHLb!3XQD+i'B%CMrJ]>9Z"L.!SE#2g,2.)?m'B3Q4GBecF]EX'+*+!RLj_QFO%!L^Fbt@WbPp9'3Pl"cpsG[LN9ei'YUW%ZO4^!WN?9\fm!PIec?>!7$ssU"5jdcS=U2pc44*te\^#5>L_,q-l<&`Sdp9[i&dU'%No4S<S=Pj%cePTXU=,-cjC?>25!'pi3%V5%ZQ`ck0LX"'CLEE_E7]X47$-#NEmoWQ1:Spg.n?(^]e[)LfP=#99!Hp/2F5/c6Uh_,IH>uYd+=@7l\*!,efbUk2'f(ccrUE<"FU_r%a@+Zra:L+:Y9B<D_-T-P(%bMRne:XqfjJ.E=,pr#IT<c'#_45RS)IF;7S3Y_7H'7,Y_jMd"0d[VHN@M!7S+JJAKXDAfZ7C,^on>]%U'-"+a9WFZbLh[PYRs$6!FR.j.iEksBH&5t2Bn>5!,P=h;ZU99g3j*UN@e.*!8*Zi6UkK9)NG@[6fA*`EXkr3fU*_]i34pf#Jjh/%U_Y5AF,GXh-AZIn(n35+b$]&6-tBLg?R'$b$""jnZ-6Dd3&VrK:Z0liN/59Sb]+@_2T:HmE,=g4Y6`4DB.IpP"69q395k>kYnE$0%*1IT%8RQAMm]_5HJ<OJRcX:Q3nMu6,5un/!"5`PSN").q-?*e:*&E.UK8``O%*/W5+rL[,!gHH11Vp>IUb*IE%<?cH!lk@-8`-lm%k^YTf!Fl/<bYXHN(Jtts2CLPSbtr4Q#W>:O/AUNW8hrfbl$X*S)qZ`;E***)'d$sBciNTK!lbFui3`^-&kq"k3&V=5)rXmkFUAs)%E6_%j=PTJf-oPHi9#0'ZduFLK#(08L`_uA+TNHcu"c<`q`+:&LjQe!<2T2X/+>sq\P(D7^!(2KM6b+h&@RGTD!lZY7NX6E#3'Sj"%X:fcG_,t:+UEHg6E*Yk@Q(Y+4_^`s[$4\$FiY!4h,1".m@L78q***]MKYp9hj9:6s"S$(<2WDB[i38@%c%s9WW/?2D`\+i[.'04A%"bhprLFjo*V\U6d2J,<"3,Hg?!5W)R!S/*CAU9Sn_btfG:tS0d7f/=q:.AY*(NW"b2A+T.ES,prX!"YrI^FrE5iV>4,7GNg'H7;d%)mZFZ(`$GLio=k/3D9TuZnQ;eBG6$&@4KVOJZp<<ScZc`9O/DFej8I:KOo6H+kSJY*XP3<YW)nZ,mZD>[]i$$+gZe-Jdn+_,nOm[%b7c'*2Tu=7,mZCS;pGAZR(K"BC1'e4aMP-bpuqNUpbaV`kn*b2(@lPQILQIE@K;\pH\Pl:?ltWl<rhS3Pb83r]Q=:*%IbTOY8h48%fP<_X/L%A!'5[kt%1jftgf<8]_-I0"HO4m*=J5kA%9]A-Gn&F[&EHimZs^(hh@'#qZ8jboCWIb&_-TK[C`.R7bY#*@`HFbU=!c3J%UT[pt_<@q/j@mp%,nMu0YDV"BK"`^@_1]N0*D4]1Lf^gRY7^*1i3*8s$2PQ;'#[(C,C*:J^./%+"FZ75d:E/4k*IChCWnGin5nqG%1\_jrXNKI:N#n+3Y;'r*!ko#U-/`P_i$*`U.Ub\si%$&M%)+b.5D--h+c)>T=!]aATi\Hj\90S!WgJkti2]2">G,%DQkr,nM@4D,%H3K*H.0Bjh.Sa1Tpo;EYB'<67E_i?0Ko%hl?6.+ZJQE*IBBW?8[S3>q-2o`RY:?T)Y:>lmJquXn&IZ=iCiEQ$"MUlUf*Gfg9)N;@%?54iU"FF-/P<Tq323t]oS/#%#9J0hY%Lmrn=&naMc.K'0Q5$'sWXq!&'i6kfK"VA?8i$5]Y[J^IQ'43<qAQS@&bK'OW.M_fJr_\d%.fQ^2YP)`;^4pJ#"ah%kJ:OhsJ@#a!Eot=A?b*PZ!FJ3FaUrn0)uLSI=)iotHrY";"FO3cgB`7.B\<N9<P/VEpo;E="7S1s&&M:(%B188YJnFt!9oZ3&D.u[4]GhNm@_(34^Y5(V:>Ds+^Y+j(`#L!RL\W>6\]79?76Z`#mW%%:8ZiLKV5#Nlle[8@AFEe1dS='S7au`.%)e&JoI"^Z47X2)?@t0IJ<TuZMeshC_kRA]_X+JnJE(2N@H.(Z=<*Ju5O`OK<5UPY2.r^M>1!4Tu8NH;$UN0$\4%JD&DgkS13:Kd3%<hQ4T?S"]-PiF.j/NZJ5:SEh.f<KnKLmEKLb)Rh--sN-nU[2\-hVQbXO-=^n7>%2uG2kBeFt7!e;f=%gdi#RKN?lfk9EblMl*LV,%"lbO"hIS+?E+:)'#<B@8@2e\`RG3b6C!KkY*%BKJ-@FQ17*%(n>a`PNo9AKt3VD/Z`"`7hb+ao$lQ$$>AP3KSirLPX`lp=Erjeaq%cN:TOSBGUl8X1MsiMJO6NhS4q,(Mea&O=G:=\]i>_bt*7F[-rH5*%-"aLJkc&?3`sU'Z:g(dNJeS8u-tld>N,,%+m=5BfciNkuXK%3?)OLjYnWJlX!X^;1N`d)+=SOIHEEtE1VeYi]7SY/!3I8[_O$$I/sMFOo1XT5u%,c;Bj_<l*gD=].g1mKtDkm!&8t9TbZ'kf3+2h%ak42J[Qr-P]=\N*W5#)1"a/OAPbk$J]<"oW_8E:I-sdKg<>=OG,&4I(D7cg*rNC!fFD"S@N67\gq-RT1rdAY*\s\sYYKEq-6@_a*%=]4Kaai;A`Z109d]O$k>Hs@O,T<bQHX"s,t7=^AY.oUo#8hrT%XO=.)mk@1\b`=-PoW#:\a-0JK<TY=!#a"j2aV)?i,oIh$<p<UU%#0<!.>0)j5.`j`q&Ki=ZaXU"qaU"/B\_fe5pSS:Y&Ltn[C'Rls6Ct867j.7S7f^e1=]/rYb@\h\FdOA'AuI8[1m)?*<0gO]#S\;V%#d>ImAWa0`@YdX^aqTCNXq(31FDalP;,$1bjXXrj@>Y%=F*tqXP,_sm2^e,Ah@'FZ".*P$<@s&plH(Mj=`g#T!'D9/0oN]EQpk=]%bbDuh!FY4m,ed_+)PO'rL(<DrVIB@I7th\cjB^?#q.e#'A4eUW)=M"4E5'+h9Z(3Fr#`&d&MRb&h#Gd#U6nIro-F;T!Q,8fr3I[a%`AAT2EaRfVVWDDiA\MUlU/gLYC0FJ.gK_Z]?WNR?@&QkXJ%iRiRNO,]VX=+TQ5#VS*en3ipqKs2'[q#T4N0&9+AZuNGE(7Apo8$V%4e?C,\k_=Y/bI&0QsLTO5F\Z$VWH9+Ac<YM_i%CkY=>*mEjpmgX?&keE*#C+CpC12@8^+L0W?O6=</\qW$K)dL1sXBJJI/P1@K!]%A\<dAG5,eiAlZ5aJjr=4SKqUA(VX@5GuZT:U8jShFcq7u8<ig(e%NOu9GLMA'=\Lc@OckfJDi'SC8o(M>,ng,QDuu;^lSo9rQJ(D%b3qeg<Q,(ZJ?P??3_@*er4ZVAR-uOP5khN:nL"V[$sraB9<*k`nb&%jXX^3J:(f7Wn@iA3[&TKCX"#IodoRMhSL%[deU>sNSr^(D%.ecrlgK.?O)=V'EDuU'#W`DU>=TSd9p=0@t?gjqtWgHXc<QqC&8H?$KP!i=#1/_,[N2i'ETH)[Hc9PE-b:)r315`,I)-&$jQi^uO%08j:H/V3QSX!Nukqe@!K-OH.aAm[-b[&TEhlDnLWcOmBma8U3l<McLcifYjr.V2SM,QP-->"1q\/Yf&?Q2m3G8cuGmMPQu4EDTZY%32iig*."k-81I4<gn2B/LVWip^#o^WT:d\*#CNI0nig+)'$?.@s!RKJSbk1UD&<1I``9F*@p^hJU_9/JbTH<TZ8='e?WQ5RH$M]p%E?7N^/BOotMIJp"Z*0NkFe&<CRoSH("dR,bs&=)VPPS'$YGro`+FDus]]]bLIbFp8H0fqma?YUVRm718X"ln';a:PEI7ZjbJI3+e%^T%a=nt$IjJKjRM!$*KYhF+*<WX3bi?ZCT+j=:]OJjTK][?8r^Y:kfus1?uUqPoatQ,JMO&mmY_UoKs#$M'GqWg%r!!EP;cS4Qma%cG[>ob`C&B:>+ONTMX<C9rM%b<>.uiIFX!SARBGM=P6bNW)iVW'?ZSgjYZYQSd\5W;t&7%eZuBK:q#^@-e'aFb*e!5I$TLeeV(eN%?T"O#fiLlr?M7AH<L)'jK(A$AQW01_$CH8'KGnH0FeF]H=&,](p6?9uR:BT%M9s\HOu`VH76.'/fiLqIBD.T(8t(1I8[GF;VHHnZ%Ts!'Mc8;^oB`K"FWhX,?j\59GEi+PoS8$s$BMd^TmqYb[lt`Ja<AYBSS:0LM6>'YNT[LC?,o-*+>%_2*U"J%"*N4/TpGF@Dp=0g+%Spg9bP%S-EZD\\<6.*$BSl#+HX!\TFqs"KQcbAs\8MtpZ-,+[ln[#Ej;#Ta]-PSiCao`C*^3XC*<B[\4=&15rNdXJFI0)ja^2cOT%['-!&?<'`KL%\Lo/#qm&'ijp[C1ps;9f[;qQMC?GQ;uEJ$DW%BbepH,C7,m9jf5>N>#nKq/ZU:tQ5..-jA@dgU1K07W2M*%2njS>%K&\?l+?7)]!eTI5-QkC&0<)m)JDg2a)^%,SH3/]YX!]#L^3Tj4j/YqH<RinOWp0lrNj#%"?B*P:_srus.]@dg";o0\cb/bt1GAZ>%XU(pu'I][KQ*UarapDY/^@DtH2-to%lH2s=on64X?Tk*Og/f:CVtP<mW2TF?'2#9Qon8cK?Zh7))QuG4[BH/u>OAI=1t;'G'+1gh%je6i`T$1-Z,-@lCQ;uEJJ/hpCTP9:eT$W_?=&3KFiX<DTN?g[WGfDg!lOI79K@fSMF]W_kYM[1^T'Qqn^Ot-2Z9*=0%ULg3mbi4`%FpG5._<Y[c*PCg^mbi4pk,IG_]RC*hQTj9BlZ_jp*P?h+YD_`W?GD-En)3k#Gl8+Y0?NY?ofIEs%USm?GOYGL]KU:'H_4$=D?\nq%X8G9sLkJL?h^9G)M."%`ic\pTO/&S2mVssWlB1*^Bp-HUAPSRC3fYO7\];fK,sKU2\&Hp'F<&KZj6W>I8'/I<d7L<Ila9U_aVn_D%2Ka@"[Q[I;Ys$a4-Q?VY0K%!r?ttqn^sqc=^oUjX2$n?Q74Sc:bl/iF9ZJ_rE.72o"ArSa4\F-b2'"6R+N\]67@r?`Wl,fi2CBag%kr)$W)Auj/,au"IL\s[NC*q?LoI(p2'FB!XA.hTKE<gG0d1d`^Q^7>)df,X`1c\<D&ctc[*HmQ1P=sY?-I?9Y.$Y)qR7seq!_oO1%/?q0_>&`e:VU)';ZiRK))2N%r\_NT0E;Sg#7lHJQNQdrE$k,">Z.ta8)FZH+-I1_B`1;J'+5J8`B-;>RSP>M6'?acuk0?BC[[+H[%&^T#>mL0No"BWk0c9rLT\_J(dPa\;iEbD,^VE(#*'*[1H=h$6k[pE\7N70SK\MG"pE1&N/E]"<)B9%+D@ErS)p0D.Q7.Q/$3>9M6%$tdf'!O$$GcGVhIKpXZ9c96`H3Klin>_8A"M)7M2k"M4_f48L=A0H0gA`cZea;%qA9J-G&R5nd@-h]DRF2jIWF/G%ZbK-2&AF:j%%B5!NfbFF./6359(KOoCF`1/8eC'lb05XtL:dTAU!;e2:P+N[cLe)\'`rZ^lEMNmK2o4ElE)kAd'VP)N=baOZnH,?#4l$("5Oh$"Z%RZUHj_O?TYKZ';[8\pR[VpJQs,HMb#<[Xsd)4=$s)4=/GXI4[\$4(FEaQuk:iQTA"3oS9s4Bk971IXc>&9;B?N&i!fB8/n&$"HG:%cj=1dA3$6Q(c+TM/ZaX\;t-Fu@a(45F8.bh\TFcL_Nu]rhLY0-AF:H-ARtZM^'q[S(pB8#1.=s?_M'Wf1I[!N;t0QciQITcF*MiG%QRQs#OI;%l`D',&1,<cCpbFUDNqb@5cWMC)9S&DBKe65r]kfcHR=_>f$X3g9E.[6s[S4LVT<Mm7`#LrQABPZL2-eche;_$+Y[r]D%g;s\+#0+mGRmFJV;=L,4>G`gITp`,rbc!Q"-F%->K%+#W18&"HX2L;QGRca>A^#\8J<.R`63/STZ"8k&=!b+_bh+pT,0Q9,,N^cZ%AjW8H!o$hL\M@d@*3M6[b1J^qr6:aDfV'HuY)G/Nc>mKd8TVt<0rDa8$(3Plc5[mhd3PpBqF&PkEB;&n:WCH_r$DkSJC/Bc88*rf%9$]#cBjTRkN_(uqL+AEX12MBm7$=ggjHq$!7a'bu'0jL(V[t.6c\i$(+?RS:Qc%uQlkgcta4qLn@?-DcR9g5#M3p#T#%k8s).Q.[%U"WU\N0uATYEbJ0`Zh.O&i7POR*/<8V^d4V7(":HN0uGVL5L41`bsdg[_*G5</s0*1t3$00P89@gPX1G=>=En>g16VWEui7CJ%O=%@_,U/WaJ<>iAD`*L1\U`+i]p'a+P9c?nOc;6Gr20CLoPc)),^1Kubr[^)U<@,/[LbO6=ikjs@;5m$D1m@jJsZmYGu*"fYeE`e;De%Am[5)U;E:cE]+0=<#Dr?TS^%9VO8lg].m/kbYYhY-)c#:5<g@/R'C[FKId_TR4H<G(nN7u1`/;WNfUIZ'a"8R1e](6W!=V)@-jbD%&u0Fa>:njLQq[nkG)eo)"(Rbs!j[cF1-3Hs?^^bbpF#lp$CAs/ckM0VVs?oGiFKDCcANP[LB=5f\ND#s4sA!m'-P/M1H1=#04ou=%-p_,hW4OD*?-Lg.$mi@4BY[q4P?gim:0If)BcGAbA[743*ESoP[Mjk5(@@<^]"f@Z)G*mE1H@)NUMu;2#Dl,s0pCVD)Hj(u$@*Bk%;dIVC30G+0h+ijFUQF]VPN%tli_55>RZ!RJLRV3^feILA`e`aY10W6sF"sHL@Qr(fFiFHtI?\CtAhY4)*78#M>7gCGR2u#k*XL.u%N2&Y!#AGe5j2Zd/(GdNnkMluq`QX&m2Mt$XAi:WTPsfZ?NWO[:)AhrE,3HB(=?'p%J0_!26?\:W60O&bh-rjkd4HNRKftX.YZo=b%\.g7OHSIT6QJ5l'^d\%O2Z!qn<chfZQk=<4P).e#7_mtU,%cc'E(GT*IUh57/?d%f4=QjPUd8<Hrf(&4MIu4_L"0Y0^u90$X;9h8%iH$;GMjXX5T`bUGM/=S7$TLJ[:l*S0#/Qu[&Z<Tig-oY33%`F/"Qm(YZ#@/OM:5q(XTTrYh/C@:c]QUa*&+`0`+ZDchsgOMBd&Oc%@n$ieI:GI!ERaIe';*5PIR>\\lteYq"N+kL@4mn.i?Y*NVdp,*=\QCGpJ9eTJ.+(S-On;]&s1@Ik.B"e'Vp@jG)=IQVS(<A'VpA8%>R@]=S<h7?B&P1Wb[n%XhX!1Xb@2G^o1Fh\@]$fsF]]uKnLJ,IN0CmUINcX>0qK^E%-"OZ;/[<oB<XAUIk!Y-%MDY?DaTi2@Q[On%U;UOrKAC!#b,QZ\WTZ,OO2VNN6e@NH/C%W^k-:;iDRbC'*fHHRL/sRa/0H1&,p%u4m?[<_<ZSRV-W2[[`QWKm91V/\1W^)c#Otn]%7b]$T=H&#oSj2aIbTsZNO0]1m+uWoK@kk=FE.&=Z74Fh5aZL?1ji/heV8SU%(5nUA7dh'o/BU_-C^Z$;2XRr^8K8N+J7g:8\u9(u%/r7>Q>]P4R`*b;ug[IL4#)dKNnM(Z/`Ct-da%-USj1OD^,R00tg1E"1(b@eYNVP*Mgc";u(`,D&M2e3._LWN.=,bmpMiu^CAkF!p%8n+uk?iUuhYuf09[XsR`XidHP.#GWHB"&L'0aa>sHo0ug5W"#UD<A!g3!,EIEEAZ5D9Q:*B!j@;`QW)7Kj_GA-JlOl@(@e":0WaN%m;ulp5\MJ)UlIS!R$fHO.RBmTk)(&-L>E_$=%oD&T`inCdP8[E0pC;Sq?p1k8[K%I`L4ri]G35j/Op*sA&3L?Yu](Z2S99(XXGKP%&^+?4PM,F8Lp^]\kXR&+M?oF!n.(8\U1ih(><",UUGkH.'bs:i_f/XAJ6t[`MPALgD.0M*F4ckbU1e.O>8Sl&%NF4(102U=2L>O\%Y@;+JdH)T[77B?)P5-S>%NA\;nl<oX27e1rX+1Uc!4#VKe2:2+@]P%'WW7$=5XJ(.>SROi8-t*Q!]!XTii7NfP^p7n+LAM<Qms5P%X=>r)5XoGsb>\KKAOe=N"X6#8C5Jnk17Tu@9GNYOLJ:GW'.9Lt,,P^gX<AdZ$:r5L=e5s'L1H$pVdeXWHR<:&J;!V@@]>_K'+HCq%<'WqM&[>;/k_Y%Y==PFDF&YgmWq[t]BLNW^'19_AW43QR6Nq#-'bEaO`3$Na&46V3'JL1f`C.&Br[^D?,ddE(Tjf6Or+8RD89oI>%VjNhfonW;k+LA,0fI7dF[um5U%+'cr@$qN;Vn&E.5FQ.+BUL/*5g(>bBK;EA(]iaD$+LU]fo\"rS29BJi3JL8EL]8VBcoNb-)]-1%(0iJ*;DLV_P33Wp\\JNDN%5])cadFo).\CX,E@Iq3ha\b:9#_XZ9Sj#//Ps;$*[[q4O4jqjWYMVR"49bL-[W"/-(G*bCqb7L4JAP%7[l0;Ch,gL=>!L^G64'2U."p?J`Qr'OLi5JcDc9pQLi=c!8O2'pnL9_nsJTe19?urL(,#$L-8JnB8^9]J_VXSb?6"8WWe\sM%fYS%^iG0)J\]ErN,W?13F`;Ea0$*X8/&(@Q7dWM?tIuU$%=1&3KF?h-!31*@CZdrk;"2"603]B*sYcj(n_[AR=Rs8<0djS"=gaKF$SiG%Vs(X`1.rH^Am!T7PkfSaO>789(.akUmg,`5:p'mLds+t2<+[!"!L7@r\Y(]=2.]lmA-+7he1@i0a;@riR0+s$ZD8[1L#cT`@-*O[%'pA$;@:d/S#?FS'?"I,@FtWl^,mbd2ElpJV!6_>aZPHZ/3'`#U'XqTRQ>nXD?tG4d>Z`utpmGQ%7ar;VVHqINQ5TC=J7V4'*FP;/%?j;q!K-INTV:c#OG#3AePpQ/LTQ8&TNI].hB:f?,c<L>e6"L8\1JpXHj)\'fE_m$>QM`p4aunY:!L5Ib+:G!8EOnL[jc&er!\"L8%+HWnEo)pLTABc,c=]/?'.>rs*OE/WLI"IT(Na2fdc39kAZ9-Jr&4i5`3!W@DS^i:U"gH#O$k?Og%2at-i*C*5:uqC&\c"k2VOuQq%!+:kfaR'e$SC:'bI\G]%7G9C/bUAYJ$Uql4't7NM]0]<8ZsNe6?&!42:_]G*jn9'N_(cb8?N>/#!n>.TSd"dn-j1XNh?s>Aa"0S`%/9hnLmtIKTiF:<U!c<O>b(8>.K$"+t%7-9^:3$ZH*4Rs`@`s<FSqns'W+1E1#HU^Q/I.e7(Mm4sI6j2G%Mj.h:jkZs6ah&f/r,rL%'6H5KBU&$u$(1s(%N,WcHo],M&u!K2b1sh""i(^t3Q.Rcd,e(8F$u?^[dSf#9;jH;ZJlTKpp.cLK)j+.Hjd`k"S62\R1XoQQke@9%JX@1-Aca\;Gq0.T.m_Q7W6Q4*&@4Vf!\m2enI.*AS3@UB3FYo>&@9/>">NFEn-*9]#_ZcF3T@_U+QeIh.m_B6kC!MCNd4hBO?'b5%'-2lh(*Ji]Au#D4a=J#*Jsdo$.PPqf:K`eAQrf.fc&r\^XBG+hJi+p/feV?Q#a!8LF40R)k!UhedH3hL('3Sd/enEMKJV6^3&;Z-%!M!)6WXLncoMc]I:0i)^+m0Q+Y5liX0n9:;-3c0Z/=r70cK%#0g`-TjOQ#=EA!=uQF!-kTL7>TpK:;s_-l?h3KZV8bF!/[i#+PcB%f*^RYjG;8=i(UjXgB,ZOA7?Eq%QIK(^cB3W>N"X/p0rcG_<&d8K$#GP(4sfh";..u?umIf.>,l2JUS\.c/:,bmRg;sJ6O<Ec/:aY%@:H#mODU-=k+E8RRc*>$i9akOk<M:Z#+R,n.r]RFY,9"Z[(Qdu*3b//g`-l'NaQoN=2f,7'+#Ll(*\<[bopDW5g:HZPCUn$?5#WL%Tg5ml22?cO1>!T;FU?\?o$\5U=`LT?^h1R=<e6_T^Ij'HQ$npL2%-HYY\#2+0d=l"PL"h;8%chEC$+*P%b=>O!^`>%#qSVgKI^DK%B%]?NB9(X-'Vm`%9V%=.(_tKWbd!'K)k:&O_LaSa]HI[.biMn9c5a0]&>V<uk>.3%R-h!uc,'r(UmWY:N&)ioisO)%#bK4!F5iq:%LbpKlWW[$2fY.^DSDm%0U]]?O<r`?Ii,B>`9L,r.qA#Y@S8cHffi1!d&-u5]TK+8C%:SBQ'l]LIk"qdYL7(D;Lbm9A0G#(5Ad/<h%b[JMU)$H@YIm?7RJ]sf!Yo.'^Km(]`F!t!A#+7i8c5:(%,na^L3@(ZN&9F5NYVYQQ:/?ZGjtN-76i_9VE=rAt-Fgj<+FlHd`/PpP%+XU<A3TTHM"ILA3M!uXLGNQQ,"#'uT&^b0H<Wl\<"G90[3FG;g@ES\g5(Y<nmO$"q^g"#cb5nZ0+Nn"fjC$.S3s^EiMn'UF=XXW/%/r+6X"^MTuHQ_OX:kAjVQ:O<gA]7,0ct2/:'>CR#Ynh^i#s-9)ZGZ`p0.W's"^b<COp,2.\"E0OLt=B?b7SO$+Nsu;$,.C!c:.6a%8DY0CbE9Fj`g:1\?]6\Zo"GrLNob[D_Mmop^rrt_`saWAkTgJI*:lWCn?TRh!\YpQT3?Km:`0TAM37$g<!J)D*@_0/b;Pr.45dCW%CWt_Bb[X.^=U@0ViFPGQ3.oCH^cVgf("YeZ\?&T*[kkOq,a!uRZ6GX)_.=qg70](njTuf.G'FH)/N^TL#+(TckSRQ*ia=RTXKj=g%XE)/O$!mgZ"0NDoQPJO<s0&qJ>IEN_Y$]QUcnG>W9iXYhWZH!oK:u]^nq5gnK,`LjdMQ]<KE'f9,$%*Df&#Su]?V6:FD<6SGLS3#%1+k)'GW@Jn2knKpS(&$U:>M>Wk]5CoWPRe=g3]XIUW]W4]b+NkOrYaXSG$(",J'Ck<`m;,e(u=p`FRc.n'U6na'9k'*$p;+I(?kE%H@1!p$)Yb0Hh)$70/#Kf)\M4M2>7B_SJL2G2:d@#?LIf_*aW0"(coOWh1*nkbIoUI_opk;e&0Apk<KkhmKR\B0;k3!H?_Hh4P'\Z%M=V_)b:+2Q%kf<>p3q<$8V-FEh!G,]VB3Ooch@dnQ$Ol/)8*n94<ftgk=4fYJPD;uQ)RC\2G$)$X"[,YTn9qk,MBk@OBboRI[:i/%dD;u]6'*U2&EIC@KJueOggfLY/B:5\;f'2GV.7)QgQ_B[I7[Nh7]SjlQH\,nNflD#Dam<7$EsYmP)deM=>DToNfoDsP#2cI8.J'T%5M`lq;0'>C2a"L[HkR<E7WKgTKNuV`+YWF_]OA%V;ph@m>rhT!PuE`K3VDG`Vk3h?WTPH`O_I-CCb=df19ol+!R&H!`=(,;nnM%5%r^2^1qRQ)SIddtg<Bkp9)f)kFhrSlXq=.PGCArNA[Qf1*+nMuF:4DaEqrckNhTT8W$mXT]A@gHT?P:Tc#inW$-+P2VcZAIMS[!Js%W)p%p`*;lZC)X)&nUQXp@)%"rT)\+\^;.A(a?'=O2"hBtf=Oq,%AlBmTDH,:.puK-JHc!P?ZHVOIV14eh)F,g]5-Cp$Z<\!NQbJ,%Onm-W11.R]jt#')I,u8LY$<3ps5P#ci=8sb935NQ/h1F@BQ*[F^oglhDqDr%];0^\I,]HY4^5pFj()8eP?ORe*K/$Y\7SKj[q!*g%1+_n)q^>P650B-HCO%f7h1!![GZ!%t/>_SQ7APq*`>8J;nb'_H%VdkJ;SV_2XVO[`NTJIZ)^47_-ri%G&OOX&;6!bkGf\P-.'YK/%V9:hR8tE@RT@IN2#DLd>b;dp]Z<4oLb;dp]&Dh9Q30&(ufC6N"5@-SVRR1(9]/K^5$[>9bO+T,@BL;@"$jc!MiK3TJ$#-;'=R%R_%o7;124!I@CSWK$VnC<PSl)Y,i`_M/B\`P8MdSuTe"iR!oBN<)p]TlV$&VonDGsW1mVD22e0d3!&2BZONl:=CCBg1)^MZHu*_`o9c%VGA=(QAbC.FZcP5I6obi2B]Qr6DV+DEP.i3@:E=Kg76qLLM]@7O't;^Y"^&9BcNEqFeg]?0Jhgb0OPj?X$n#f38"q)A't0Qk[>PE%k"'&qT.$EqT`NQBc`BJh@#(5\WRJBl$^r5uasNFk=;fPjn?NeRMTbYbQY)0EnIRQ3E$-*"==rB0(_/m0RHR?t].+@S.!;eS)5^Q+%4R-Ak"(!Z#[?@3j0;1fhOBdo4i[(^Q=d90T_@1jg9B[5CI@EcecnVPM3&Mqq5YCr,R2CW/(fbi0KOO6-R&iIaHr$#M#neQTQ,Rtd%>L@e$Q1tPj5-L;5B>V@2JWLSjkDLuq-oBL+ES$Y^@L,=I4f:$@=.%NY+H3PIi\?tC$mc5VZXucS_+N10\Lp`PeN>]AQ48N'21[YP%',k?#Z%bi2A!T-NaSB^a5QjFP=j!!R!Np:,UlJpo1[20@:BqnFdn8d;g#X/%gEsiT3A+'rkD>0(bg:g/R'YNZVYO$/FrEg8R>,3I%%d^e!"h2".qX%^o-Oc7%TD2Xgg#YB76KR<Wk63#hS(kc$OB]o+>9baV=sIsqY4j40/h_."0/RiZB3_Ttf@ts\5a1!GHKRT>Th/"H%Gr`r+1s$ntFe.V6HJV'(3HGo#(3#(h-Lf^L*Q1Dtph]U5@\Y)o^7S2+_F:nPkfuS^j*?f__iZT;NrKU0,\5.c-G?ZjC-ja259QE<%d7qiU4:r7THka13qeF5:'=,elG4)?!6"Y0)171B(gUdlKO<I:PF]2sdnkh>nFu&u<1C#?<5)QIj?9C7kc.:qqKEsY2PIa2Y"KQib%&(:o\17>](Kn^"dCp_Y!Mi%MfC5i`R)8KG+L"'b,YRW'ankYRMa^$1adBlZ$9HgSt?#mTll>Qc'/CW^2S<&#*%;f]#af;.jPZat2%9/uGbm(=#X,UlOqYl5-Z)Na?W,ac:^B'BB&-a^#apR^&U/:bm*B[a%5/$6*FV=dIO%R@Zfc,@o@9\E@BF-pNh>U:aR='@Eh'WHNH%>&`Q3?^\th9QHU8e!k4=,1RXZ`aLVE2\K_BbTeII@cpYqka"tGpl>j4@Wn\7YEbOSLFKg'\[3\1j+HEF=-,7o*m>qCb?Ajs2P;jc%,8%67PaD/Eh&DWR2A6Y%[;%fDbnbsi;hEL>+`n_RpYRKmE#Po7P3\2A99S[A^&03*hN+;:QE4L%Y).:llh3==e3Rt<"n&?ta8koU%hjr<T>H"X_Nk/!P+P$U9MjIB6Sno[%KuNp1DkSFi=K7?k4QEAP>"lqM`_j=S;MK8o_DHmfMsi2X^G7;Wh"b!e\AdJtXc]k#=LnPV%0/qeJ]*:J)8+H_'nMI*pV???@^_:7DXBQ7pk9[JBB^L-9[E*.8b97MbY!HO(ig\(<^j9u1;!qNWo?+UZj\X?FhuTdX>b3)/*r''G%YPnPc@V@u9*'IhKf=M'@MsSI[GKD5DF%^%eF5FBO>j=%r]=t3#]>!Y+^<keeX\$-*E_R'b%S^ugH^/_6LF0Rf8J/P(6^&U;+hdcW%TlT?#e,8@X8Zj#g+ZC=q2^\5@2d5#r2YJ7PRb]n]oni"EaR5(\K1!f+I.A!PU-XDu3cuOt'WAB.a';;j'S-"-G+W*$=,i64aH/lL%(\9r[Z0[cVh,&H?K.2Y+W81@%!O8F/&6E$%5@PkJ=]@/!U>lQ1lX[\M]WMYCf=f$N-OJ4N5]B3[Q<9412<KhNXhYCm(A\<'V6Ye=%c66/oXAGWa!.^%R3W2]aTemnGD3\*,E&[CN<`TA*U30:(ALZSH!b=@&,uVjm0%"RpQmBooKT]MB:mGjW&e,,.hO&F211$^DccVAt%[B=%(!lWWjZ@Z3PfGW1.Sbt@F,e/G]Pj_0i.1DjbOT%ubD]bFC@FNesj>>H]j<]c$")8g4DF=%R&ru$K&$:k6,e(W0XjF`!UI$9Q%@O&EPhcT%NCP/(N5,Xd41NYJeV0%bP+S2QcT!l?keuIgS=p8Hkae2PIA6:gWpLS'?/BGM+'"Gi$0,RW?dY*H;Y(J`nA?@jAR$@T.%A%D->Z1\G7^T*9X!=J?bQKA5-:248rAWG8f5g9:/F"<pt*N^H#Eh/X$eOSTigU&jp7uo4lA"a`$7GfD9gnOpYp%"(^b_UdC(Up\n%(7sW]("(0@jVi(+:8/"Zg^``4)42T%=:UGDXc>[//oH8W(H4TqgQ^=8%TP_lbmm\paWZi3b`H]&"pd;tnTaLPFf<Oe=Z_^ZTJW47%A/])O)<5=:3tEO-B9CDtjTJ_nE.CKH3((9h*$K?.O-$d\RK;6fNR5[Ih#R7+*md9n*R>TuO.#$PEtkd_.US[On3c@5h4*EYbBm:B%k_5hfK-pD@"qKp6!sdF'I([nge`+Y,RG%[9E`f=,-tU1>;ofS+83&NK2<IF=EXocn[\$?dj9B\\jeakrZgBos9rT7JgO#$OdQu/;%oSMnD.O?@iO&!"'TckM))d/rK_!EpEQEMu->lI5ae%''u4-)f/Rh;C`I"p@&)N3ckkXMIrX&D+G6tY`s,&Q!=mBj5IaP?J09&t\o%+g\N[LfK0S7)%_"g<O2jo4We4;]-p\T#W>),a]]I-5`D%X&lp`X"gedJ2S`4%+)/f%23^3$M!i=8@%#aV:#8K8@5lR83L0%`:b?!%P\G25OP*k@Umst3TGtKT,3-TIOn<UIRZ1j$+A*Zn7rjD*3A[I#o)RmkFm=MFK1:YJ6FlhMb+o4DPhGt&=]KL?[ENIMRDX`M4K=U9%0-fZ,LmBeO;3R%#C]p.`jggB[4M&c?A:#XLi(9/B;/IWnkQ,\3$t>bI%5!i6#@!rC3@ILhZ^^+&"&qC$XSP*qd)N?'>r^8`3*(-A%8J^B>au73?;QTsG6KB:O+LXN=jEbfe%aGsDMd[AGS[#H0<E+trNg4F9U3&/:g:B@e9PCi"J6XW$.mWjg>&d%?aA/M<#8.j-FI#ZP%Z>e:W1u?dSa\#O'=&SeT=;dB\"i$3n'L<sN#TDk=Y>Aed#mnefi9G#f`OBC98LYX;><@q;X;ibC8N:N=]lsaS8M3juNq=LNhY!aW%a<0DDd<&k+^&0mCRY50*$DgEA*%UXHC30X?W5\,HI.:D;LQYW.1TDKPfAACMU:rPOil=qsmbO*cqer+4Q<`i4F1o8"kb5]$<oOa5%rO"!B`[PS_F(i_Y?Kes<d^^BejHT1V8qI@_OqZq3mQu6tJl+b)1^S:th1R+2rG7\0ct&oD%<<8R%.s-C]VkO)ep1MMl^Ng_VS9H:%!B7H4)qn9!TIK>HG=3,.\!Up"3;YcRJ<l0m\23XhB0VEa'D[NqW?>cP*624/(AEN8YfA0H(AB9\+u<eCF5"9>>V(GcECcJ<>eh:A%dj_Rf6)R*DTAE7QEN5aHS-1SfA(^!.5SEaIX:1rIdBR_nYoC607S4cm;OOf)MWrYQ@W'CMYXlJ/VH(*hOCk:5[:!+k)NNS\[#nEN%7D.KeAMapkpG28De"@AK:EKlO1^s)sC]s6tFtsn?HmSH?'qY@Bko5.(LI+&p$/'tW4#;`G6^&.Y>!"NU%dTM=n"eJ+a#bHH';(A&%7CEd`X`dL.:`>Tma*DUXTb4%^&@[a./Z2_C6!'&NZG\?P):(h*S8Zd""R0/CZUBn$Ua%aHe]#VcoB$Nd9QmF/=o?YJ_L/W"I4Yhp%Z:]5;Q%]oF-(#5EWC+3ISdQhP=laT[+;3jNaI=-3J8EQbU/#+Th<m0>+Ed7,LNDSH]Ip,X"LQkVMOS6#.3R.k8'?YILT+?3bS6ip%@4[(om!]#a#tgr$LEHU(?QrTXmDB"$H:dHJ":7U[(9LD!#*P!7DCY_`7:T]e-aB),en._ZV:Tct>6FN(7+WC7]N*Xc,V1nTqYB>:%Cpsl\82.T#-G*Yh/N,T58?n*f.J>>!8F8AH5?UR:3!&%;:*a;3Y[[hm+0Gp3:l;>q&k!q,;Wu&e7R3X/A(d@[W;0OW:F%1:#a#g,%MLX@>PU03YGTs,A<WT^*"@s?2!.UTb^LjF0$"18@@LI.&:\0_)RLp_qeI5Sk1PdAp"n'DA)</u19+Mp"m6.d1g2"#LI`rA<F&V?^%H>T:YM(&%i&cVKS_hE:*bBBj)e#tA2K9/Ha*4E\/[U1&Dj?QY"05ckmBWe7DTQi#d,kS0LI6OhB%7[Z3NHXo0,S*5:h)lXuK@"9j%cZemc`IGNm>jZ-0>&qUj&SE-p/pfk'$lK5gJuhB+r>*klct#[@QPQ4>&^M$20XFc)*!mJ*T<AdZB+1P']1>4WibkW&r74?_e^cV3%WDR"i4hDkSmNrPl"R&sW7CGW6`\CAq!/a:J]>Z2>8$&p2m2Xu<hEaspSJ_DtbtPW<mem3?AO1S"mZ-OTULZ69dHkbE$seoBUZ]L]%8WGF^58'apiO2;=/^3"Z^lYpioD"2ZAXCYkSnY;>M4[[:8h<gh---GIC!b52.jS?n69?XW0?bjP6]i+Z^8g5pF?ntq'&Ra9Gc;K8%2<hgVjSgI;PX5lq*/f1Ya9to7;R82&!2`VCb/_P53pjTpFed85;IBL(N;t#=hP[*Y74!+V!-IO_X/#esM/\CJ##^\^)4tjnci_]>%Mc$*=-2%1U4Y/k6jJMf)>U$qCb)BBr48IGM/P$,HSmV^mpO+/*i"o:LRAD2J+%bQ#V8!.ue=IttnHdd+FfZ@&"jDNYf&kXIJCNX0%d5"HHGJ5@9Pl^-&=gg$6)u$]c;SV:[_G%/+XTtZV%ldm@-Q730,nd$7=MtRdh+M7<=c!h?6!fZP:`Sc,W/D_%"8MEMQkh'/:>m,U%:4Ui1Wbg](?8o,T@P2EVRN<VaIFfd:/U@g$80--,:L/8eo?t$eB^JuG.(&".Kk);JX$_3^7n@I62aY(@`G+po68++-c]:o15A-ps%'>Rn"?"16?o%+1Ub5;OM6dQ8+euC@j\<icar?K6SWu5Xl/"gEW^)>XQ/:Igp$S&#g5WSH\oSB@AKRrc_NI3\`j!l#D8ogTuG:CtQ%]sl2OFM2H_\^8HaHE/on<u,-8h[aB?3[`W-K:G;mS2C?cU^WW$WmVdo1'UE-NVha%b+VDpNrJ3?-b4-nL>6J@L0QZf6Z+`26a#1Z%+ZJ,j2`L>blaY#agi!F-T6QmZr`lM%2!3iD)"C_\SUdefV>5_/=78Z5gp5&&ne\CPQDa(EC:#8=("f7$KkiIeY?^$X4+5EH(kVS(%IEqIf!&FE@R.PH?U@cE+n!oR6)"N2:!&e>,G?oqRQl]mGF9.I9h&T#=/c-6iCDgI96;R/A2&Y%?')++8.L`KgDd"?_6&J,OfhM8V%^7l#OE?-Pj`re*6\E[sTHskO&Uq)>HL"$;U>cE74:OmSU):%-ahJ4%]=ZX.q?&aB)C4S"N/BVlRiNr_qDAVig,oPQI*@Z32KHJ8W%W@5f<7*n%(8IhPE/j)%AF&]8QGR`1r]Z9VcU1iH?(hCJ]kYI;r.B0Bg3HG5H-/K;G6#-V:FaB7:q$']V#"Z4+?<.%SR0?mKG6F"p%.c-3*+Pg^rI^rVW%Ls/8#'eGKq]$AoW'E"=NU##`=ccn5hSq:qa^$(@,6QpEO_Nb)lqmaJ)i*sQS$aLZ>tW>9#3)h?,B5(5aNT\2%)h<m]6#(RRhZ<i,(E;1)bQuJW#)!f)(,nuDp(d@g&'/,I_@#%$3*@61:q&A+46Ct/`e#EM*`ij3o1<AN71CUhTUc2\pKRF7eC$"2%YqdR@nB$qI<9!U++/ZLt`FObj7e-sf+,eIJC5qcm\5iX,d)s,n.UB(b[2EA3nd#sd]k0e_^Car8X;THiCP8-nDaoQ-2J/nYa4bCb%2*d.*P8aBH!*(,a+]^)=O=o*/Pe(028_:"1m5u/BPt,L/VOUY4`$g)cG'_@hIa:-:FsWjCp+i?&"fChG43T\H?0cC4Z<V:UZ4>f2%>"rd8Ed2_qg!cHl*)^dQ%"@:Qg`[)dDNOX6dM"hY;Hah/rV!><%/doS`:`h@`[0@:ro&X3PdMM@l@9XEm`tM`C4dlu=P)c5iPH(Q%+4%]\2u-@BhSNO.h+\K-p7qZYNupRa_`sK;s5U<_n`B*:If&LCJ,&Nte%^;/q:i[`p@Z27J,AWNcbFu.T5PgdrqbrQs75h9hu<NJ%59GCSmG%*MYC-6Bqg\V@Da9=]>l<'K5Q9o>55ZLm?:q*~>%AI9_PrivateDataEnd